namespace = MECR
event = { #1.检查各种flag[on_monthly_pulse]
	id = MECR.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { #取消cwtools报错
			limit = { always = no }
			set_global_flag = galactic_republic_formed
			random_country = {
				set_country_flag = flag_debug_yes_i_have_a_think_tank
				set_country_flag = flag_debug_yes_i_have_master_builders
			}
		}
		if = { #星海帝国建国后调整决议
			limit = { has_galactic_emperor = yes }
			if = {
				limit = {
					is_active_resolution = resolution_custodian_galactic_standard
					NOT = { is_active_resolution = resolution_emperor_galactic_standard }
				}
				pass_resolution_no_cooldown = resolution_emperor_galactic_standard
			}
			if = {
				limit = {
					is_active_resolution = resolution_custodian_galactic_mobilization
					NOT = { is_active_resolution = resolution_emperor_galactic_mobilization }
				}
				pass_resolution_no_cooldown = resolution_emperor_galactic_mobilization
			}
		}
		if = { #和平时移除对抗天灾flag
			limit = {
				has_global_flag = galactic_community_crisis_fighting
				OR = {
					galaxy_is_peace = yes
					is_galactic_community_formed = no
				}
			}
			remove_global_flag = galactic_community_crisis_fighting
		}
		if = { #打击化身天灾添加对抗天灾flag
			limit = {
				any_country = {
					has_crisis_level = crisis_level_5
				}
				is_galactic_community_formed = yes
				NOT = { has_global_flag = galactic_community_crisis_fighting }
			}
			set_global_flag = galactic_community_crisis_fighting
		}
		if = { #战乱时移除五年计划制订flag
			limit = {
				galaxy_is_peace = no
				has_global_flag = flag_galactic_focus_five_year_plan_formulating
			}
			remove_global_flag = flag_galactic_focus_five_year_plan_formulating
			remove_global_flag = flag_galactic_focus_five_year_plan_formulating_timer
		}
		if = { #2.0更新提醒
			limit = { NOT = { has_global_flag = flag_MECR_2_0_notice } }
			set_global_flag = flag_MECR_2_0_notice
			if = {
				limit = { has_galactic_emperor = yes }
				galactic_emperor = {
					country_event = {
						id = MECR.101
						days = 1
					}
				}
			}
		}
	}
}
planet_event = { #81.粉碎天灾轨道轰炸姿态将星球炸成死寂星球
	id = MECR.81
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_orbital_bombardment_stance = crush_the_crisis
		owner = {
			OR = {
				is_crisis_faction = yes
				has_crisis_level = crisis_level_5
			}
		}
		habitable_planet = yes
	}

	immediate = {
		owner = {
			add_static_war_exhaustion = {
				attacker = from
				location = root
				value_for_planet_destruction = 0.5
			}
			country_event = { id = action.82 }
		}
		from = { country_event = { id = action.83 } }
		change_pc = pc_nuked
		set_planet_flag = nuked_planet_anomalies_disabled
		remove_all_buildings = yes
		reroll_deposits = yes
		remove_modifier = "natural_beauty"
		remove_modifier = "atmospheric_aphrodisiac"
		remove_modifier = "atmospheric_hallucinogen"
		remove_modifier = "lush_planet"
		remove_modifier = "dangerous_wildlife"
		set_planet_flag = armageddon_nuked
	}
}
country_event = { #90.用大远征全战打死国家加帝国权威[on_country_destroyed]
	id = MECR.90
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_war = {
			any_defender = {
				is_same_value = root
			}
			using_war_goal = {
				type = wg_imperial_crusade_total_war
				owner = attacker
			}
		}
	}

	immediate = {
		add_imperial_authority = 50
	}
}
country_event = { #100.添加对抗天灾flag[on_war_beginning]
	id = MECR.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_crisis_level = crisis_level_5
		is_galactic_community_formed = yes
	}

	immediate = {
		set_global_flag = galactic_community_crisis_fighting
	}
}
country_event = { #100.v2.0版本更新通知[1.]
	id = MECR.101
	title = "MECR.101.title"
	desc = "MECR.101.desc"
	picture = GFX_evt_coronation
	is_triggered_only = yes
	trigger = { is_galactic_emperor = yes }
	option = { name = "EXCELLENT" }
}

# Five Year Plans
event = { #500.[on_monthly_pulse](501.)
	id = MECR.500
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_active_resolution = resolution_galactic_focus_five_year_plan_infrastructure_construction
			is_active_resolution = resolution_galactic_focus_five_year_plan_science_research
			is_active_resolution = resolution_galactic_focus_five_year_plan_medical_care
			is_active_resolution = resolution_galactic_focus_five_year_plan_harmonious_diplomacy
		}
	}

	immediate = {
		every_country = {
			limit = { is_galactic_community_member = yes }
			country_event = {
				id = MECR.501
				days = 1
			}
		}
	}
}
country_event = { #501.五年计划进度统计
	id = MECR.501
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_community_member = yes
		OR = {
			is_active_resolution = resolution_galactic_focus_five_year_plan_infrastructure_construction
			is_active_resolution = resolution_galactic_focus_five_year_plan_science_research
			is_active_resolution = resolution_galactic_focus_five_year_plan_medical_care
			is_active_resolution = resolution_galactic_focus_five_year_plan_harmonious_diplomacy
		}
	}

	immediate = {
		if = { #基建建设
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_infrastructure_construction }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 1 } } }
				set_variable = { which = FYP_task_kind value = 1 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			every_owned_planet = {
				limit = { is_under_colonization = no }
				if = {
					limit = { has_building_construction = yes }
					ROOT = { change_variable = { which = FYP_task_yes value = 1 } }
				}
				else = {
					ROOT = { change_variable = { which = FYP_task_no value = 1 } }
				}
			}
			set_variable = { which = FYP_task value = FYP_task_yes }
			change_variable = { which = FYP_task value = FYP_task_no }
			set_variable = { which = FYP_task_progress value = FYP_task_yes }
			divide_variable = { which = FYP_task_progress value = FYP_task }
			if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.05 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.1 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.15 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #科学研究
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_science_research }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 2 } } }
				set_variable = { which = FYP_task_kind value = 2 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			# 写在 MECR.502
			if = {
				limit = { check_variable = { which = FYP_task_yes value < 2 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_yes value < 5 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_yes value < 8 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #医疗保健
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_medical_care }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 3 } } }
				set_variable = { which = FYP_task_kind value = 3 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			every_owned_planet = {
				limit = { is_under_colonization = no }
				if = {
					limit = { free_amenities > 0 }
					ROOT = { change_variable = { which = FYP_task_yes value = 1 } }
				}
				else = {
					ROOT = { change_variable = { which = FYP_task_no value = 1 } }
				}
			}
			set_variable = { which = FYP_task value = FYP_task_yes }
			change_variable = { which = FYP_task value = FYP_task_no }
			set_variable = { which = FYP_task_progress value = FYP_task_yes }
			divide_variable = { which = FYP_task_progress value = FYP_task }
			if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.75 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.9 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.95 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
		if = { #和谐外交
			limit = { is_active_resolution = resolution_galactic_focus_five_year_plan_harmonious_diplomacy }
			if = {
				limit = { NOT = { check_variable = { which = FYP_task_kind value = 4 } } }
				set_variable = { which = FYP_task_kind value = 4 }
				set_variable = { which = FYP_task_yes value = 0 }
				set_variable = { which = FYP_task_no value = 0 }
			}
			if = {
				limit = {
					is_at_war = yes
					any_war = {
						any_attacker = { is_same_value = ROOT }
						is_justice_war = no
					}
				}
				change_variable = { which = FYP_task_no value = 7 }
			}
			else = {
				set_variable = { which = FYP_task_yes value = 7 }
			}
			if = {
				limit = {
					any_country = {
						ROOT = {
							is_improving_relations_with = PREV
						}
					}
				}
				change_variable = { which = FYP_task_yes value = 3 }
			}
			else = {
				set_variable = { which = FYP_task_no value = 3 }
			}
			set_variable = { which = FYP_task value = FYP_task_yes }
			change_variable = { which = FYP_task value = FYP_task_no }
			set_variable = { which = FYP_task_progress value = FYP_task_yes }
			divide_variable = { which = FYP_task_progress value = FYP_task }
			if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.4 } }
				set_variable = { which = FYP_task_grade value = 1 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.7 } }
				set_variable = { which = FYP_task_grade value = 3 }
			}
			else_if = {
				limit = { check_variable = { which = FYP_task_progress value < 0.9 } }
				set_variable = { which = FYP_task_grade value = 6 }
			}
			else = {
				set_variable = { which = FYP_task_grade value = 9 }
			}
		}
	}
}
country_event = { #502.五年计划（完成科研）
	id = MECR.502
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_community_member = yes
		is_active_resolution = resolution_galactic_focus_five_year_plan_science_research
	}

	immediate = {
		change_variable = { which = FYP_task_yes value = 1 }
	}
}

# resolution_category_imperial_reforms
event = { #700.星炬(701.)[on_yearly_pulse]
	id = MECR.700
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_active_resolution = resolution_emperor_light_the_astronomican
	}

	immediate = {
		if = {
			limit = {
				any_galaxy_planet = {
					has_deposit = d_the_astronomican
				}
			}
			remove_deposit = d_the_astronomican
		}
		galactic_emperor = {
			capital_scope = {
				add_deposit = d_the_astronomican
				planet_event = {
					id = MECR.701
					days = 1
				}
			}
		}
	}
}
planet_event = { #701.星炬燃烧人口
	id = MECR.701
	title = MECR.701.title
	desc = MECR.701.desc
	picture = GFX_evt_the_astronomican

	is_triggered_only = yes

	immediate = {
		while = {
			count = 3
			if = {
				limit = {
					any_owned_pop = {
						has_trait = trait_psionic
					}
				}
				random_owned_pop = {
					limit = {
						has_trait = trait_psionic
					}
					kill_pop = yes
				}
			}
			else_if = {
				limit = {
					owner = {
						any_owned_pop = {
							has_trait = trait_psionic
						}
					}
				}
				owner = {
					random_owned_pop = {
						limit = {
							has_trait = trait_psionic
						}
						kill_pop = yes
					}
				}
			}
			else = {
				random_owned_pop = {
					kill_pop = yes
				}
			}
		}
	}

	option = {
		name = MECR.701.option
		tooltip = {
			owner = {
				while = {
					count = 3
					random_owned_pop = {
						limit = {
							has_trait = trait_psionic
						}
						kill_pop = yes
					}
				}
			}
		}
	}
}

# resolution_category_emperor_imperial_institutions
event = { #600.科学院分配科研点[on_monthly_pulse]
	id = MECR.600
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_active_resolution = resolution_emperor_imperial_academy_of_sciences
	}

	immediate = {
		galactic_emperor = {
			export_resource_income_to_variable = {
				resource = physics_research
				variable = ias_research_points
			}
			divide_variable = { which = ias_research_points value = 100 }
		}
		every_country = {
			limit = {
				is_galactic_community_member = yes
				is_galactic_emperor = no
				NOR = {
					is_subject_type = imperial_senator
					AND = {
						federation = { has_federation_law = imperial_academy_of_sciences_technical_unification }
						OR = {
							is_subject_type = imperial_province
							is_subject_type = imperial_special_economic_zone
						}
					}
				}
			}
			add_resource = {
				physics_research = 10
				society_research = 10
				engineering_research = 10
				mult = galactic_emperor.ias_research_points
			}
		}
	}
}
event = { #620.教育部加帝国权威[on_monthly_pulse]
	id = MECR.620
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_active_resolution = resolution_emperor_imperial_ministry_of_education
	}
	immediate = {
		add_imperial_authority = 0.2
	}
}

# resolution_emperor_the_step_towards_a_united_galaxy
country_event = { #1000.帝国联邦建立(1001.1002.)
	id = MECR.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = { #停战
			limit = { is_galactic_community_member = yes }
			every_war = {
				limit = {
					any_attacker = { is_galactic_community_member = yes }
					any_defender = { is_galactic_community_member = yes }
				}
				every_war_participant = {
					limit = { is_galactic_community_member = yes }
					prev = { remove_war_participant = prev }
				}
			}
		}
		random_playable_country = { #添加第一个国家
			limit = {
				is_galactic_community_member = yes
				is_galactic_emperor = no
			}
			join_alliance = {
				who = root
				name = "NAME_imperium_federation"
				override_requirements = yes
			}
		}
		every_playable_country = { #添加剩下的国家
			limit = { is_galactic_community_member = yes }
			join_alliance = { who = root override_requirements = yes }
		}
		federation = { #激活基础特质，防止附庸加不进来
			set_federation_type = imperium_federation
			set_federation_leader = root
		}
		every_playable_country = { #再加一次防止疏漏
			limit = {
				is_galactic_community_member = yes
				NOT = { is_in_federation_with = root }
			}
			join_alliance = { who = root override_requirements = yes }
		}
		federation = { #联邦编辑
			set_federation_type = imperium_federation
			set_federation_leader = root
			set_name = "NAME_imperium_federation"

			set_federation_flag = special_federation
			#save_global_event_target_as = ET_imperium_federation

			save_event_target_as = this_imperium_federation
			# 帝国整合
			set_federation_law = centralization_imperium_low
			# 帝国法律
			set_federation_law = imperial_armada_conscription_none
			#set_federation_law = ia_service_exemption_prohibit
			set_federation_law = free_migration_no_imperium
			set_federation_law = imperium_ai_policy_non_intervention
			set_federation_law = imperium_slavery_policy_non_intervention
			# 帝国机构
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_bank }
				set_federation_law = imperial_bank_supervision
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_isd }
				set_federation_law = isd_political_police
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_academy_of_sciences }
				set_federation_law = imperial_academy_of_sciences_talent_concentration
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_department_of_engineering }
				set_federation_law = imperial_department_of_engineering_standardized_construction
			}
			if = {
				limit = { is_active_resolution = resolution_emperor_imperial_ministry_of_education }
				set_federation_law = imperial_ministry_of_education_science_education_reforming
			}
			
			add_cohesion = -200
			add_cohesion = trigger:imperial_authority
			
		}
		country_event = {
			id = MECR.1001
			days = 14401
		}
		every_country = { #通知
			country_event = {
				id = MECR.1002
			}
		}
	}
}
country_event = { #1001.40年后如果皇帝不是帝国联邦领袖了，设为帝国联邦领袖(1001.)[1000.1001.]
	id = MECR.1001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		has_federation = yes
		federation = {
			has_federation_type = imperium_federation
			is_same_value = event_target:this_imperium_federation
		}
	}

	immediate = {
		federation = {
			set_federation_leader = root
		}
		country_event = {
			id = MECR.1001
			days = 14400
		}
	}
}
country_event = { #1002.帝国联邦建立通知[1000.]
	id = MECR.1002
	title = "MECR.1002.title"
	desc = {
		trigger = { is_galactic_emperor = yes }
		text = "MECR.1002.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
		text = "MECR.1002.desc.b"
	}
	desc = {
		trigger = { is_galactic_community_member = no }
		text = "MECR.1002.desc.c"
	}
	picture = GFX_evt_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.1002.option.a"
		trigger = {
			is_galactic_emperor = yes
		}
	}
	option = {
		name = "MECR.1002.option.b"
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
	}
	option = {
		name = "MECR.1002.option.c"
		trigger = {
			is_galactic_community_member = no
		}
		add_casus_belli = {
			type = cb_end_threat_renegade_containment
			who = galactic_emperor
			days = -1
		}
	}
}
country_event = { #1003.帝国联邦升级通知[集权度提升法律.]
	id = MECR.1003
	title = "MECR.1003.title"
	desc = "MECR.1003.desc"
	picture = GFX_evt_coronation
	is_triggered_only = yes

	option = {
		name = "DISCONCERTING"
		add_resource = {
			influence = 200
		}
	}
}

country_event = { #1010.帝国联邦每月(1011.1020.1030.1040.1050.1053.1060.1070.1100.)[on_monthly_pulse_country]
	id = MECR.1010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		is_active_resolution = resolution_emperor_the_step_towards_a_united_galaxy
	}

	immediate = {
		every_country = { set_variable = { which = var_zero value = 0 } }
		if = {
			limit = {
				exists = federation 
				federation = { has_federation_type = imperium_federation }
			}
			federation = { #计算帝国机构总等级
				switch = {
					trigger = has_federation_law
					centralization_imperium_low = { set_variable = { which = imperial_institutions_upgrades_support value = 6 } }
					centralization_imperium_mid = { set_variable = { which = imperial_institutions_upgrades_support value = 8 } }
					centralization_imperium_high = { set_variable = { which = imperial_institutions_upgrades_support value = 10 } }
					centralization_imperium_max = { set_variable = { which = imperial_institutions_upgrades_support value = 12 } }
					centralization_imperium_unified_imperium = { set_variable = { which = imperial_institutions_upgrades_support value = 12 } }
					default = { set_variable = { which = imperial_institutions_upgrades_support value = 6 } }
				}
				if = {
					limit = { has_federation_perk = imperium_elite_bureaucrats }
					change_variable = { which = imperial_institutions_upgrades_support value = 3 }
				}
				set_variable = { which = imperial_institutions_upgrades_used value = 0 }
				if = { limit = { has_federation_law = imperial_bank_supervision } change_variable = { which = imperial_institutions_upgrades_used value = 1 } }
				if = { limit = { has_federation_law = imperial_bank_administration } change_variable = { which = imperial_institutions_upgrades_used value = 2 } }
				if = { limit = { has_federation_law = imperial_bank_control } change_variable = { which = imperial_institutions_upgrades_used value = 3 } }
				if = { limit = { has_federation_law = isd_political_police } change_variable = { which = imperial_institutions_upgrades_used value = 1 } }
				if = { limit = { has_federation_law = isd_public_police } change_variable = { which = imperial_institutions_upgrades_used value = 2 } }
				if = { limit = { has_federation_law = isd_peoples_police } change_variable = { which = imperial_institutions_upgrades_used value = 3 } }
				if = { limit = { has_federation_law = imperial_academy_of_sciences_talent_concentration } change_variable = { which = imperial_institutions_upgrades_used value = 1 } }
				if = { limit = { has_federation_law = imperial_academy_of_sciences_research_integration } change_variable = { which = imperial_institutions_upgrades_used value = 2 } }
				if = { limit = { has_federation_law = imperial_academy_of_sciences_technical_unification } change_variable = { which = imperial_institutions_upgrades_used value = 3 } }
				if = { limit = { has_federation_law = imperial_department_of_engineering_standardized_construction } change_variable = { which = imperial_institutions_upgrades_used value = 1 } }
				if = { limit = { has_federation_law = imperial_department_of_engineering_personnel_coordination } change_variable = { which = imperial_institutions_upgrades_used value = 2 } }
				if = { limit = { has_federation_law = imperial_department_of_engineering_project_new_world } change_variable = { which = imperial_institutions_upgrades_used value = 3 } }
				if = { limit = { has_federation_law = imperial_ministry_of_education_science_education_reforming } change_variable = { which = imperial_institutions_upgrades_used value = 1 } }
				if = { limit = { has_federation_law = imperial_ministry_of_education_solidarity_movement } change_variable = { which = imperial_institutions_upgrades_used value = 2 } }
				if = { limit = { has_federation_law = imperial_ministry_of_education_critical_view_of_history } change_variable = { which = imperial_institutions_upgrades_used value = 3 } }
			}
			# 所有是帝国成员的国家添加进来，不是帝国成员的国家移除出去
			every_playable_country = {
				limit = {
					is_galactic_emperor = no
					OR = {
						is_galactic_community_member = yes
						overlord = { is_galactic_community_member = yes }
					}
					NOT = { is_in_federation_with = galactic_emperor }
				}
				join_alliance = { who = root override_requirements = yes }
			}
			every_playable_country = {
				limit = {
					is_galactic_community_member = no
					is_in_federation_with = galactic_emperor
				}
				if = {
					limit = { overlord = { is_galactic_community_member = yes } }
					add_to_galactic_community = yes
				}
				else = {
					leave_alliance = { override_requirements = yes }
				}
			}
			# 计算无特使的帝国行省负面修正
			if = {
				limit = {
					any_country = {
						is_subject = yes
						OR = {
							is_subject_type = imperial_province
							is_subject_type = imperial_special_economic_zone
						}
						root = {
							NOT = {
								any_envoy = {
									envoy_location_country = {
										is_same_value = prevprevprev
									}
								}
							}
						}
					}
				}
				remove_modifier = uncontrolled_provinces
				add_modifier = {
					modifier = uncontrolled_provinces
					multiplier = value:uncontrolled_provinces_count
					days = 31
				}
				
			}
			# 特质：帝国市场，计算帝国市场收入(1011.)
			if = {
				limit = { federation = { has_federation_perk = imperium_market } }
				country_event = {
					id = MECR.1011
				}
			}
			# 特质：帝国门户，如果有成员没有在首都建立星门，尝试建立(1030.)
			if = {
				limit = {
					federation = { has_federation_perk = imperium_gateways }
					any_federation_ally = { NOT = { has_country_flag = flag_imperium_gateways } }
				}
				country_event = {
					id = MECR.1030
				}
			}
			# 特质：帝国行省，所有联邦成员转化为帝国行省，添加5年cd flag
			if = {
				limit = {
					federation = { has_federation_perk = imperium_provinces }
					any_federation_ally = {
						is_galactic_emperor = no
						is_country_type = default
						NAND = {
							is_subject = yes
							overlord = { is_same_value = root }
						}
					}
				}
				federation = {
					save_cohesion = yes
					every_member = {
						limit = {
							is_galactic_emperor = no
							is_country_type = default
							NAND = {
								is_subject = yes
								overlord = { is_same_value = root }
							}
						}
						set_subject_of = {
							subject_type = imperial_province
							who = root
						}
						join_alliance = { who = root override_requirements = yes }
						if = { #切换政策
							limit = { is_gestalt = no }
							# ai
							if = {
								limit = {
									federation = { has_federation_law = imperium_ai_policy_ai_outlawed }
									NOT = { has_policy_flag = ai_outlawed }
									NOT = { has_country_flag = synthetic_empire }
									OR = {
										has_ethic = ethic_materialist
										has_ethic = ethic_fanatic_materialist
									}
								}
								if = {
									limit = { has_ethic = ethic_fanatic_materialist }
									country_remove_ethic = ethic_fanatic_materialist
								}
								if = {
									limit = { has_ethic = ethic_materialist }
									country_remove_ethic = ethic_materialist
								}
								set_policy = {
									policy = artificial_intelligence_policy
									option = ai_outlawed
									cooldown = yes
								}
							}
							if = {
								limit = {
									federation = { has_federation_law = imperium_ai_policy_ai_servitude }
									NOT = { has_policy_flag = ai_servitude }
									NOT = { has_country_flag = synthetic_empire }
								}
								set_policy = {
									policy = artificial_intelligence_policy
									option = ai_servitude
									cooldown = yes
								}
							}
							if = {
								limit = {
									federation = { has_federation_law = imperium_ai_policy_ai_full_rights }
									NOT = { has_policy_flag = ai_full_rights }
									OR = {
										has_ethic = ethic_spiritualist
										has_ethic = ethic_fanatic_spiritualist
										has_policy_flag = robots_outlawed
									}
								}
								if = {
									limit = { has_ethic = ethic_fanatic_spiritualist }
									country_remove_ethic = ethic_fanatic_spiritualist
								}
								if = {
									limit = { has_ethic = ethic_spiritualist }
									country_remove_ethic = ethic_spiritualist
								}
								if = {
									limit = { has_policy_flag = robots_outlawed }
									set_policy = {
										policy = robot_pop_policy
										option = robot_pops_allowed
										cooldown = yes
									}
								}
								set_policy = {
									policy = artificial_intelligence_policy
									option = ai_full_rights
									cooldown = yes
								}
							}
							# 奴隶制
							if = {
								limit = {
									federation = { has_federation_law = imperium_slavery_policy_slavery_not_allowed }
									NOT = { has_policy_flag = slavery_not_allowed }
									OR = {
										has_valid_civic = civic_slaver_guilds
										has_valid_civic = civic_indentured_assets
									}
								}
								if = {
									limit = { has_valid_civic = civic_slaver_guilds }
									force_remove_civic = civic_slaver_guilds
								}
								if = {
									limit = { has_valid_civic = civic_indentured_assets }
									force_remove_civic = civic_indentured_assets
								}
								set_policy = {
									policy = slavery
									option = slavery_not_allowed
									cooldown = yes
								}
							}
							if = {
								limit = {
									federation = { has_federation_law = imperium_slavery_policy_slavery_allowed }
									NOT = { has_policy_flag = slavery_allowed }
									NOR = {
										has_ethic = ethic_authoritarian
										has_ethic = ethic_fanatic_authoritarian
										has_ethic = ethic_xenophobe
										has_ethic = ethic_fanatic_xenophobe
									}
								}
								shift_ethic = ethic_authoritarian
								set_policy = {
									policy = slavery
									option = slavery_allowed
									cooldown = yes
								}
							}
						}
						imperium_recover_fleet_target = yes
						set_timed_country_flag = {
							flag = flag_country_recent_become_province
							years = 5
						}
					}
					every_member = {
						every_federation_ally = {
							remove_opinion_modifier = { modifier = opinion_broke_federation who = prev }
						}
					}
					load_cohesion = yes
				}
			}
			# 法律：帝国海军，计算ia得到的征召舰容(1020.)
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_armada_conscription_low
							has_federation_law = imperial_armada_conscription_mid
							has_federation_law = imperial_armada_conscription_high
						}
					}
				}
				country_event = {
					id = MECR.1020
				}
			}
			# 法律：帝国中央银行：lvl3，每月把联邦成员的收支转移到国库(1040.)
			if = {
				limit = { federation = { has_federation_law = imperial_bank_control } }
				country_event = {
					id = MECR.1040
				}
			}
			# 法律：帝国科学院：lvl2，每月根据高级科学家数量提供加成(1050.)
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_academy_of_sciences_research_integration
							has_federation_law = imperial_academy_of_sciences_technical_unification
						}
					}
				}
				country_event = {
					id = MECR.1050
				}
			}
			# 法律：帝国科学院：lvl3，每月将成员的科研产值转移给皇帝(1053.)
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_academy_of_sciences_technical_unification
					}
				}
				country_event = {
					id = MECR.1053
				}
			}
			# 法律：帝国工程署：lvl2，每月重新计算帝国成员可以出租的巨构槽，并且关闭不必要的租借(1060.)
			if = {
				limit = {
					federation = {
						OR = {
							has_federation_law = imperial_department_of_engineering_personnel_coordination
							has_federation_law = imperial_department_of_engineering_project_new_world
						}
					}
				}
				country_event = {
					id = MECR.1060
				}
			}
			else = { #否则移除借入借出修正
				every_country = {
					limit = {
						OR = {
							has_modifier = rent_in_a_construction_group
							has_modifier = rent_out_a_construction_group
						}
					}
					remove_modifier = rent_in_a_construction_group
					remove_modifier = rent_out_a_construction_group
				}
			}
			# 法律：帝国教育部：lvl2，每月+0.2帝国权威
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_ministry_of_education_solidarity_movement
					}
				}
				add_imperial_authority = 0.2
			}
			# 法律：帝国教育部：lvl3，如果多出飞升槽，检查已完成传统树(1070.)
			if = {
				limit = {
					federation = {
						has_federation_law = imperial_ministry_of_education_critical_view_of_history
					}
				}
				country_event = {
					id = MECR.1070
				}
			}

			# 法律：帝国集权：统一帝国，尝试将帝国行省整合(1100.)
			if = {
				limit = { federation = { has_federation_law = centralization_imperium_unified_imperium } }
				if = {
					limit = {
						any_federation_ally = {
							NOT = { has_country_flag = flag_country_recent_become_province }
							is_country_type = default
							is_galactic_emperor = no
							is_subject = yes
							NOT = { is_subject_type = imperial_special_economic_zone }
						}
					}
					country_event = {
						id = MECR.1100
					}
				}
			}
			federation = { #移除退联邦修正
				every_member = {
					every_federation_ally = {
						remove_opinion_modifier = { modifier = opinion_broke_federation who = prev }
					}
				}
			}
		}
		else = {
			cancel_resolution = resolution_emperor_the_step_towards_a_united_galaxy
			cancel_resolution = resolution_emperor_imperial_unification
		}
	}
}

country_event = { #1011.帝国市场：每月计算(1012.)[1010.]
	id = MECR.1011
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_perk = imperium_market_4 }
				set_variable = { which = im_param value = 0.25 }
			}
			else_if = {
				limit = { has_federation_perk = imperium_market_3 }
				set_variable = { which = im_param value = 0.20 }
			}
			else_if = {
				limit = { has_federation_perk = imperium_market_2 }
				set_variable = { which = im_param value = 0.15 }
			}
			else = {
				set_variable = { which = im_param value = 0.10 }
			}
			set_variable = { which = imperium_market_num_pops value = 0 }
			# 基础收入
			set_variable = { which = imperium_market_energy value = 2000 }
			set_variable = { which = imperium_market_minerals value = 2000 }
			set_variable = { which = imperium_market_food value = 2000 }
			set_variable = { which = imperium_market_consumer_goods value = 1000 }
			set_variable = { which = imperium_market_alloys value = 500 }
			set_variable = { which = imperium_market_volatile_motes value = 50 }
			set_variable = { which = imperium_market_exotic_gases value = 50 }
			set_variable = { which = imperium_market_rare_crystals value = 50 }
			every_member = {
				limit = {
					OR = {
						is_country_type = default
						has_country_flag = fallen_empire_compromised
					}
				}

				export_trigger_value_to_variable = { trigger = num_pops variable = im_num_pops }
				change_variable = { which = im_num_pops value = 500 }
				prev = { change_variable = { which = imperium_market_num_pops value = prev.im_num_pops } }

				export_resource_income_to_variable = { resource = energy variable = im_energy }
				multiply_variable = { which = im_income_energy value = 0.85 }
				subtract_variable = { which = im_energy value = im_income_energy }
				subtract_variable = { which = im_energy value = financial_income_energy }
				if = {
					limit = { check_variable = { which = im_energy value > 0 } }
					prev = { change_variable = { which = imperium_market_energy value = prev.im_energy } }
				}
				export_resource_income_to_variable = { resource = minerals variable = im_minerals }
				subtract_variable = { which = im_minerals value = im_income_minerals }
				subtract_variable = { which = im_minerals value = financial_income_minerals }
				if = {
					limit = { check_variable = { which = im_minerals value > 0 } }
					prev = { change_variable = { which = imperium_market_minerals value = prev.im_minerals } }
				}
				export_resource_income_to_variable = { resource = food variable = im_food }
				subtract_variable = { which = im_food value = im_income_food }
				subtract_variable = { which = im_food value = financial_income_food }
				if = {
					limit = { check_variable = { which = im_food value > 0 } }
					prev = { change_variable = { which = imperium_market_food value = prev.im_food } }
				}
				export_resource_income_to_variable = { resource = consumer_goods variable = im_consumer_goods }
				subtract_variable = { which = im_consumer_goods value = im_income_consumer_goods }
				subtract_variable = { which = im_consumer_goods value = financial_income_consumer_goods }
				if = {
					limit = { check_variable = { which = im_consumer_goods value > 0 } }
					prev = { change_variable = { which = imperium_market_consumer_goods value = prev.im_consumer_goods } }
				}
				export_resource_income_to_variable = { resource = alloys variable = im_alloys }
				subtract_variable = { which = im_alloys value = im_income_alloys }
				subtract_variable = { which = im_alloys value = financial_income_alloys }
				if = {
					limit = { check_variable = { which = im_alloys value > 0 } }
					prev = { change_variable = { which = imperium_market_alloys value = prev.im_alloys } }
				}
				export_resource_income_to_variable = { resource = volatile_motes variable = im_volatile_motes }
				subtract_variable = { which = im_volatile_motes value = im_income_volatile_motes }
				subtract_variable = { which = im_volatile_motes value = financial_income_volatile_motes }
				if = {
					limit = { check_variable = { which = im_volatile_motes value > 0 } }
					prev = { change_variable = { which = imperium_market_volatile_motes value = prev.im_volatile_motes } }
				}
				export_resource_income_to_variable = { resource = exotic_gases variable = im_exotic_gases }
				subtract_variable = { which = im_exotic_gases value = im_income_exotic_gases }
				subtract_variable = { which = im_exotic_gases value = financial_income_exotic_gases }
				if = {
					limit = { check_variable = { which = im_exotic_gases value > 0 } }
					prev = { change_variable = { which = imperium_market_exotic_gases value = prev.im_exotic_gases } }
				}
				export_resource_income_to_variable = { resource = rare_crystals variable = im_rare_crystals }
				subtract_variable = { which = im_rare_crystals value = im_income_rare_crystals }
				subtract_variable = { which = im_rare_crystals value = financial_income_rare_crystals }
				if = {
					limit = { check_variable = { which = im_rare_crystals value > 0 } }
					prev = { change_variable = { which = imperium_market_rare_crystals value = prev.im_rare_crystals } }
				}
			}
			multiply_variable = { which = imperium_market_energy value = im_param }
			multiply_variable = { which = imperium_market_minerals value = im_param }
			multiply_variable = { which = imperium_market_food value = im_param }
			multiply_variable = { which = imperium_market_consumer_goods value = im_param }
			multiply_variable = { which = imperium_market_alloys value = im_param }
			multiply_variable = { which = imperium_market_volatile_motes value = im_param }
			multiply_variable = { which = imperium_market_exotic_gases value = im_param }
			multiply_variable = { which = imperium_market_rare_crystals value = im_param }
			every_member = {
				limit = {
					OR = {
						is_country_type = default
						has_country_flag = fallen_empire_compromised
					}
				}
				divide_variable = {
					which = im_num_pops
					value = prev.imperium_market_num_pops
				}
				set_variable = { which = im_income_energy value = prev.imperium_market_energy }
				set_variable = { which = im_income_minerals value = prev.imperium_market_minerals }
				set_variable = { which = im_income_food value = prev.imperium_market_food }
				set_variable = { which = im_income_consumer_goods value = prev.imperium_market_consumer_goods }
				set_variable = { which = im_income_alloys value = prev.imperium_market_alloys }
				set_variable = { which = im_income_volatile_motes value = prev.imperium_market_volatile_motes }
				set_variable = { which = im_income_exotic_gases value = prev.imperium_market_exotic_gases }
				set_variable = { which = im_income_rare_crystals value = prev.imperium_market_rare_crystals }
				multiply_variable = { which = im_income_energy value = im_num_pops }
				multiply_variable = { which = im_income_minerals value = im_num_pops }
				multiply_variable = { which = im_income_food value = im_num_pops }
				multiply_variable = { which = im_income_consumer_goods value = im_num_pops }
				multiply_variable = { which = im_income_alloys value = im_num_pops }
				multiply_variable = { which = im_income_volatile_motes value = im_num_pops }
				multiply_variable = { which = im_income_exotic_gases value = im_num_pops }
				multiply_variable = { which = im_income_rare_crystals value = im_num_pops }
				remove_modifier = imperium_market_energy
				remove_modifier = imperium_market_minerals
				remove_modifier = imperium_market_food
				remove_modifier = imperium_market_consumer_goods
				remove_modifier = imperium_market_alloys
				remove_modifier = imperium_market_volatile_motes
				remove_modifier = imperium_market_exotic_gases
				remove_modifier = imperium_market_rare_crystals
				add_modifier = { modifier = imperium_market_energy multiplier = im_income_energy days = 31 }
				add_modifier = { modifier = imperium_market_minerals multiplier = im_income_minerals days = 31 }
				add_modifier = { modifier = imperium_market_food multiplier = im_income_food days = 31 }
				add_modifier = { modifier = imperium_market_consumer_goods multiplier = im_income_consumer_goods days = 31 }
				add_modifier = { modifier = imperium_market_alloys multiplier = im_income_alloys days = 31 }
				add_modifier = { modifier = imperium_market_volatile_motes multiplier = im_income_volatile_motes days = 31 }
				add_modifier = { modifier = imperium_market_exotic_gases multiplier = im_income_exotic_gases days = 31 }
				add_modifier = { modifier = imperium_market_rare_crystals multiplier = im_income_rare_crystals days = 31 }
			}
			#外部国家的负面影响
			every_country = {
				limit = {
					is_country_type = default
					is_homicidal = no
					OR = {
						NOT = { exists = federation }
						NOT = { federation = { is_same_value = prevprev } }
					}
					NOT = { #有联邦协从关系的不受制裁
						prev = {
							any_member = { has_association_status = PREVPREV }
						}
					}
				}
				if = {
					limit = { NOT = { has_country_flag = flag_imperial_preference_outer_noticed } }
					country_event = {
						id = MECR.1012
					}
				}
				if = {
					limit = { prev = { has_federation_perk = imperium_market_4 } }
					add_modifier = { modifier = imperial_preference_outer_4 days = 30 }
				}
				else_if = {
					limit = { prev = { has_federation_perk = imperium_market_3 } }
					add_modifier = { modifier = imperial_preference_outer_3 days = 30 }
				}
				else_if = {
					limit = { prev = { has_federation_perk = imperium_market_2 } }
					add_modifier = { modifier = imperial_preference_outer_2 days = 30 }
				}
				else = {
					add_modifier = { modifier = imperial_preference_outer_1 days = 30 }
				}
			}
		}
	}
}
country_event = { #1012.【初次】帝国市场建立：对域外国家的通知[1011.]
	id = MECR.1012
	title = "MECR.1012.title"
	desc = "MECR.1012.desc"
	picture = GFX_evt_alien_segregation
	is_triggered_only = yes

	immediate = {
		set_country_flag = flag_imperial_preference_outer_noticed
	}

	option = {
		name = "WORRYING"
	}
}
country_event = { #1020.帝国海军(1011.)[on_monthly_pulse_country]
	id = MECR.1020
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = naval_cap_ia_received value = 0 } 
		federation = {
			every_member = {
				limit = { NOT = { has_country_flag = flag_ia_service_exemption } }
				root = { change_variable = { which = naval_cap_ia_received value = prev.value:ia_transfer_amount } }
			}
		}
		remove_modifier = ia_receive_naval_cap
		if = {
			limit = { check_variable = { which = naval_cap_ia_received value > 0 } }
			add_modifier = {
				modifier = ia_receive_naval_cap
				multiplier = naval_cap_ia_received
				days = 31
			}
		}
	}
}
country_event = { #1030.帝国门户：每月尝试建立星门(1032.1033.)[1010.]
	id = MECR.1030
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_technology = tech_gateway_activation }
				any_federation_ally = { has_technology = tech_gateway_activation }
			}
			give_technology = { tech = tech_gateway_activation }
		}
		if = {
			limit = {
				NOT = { has_technology = tech_gateway_construction }
				any_federation_ally = { has_technology = tech_gateway_construction }
			}
			give_technology = { tech = tech_gateway_construction }
		}
		if = {
			limit = { has_technology = tech_gateway_construction }
			federation = {
				every_member = {
					limit = { NOT = { has_country_flag = flag_imperium_gateways } }
					capital_scope = {
						solar_system = {
							if = {
								limit = {
									NOT = {
										any_system_megastructure = {
											OR = {
												is_megastructure_type = gateway_0
												is_megastructure_type = gateway_ruined
												is_megastructure_type = gateway_final
												is_megastructure_type = gateway_restored
											}
										}
									}
								}
								spawn_megastructure = {
									type = gateway_final
									name = "NAME_imperial_gateway"
									owner = prevprev
									random_pos = yes
									orbit_distance = 360
									init_effect = {
										set_megastructure_flag = imperial_gateway
									}
								}
								if = {
									limit = { is_active_resolution = resolution_emperor_webway_project }
									prevprev = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										create_message = {
											type = MESSAGE_TYPE_IMPERIAL_GATEWAY
											localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_LOCAL"
											days = 7
											target = prev
										}
									}
								}
								else = {
									prevprev = {
										add_resource = {
											alloys = -2000
											energy = -2400
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										create_message = {
											type = MESSAGE_TYPE_IMPERIAL_GATEWAY
											localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_LOCAL"
											days = 7
											target = this
										}
									}
								}
							}
							else_if = {
								limit = {
									any_system_megastructure = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
								}
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
									if = {
										limit = { is_upgrading = no }
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
										if = {
											limit = { is_active_resolution = resolution_emperor_webway_project }
											owner = {
												add_resource = {
													alloys = -750
													energy = -1800
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												add_resource = {
													alloys = -750
													energy = -1800
												}
												create_message = {
													type = MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED
													localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED_LOCAL"
													days = 7
													target = this
												}
											}
										}
										else = {
											owner = {
												add_resource = {
													alloys = -1000
													energy = -2400
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												add_resource = {
													alloys = -1000
													energy = -2400
												}
												create_message = {
													type = MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED
													localization = "MESSAGE_TYPE_IMPERIAL_GATEWAY_UPGRADED_LOCAL"
													days = 7
													target = this
												}
											}
										}
									}
									else = {
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
									}
								}
							}
							else = {
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_final
											is_megastructure_type = gateway_restored
										}
										NOT = { has_megastructure_flag = imperial_gateway }
									}
									set_name = "NAME_imperial_gateway"
									set_megastructure_flag = imperial_gateway
								}
							}
						}
					}
					set_country_flag = flag_imperium_gateways
				}
			}
		}
	}
}
country_event = { #1031.【初次】建立帝国门户[imperium_gateways]
	id = MECR.1031
	title = "MECR.1031.title"
	desc = "MECR.1031.desc"
	picture = GFX_evt_drifting_gateway
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_technology = tech_gateway_activation }
				any_federation_ally = { has_technology = tech_gateway_activation }
			}
			give_technology = { tech = tech_gateway_activation }
		}
		if = {
			limit = {
				NOT = { has_technology = tech_gateway_construction }
				any_federation_ally = { has_technology = tech_gateway_construction }
			}
			give_technology = { tech = tech_gateway_construction }
		}
		if = {
			limit = { has_technology = tech_gateway_construction }
			federation = {
				every_member = {
					limit = { NOT = { has_country_flag = flag_imperium_gateways } }
					capital_scope = {
						solar_system = {
							if = {
								limit = {
									NOT = {
										any_system_megastructure = {
											OR = {
												is_megastructure_type = gateway_0
												is_megastructure_type = gateway_ruined
												is_megastructure_type = gateway_final
												is_megastructure_type = gateway_restored
											}
										}
									}
								}
								spawn_megastructure = {
									type = gateway_final
									name = "NAME_imperial_gateway"
									owner = prevprev
									random_pos = yes
									orbit_distance = 360
									init_effect = {
										set_megastructure_flag = imperial_gateway
									}
								}
								if = {
									limit = { is_active_resolution = resolution_emperor_webway_project }
									prevprev = {
										add_resource = {
											alloys = -1500
											energy = -1800
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										change_variable = { which = imperial_gateway_cost_alloys value = 1500 }
										change_variable = { which = imperial_gateway_cost_energy value = 1800 }
									}
								}
								else = {
									prevprev = {
										add_resource = {
											alloys = -2000
											energy = -2400
										}
										country_event = { id = MECR.1032 }
									}
									galactic_emperor = {
										change_variable = { which = imperial_gateway_cost_alloys value = 2000 }
										change_variable = { which = imperial_gateway_cost_energy value = 2400 }
									}
								}
							}
							else_if = {
								limit = {
									any_system_megastructure = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
								}
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_0
											is_megastructure_type = gateway_ruined
										}
									}
									if = {
										limit = { is_upgrading = no }
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
										if = {
											limit = { is_active_resolution = resolution_emperor_webway_project }
											owner = {
												add_resource = {
													alloys = -750
													energy = -1800
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												change_variable = { which = imperial_gateway_cost_alloys value = 750 }
												change_variable = { which = imperial_gateway_cost_energy value = 1800 }
											}
										}
										else = {
											owner = {
												add_resource = {
													alloys = -1000
													energy = -2400
												}
												country_event = { id = MECR.1033 }
											}
											galactic_emperor = {
												change_variable = { which = imperial_gateway_cost_alloys value = 1000 }
												change_variable = { which = imperial_gateway_cost_energy value = 2400 }
											}
										}
									}
									else = {
										upgrade_megastructure_to = gateway_final
										set_name = "NAME_imperial_gateway"
										set_megastructure_flag = imperial_gateway
									}
								}
							}
							else = {
								random_system_megastructure = {
									limit = {
										OR = {
											is_megastructure_type = gateway_final
											is_megastructure_type = gateway_restored
										}
										NOT = { has_megastructure_flag = imperial_gateway }
									}
									set_name = "NAME_imperial_gateway"
									set_megastructure_flag = imperial_gateway
								}
							}
						}
					}
					set_country_flag = flag_imperium_gateways
				}
			}
		}
		add_resource = {
			alloys = -1
			mult = imperial_gateway_cost_alloys
		}
		add_resource = {
			energy = -1
			mult = imperial_gateway_cost_energy
		}
	}

	option = {
		name = "MECR.1031.option"
		tooltip = {
			add_resource = {
				alloys = -1
				mult = imperial_gateway_cost_alloys
			}
			add_resource = {
				energy = -1
				mult = imperial_gateway_cost_energy
			}
		}
	}
}
country_event = { #1032.【初次】帝国门户建成：所有者通知[1030.]
	id = MECR.1032
	title = "MECR.1032.title"
	desc = {
		trigger = { is_gestalt = no }
		text = "MECR.1032.desc.a"
	}
	desc = {
		trigger = { is_gestalt = yes }
		text = "MECR.1032.desc.b"
	}
	picture = GFX_evt_drifting_gateway
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = no
	}

	option = {
		name = "EXCELLENT"
	}
}
country_event = { #1033.【初次】帝国门户升级：所有者通知[1030.]
	id = MECR.1033
	title = "MECR.1033.title"
	desc = {
		trigger = { is_gestalt = no }
		text = "MECR.1033.desc.a"
	}
	desc = {
		trigger = { is_gestalt = yes }
		text = "MECR.1033.desc.b"
	}
	picture = GFX_evt_drifting_gateway
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = no
	}

	option = {
		name = "EXCELLENT"
	}
}
country_event = { #1040.帝国银行：lvl3：每月计算[1010.]
	id = MECR.1040
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = financial_income_energy value = 0 }
		set_variable = { which = financial_income_minerals value = 0 }
		set_variable = { which = financial_income_food value = 0 }
		set_variable = { which = financial_income_alloys value = 0 }
		set_variable = { which = financial_income_consumer_goods value = 0 }
		set_variable = { which = financial_income_volatile_motes value = 0 }
		set_variable = { which = financial_income_rare_crystals value = 0 }
		set_variable = { which = financial_income_exotic_gases value = 0 }
		every_federation_ally = {
			limit = {
				is_subject = yes
				OR = {
					is_subject_type = imperial_province
					is_subject_type = imperial_special_economic_zone
				}
			}
			financial_calculate = { resource = energy min = 2000 max = 20000 }
			financial_calculate = { resource = minerals min = 4000 max = 40000 }
			financial_calculate = { resource = alloys min = 4000 max = 40000 }
			financial_calculate = { resource = volatile_motes min = 400 max = 4000 }
			financial_calculate = { resource = rare_crystals min = 400 max = 4000 }
			financial_calculate = { resource = exotic_gases min = 400 max = 4000 }
			if = {
				limit = { country_uses_food = yes }
				financial_calculate = { resource = food min = 2000 max = 20000 }
			}
			if = {
				limit = { country_uses_consumer_goods = yes }
				financial_calculate = { resource = consumer_goods min = 2000 max = 20000 }
			}
		}
		galactic_emperor = {
			if = {
				limit = {
					NAND = {
						check_variable = { which = financial_income_energy value = 0 }
						check_variable = { which = financial_income_minerals value = 0 }
						check_variable = { which = financial_income_food value = 0 }
						check_variable = { which = financial_income_alloys value = 0 }
						check_variable = { which = financial_income_consumer_goods value = 0 }
						check_variable = { which = financial_income_volatile_motes value = 0 }
						check_variable = { which = financial_income_rare_crystals value = 0 }
						check_variable = { which = financial_income_exotic_gases value = 0 }
					}
				}
				add_resource = { energy = 1 mult = financial_income_energy }
				add_resource = { minerals = 1 mult = financial_income_minerals }
				add_resource = { food = 1 mult = financial_income_food }
				add_resource = { alloys = 1 mult = financial_income_alloys }
				add_resource = { consumer_goods = 1 mult = financial_income_consumer_goods }
				add_resource = { volatile_motes = 1 mult = financial_income_volatile_motes }
				add_resource = { rare_crystals = 1 mult = financial_income_rare_crystals }
				add_resource = { exotic_gases = 1 mult = financial_income_exotic_gases }
				create_message = {
					type = MESSAGE_TYPE_IMPERIAL_FINANCE
					localization = "MESSAGE_TYPE_IMPERIAL_FINANCE_LOCAL"
					days = 7
					target = this
				}
			}
		}
	}
}
country_event = { #1041.【初次】帝国银行：lvl3：(1043.)[MECR_law:imperial_bank_control]
	id = MECR.1041
	title = "MECR.1041.title"
	desc = "MECR.1041.desc"
	picture = GFX_evt_coronation

	is_triggered_only = yes

	immediate = {
		set_variable = { which = financial_income_energy value = 0 }
		set_variable = { which = financial_income_minerals value = 0 }
		set_variable = { which = financial_income_food value = 0 }
		set_variable = { which = financial_income_alloys value = 0 }
		set_variable = { which = financial_income_consumer_goods value = 0 }
		set_variable = { which = financial_income_volatile_motes value = 0 }
		set_variable = { which = financial_income_rare_crystals value = 0 }
		set_variable = { which = financial_income_exotic_gases value = 0 }
		every_federation_ally = {
			limit = {
				is_subject = yes
				OR = {
					is_subject_type = imperial_province
					is_subject_type = imperial_special_economic_zone
				}
			}
			financial_calculate = { resource = energy min = 2000 max = 20000 }
			financial_calculate = { resource = minerals min = 4000 max = 40000 }
			financial_calculate = { resource = alloys min = 4000 max = 40000 }
			financial_calculate = { resource = volatile_motes min = 400 max = 4000 }
			financial_calculate = { resource = rare_crystals min = 400 max = 4000 }
			financial_calculate = { resource = exotic_gases min = 400 max = 4000 }
			if = {
				limit = { country_uses_food = yes }
				financial_calculate = { resource = food min = 2000 max = 20000 }
			}
			if = {
				limit = { country_uses_consumer_goods = yes }
				financial_calculate = { resource = consumer_goods min = 2000 max = 20000 }
			}
			country_event = {
				id = MECR.1042
			}
		}
	}
	
	option = {
		name = "MECR.1041.option"
		add_resource = { energy = 1 mult = financial_income_energy }
		add_resource = { minerals = 1 mult = financial_income_minerals }
		add_resource = { food = 1 mult = financial_income_food }
		add_resource = { alloys = 1 mult = financial_income_alloys }
		add_resource = { consumer_goods = 1 mult = financial_income_consumer_goods }
		add_resource = { volatile_motes = 1 mult = financial_income_volatile_motes }
		add_resource = { rare_crystals = 1 mult = financial_income_rare_crystals }
		add_resource = { exotic_gases = 1 mult = financial_income_exotic_gases }
	}
}
country_event = { #1042.【初次】帝国银行：lvl3：通知成员[1041.]
	id = MECR.1042
	title = "MECR.1042.title"
	desc = "MECR.1042.desc"
	picture = GFX_evt_coronation

	is_triggered_only = yes
	
	option = {
		name = "MECR.1042.option"
		tooltip = {
			add_resource = { energy = -1 mult = financial_hand_in_energy }
			add_resource = { minerals = -1 mult = financial_hand_in_minerals }
			add_resource = { food = -1 mult = financial_hand_in_food }
			add_resource = { alloys = -1 mult = financial_hand_in_alloys }
			add_resource = { consumer_goods = -1 mult = financial_hand_in_consumer_goods }
			add_resource = { volatile_motes = -1 mult = financial_hand_in_volatile_motes }
			add_resource = { rare_crystals = -1 mult = financial_hand_in_rare_crystals }
			add_resource = { exotic_gases = -1 mult = financial_hand_in_exotic_gases }
		}
	}
}
country_event = { #1043.【取消】帝国银行：lvl3：[MECR_law:imperial_bank_administration]
	id = MECR.1043
	hide_window = yes
	is_triggered_only = yes

	immediate = {
	}
}
country_event = { #1050.帝国科学院：lvl2：每月计算[1010.] [MECR_law:imperial_academy_of_sciences_research_integration]
	id = MECR.1050
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			set_variable = { which = iaos2_scientist_bonus value = 0 }
			every_member = {
				every_owned_leader = {
					limit = {
						leader_class = scientist
						has_skill >= 6
					}
					prevprev = {
						change_variable = { which = iaos2_scientist_bonus value = 1 }
					}
				}
				every_owned_leader = {
					limit = {
						leader_class = scientist
						has_skill >= 8
					}
					prevprev = {
						change_variable = { which = iaos2_scientist_bonus value = 1 }
					}
				}
			}
			every_member = {
				remove_modifier = resolution_emperor_imperial_academy_of_sciences_lvl2_scientist_bonus
				add_modifier = {
					modifier = resolution_emperor_imperial_academy_of_sciences_lvl2_scientist_bonus
					multiplier = prev.iaos2_scientist_bonus
					days = 31
				}
			}
		}
	}
}
country_event = { #1051.【初次】帝国科学院：lvl3：[MECR_law:imperial_academy_of_sciences_technical_unification]
	id = MECR.1051
	title = "MECR.1051.title"
	desc = "MECR.1051.desc"
	picture = GFX_evt_physics_research
	is_triggered_only = yes

	immediate = {
		every_federation_ally = { #拷贝科技给皇帝
			limit = { is_imperial_province = yes }
			root = {
				copy_techs_from = {
					target = prev
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_colossus
						tech_gene_seed_purification
						tech_genetic_resequencing
					}
				}
			}
		}
		every_federation_ally = { #从皇帝手上拷贝科技
			limit = { is_imperial_province = yes }
			if = {
				limit = { has_ascension_perk = ap_transcendence }
				copy_techs_from = {
					target = root
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_colossus
						tech_gene_seed_purification
						tech_genetic_resequencing
					}
				}
			}
			else = {
				copy_techs_from = {
					target = root
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_colossus
						tech_gene_seed_purification
						tech_genetic_resequencing
						tech_telepathy
						tech_psionic_barrier
						tech_psionic_shield
						tech_psi_jump_drive_1
						tech_precognition_interface
					}
				}
			}
		}
		federation = {
			if = {
				limit = { always = no }
				random_country = {
					limit = {
						is_gestalt = no
						NOT = { has_ascension_perk = ap_transcendence }
						OR = {
							is_galactic_emperor = yes
							is_imperial_province = yes
						}
					}
					every_federation_ally = {
						limit = {
							is_gestalt = no
							NOT = { has_ascension_perk = ap_transcendence }
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						prev = {
							copy_techs_from = {
								target = prev
								except = {
									tech_akx_worm_1
									tech_akx_worm_2
									tech_akx_worm_3
									tech_colossus
									tech_gene_seed_purification
									tech_genetic_resequencing
									tech_telepathy
									tech_psionic_barrier
									tech_psionic_shield
									tech_psi_jump_drive_1
									tech_precognition_interface
								}
							}
						}
					}
					every_federation_ally = {
						limit = {
							is_gestalt = no
							NOT = { has_ascension_perk = ap_transcendence }
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						copy_techs_from = {
							target = prev
							except = {
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
								tech_colossus
								tech_gene_seed_purification
								tech_genetic_resequencing
								tech_telepathy
								tech_psionic_barrier
								tech_psionic_shield
								tech_psi_jump_drive_1
								tech_precognition_interface
							}
						}
					}
				}
				random_country = {
					limit = {
						has_ascension_perk = ap_transcendence
						OR = {
							is_galactic_emperor = yes
							is_imperial_province = yes
						}
					}
					every_federation_ally = {
						limit = {
							has_ascension_perk = ap_transcendence
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						prev = {
							copy_techs_from = {
								target = prev
								except = {
									tech_akx_worm_1
									tech_akx_worm_2
									tech_akx_worm_3
									tech_colossus
									tech_gene_seed_purification
									tech_genetic_resequencing
								}
							}
						}
					}
					every_federation_ally = {
						limit = {
							has_ascension_perk = ap_transcendence
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						copy_techs_from = {
							target = prev
							except = {
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
								tech_colossus
								tech_gene_seed_purification
								tech_genetic_resequencing
							}
						}
					}
				}
				random_country = {
					limit = {
						is_machine_empire = yes
						OR = {
							is_galactic_emperor = yes
							is_imperial_province = yes
						}
					}
					every_federation_ally = {
						limit = {
							is_machine_empire = yes
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						prev = {
							copy_techs_from = {
								target = prev
								except = {
									tech_akx_worm_1
									tech_akx_worm_2
									tech_akx_worm_3
									tech_colossus
									tech_genetic_resequencing
									tech_psionic_barrier
									tech_psionic_shield
								}
							}
						}
					}
					every_federation_ally = {
						limit = {
							is_machine_empire = yes
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						copy_techs_from = {
							target = prev
							except = {
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
								tech_colossus
								tech_genetic_resequencing
								tech_psionic_barrier
								tech_psionic_shield
							}
						}
					}
				}
				random_country = {
					limit = {
						is_hive_empire = yes
						OR = {
							is_galactic_emperor = yes
							is_imperial_province = yes
						}
					}
					every_federation_ally = {
						limit = {
							is_hive_empire = yes
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						prev = {
							copy_techs_from = {
								target = prev
								except = {
									tech_akx_worm_1
									tech_akx_worm_2
									tech_akx_worm_3
									tech_colossus
									tech_gene_seed_purification
									tech_genetic_resequencing
									tech_psionic_barrier
									tech_psionic_shield
								}
							}
						}
					}
					every_federation_ally = {
						limit = {
							is_hive_empire = yes
							OR = {
								is_galactic_emperor = yes
								is_imperial_province = yes
							}
						}
						copy_techs_from = {
							target = prev
							except = {
								tech_akx_worm_1
								tech_akx_worm_2
								tech_akx_worm_3
								tech_colossus
								tech_gene_seed_purification
								tech_genetic_resequencing
								tech_psionic_barrier
								tech_psionic_shield
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = "MARVELOUS"
	}
}
country_event = { #1052.帝国科学院：lvl3：获得新科技时共享[on_tech_increased]
	id = MECR.1052
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_community_member = yes
		has_galactic_emperor = yes
		has_federation = yes
		federation = { has_federation_law = imperial_academy_of_sciences_technical_unification }
		OR = {
			is_galactic_emperor = yes
			is_imperial_province = yes
		}
		NOR = {
			last_increased_tech = tech_akx_worm_1
			last_increased_tech = tech_akx_worm_2
			last_increased_tech = tech_akx_worm_3
			last_increased_tech = tech_gene_seed_purification
			last_increased_tech = tech_genetic_resequencing
			last_increased_tech = tech_telepathy
			last_increased_tech = tech_psionic_barrier
			last_increased_tech = tech_psionic_shield
			last_increased_tech = tech_psi_jump_drive_1
			last_increased_tech = tech_precognition_interface
		}
	}

	immediate = {
		if = {
			limit = { is_gestalt = no }
			every_federation_ally = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
				}
				if = {
					limit = { has_ascension_perk = ap_transcendence }
					copy_techs_from = {
						target = root
						except = {
							tech_akx_worm_1
							tech_akx_worm_2
							tech_akx_worm_3
							tech_colossus
							tech_gene_seed_purification
							tech_genetic_resequencing
						}
					}
				}
				else = {
					copy_techs_from = {
						target = root
						except = {
							tech_akx_worm_1
							tech_akx_worm_2
							tech_akx_worm_3
							tech_colossus
							tech_gene_seed_purification
							tech_genetic_resequencing
							tech_telepathy
							tech_psionic_barrier
							tech_psionic_shield
							tech_psi_jump_drive_1
							tech_precognition_interface
						}
					}
				}
			}
		}
		else_if = {
			limit = { is_machine_empire = yes }
			every_federation_ally = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
				}
				copy_techs_from = {
					target = root
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_colossus
					}
				}
			}
		}
		else_if = {
			limit = { is_hive_empire = yes }
			every_federation_ally = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
				}
				copy_techs_from = {
					target = root
					except = {
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
						tech_colossus
						tech_gene_seed_purification
						tech_genetic_resequencing
					}
				}
			}
		}
	}
}
country_event = { #1053.帝国科学院：lvl3：每月计算[1010.]
	id = MECR.1053
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_variable = { which = iaos3_phy_receive value = 0 }
		set_variable = { which = iaos3_soc_receive value = 0 }
		set_variable = { which = iaos3_eng_receive value = 0 }
		every_federation_ally = {
			limit = { is_imperial_province = yes }
			export_resource_income_to_variable = { resource = physics_research variable = iaos3_phy }
			export_resource_income_to_variable = { resource = society_research variable = iaos3_soc }
			export_resource_income_to_variable = { resource = engineering_research variable = iaos3_eng }
			root = {
				change_variable = { which = iaos3_phy_receive value = prev.iaos3_phy }
				change_variable = { which = iaos3_soc_receive value = prev.iaos3_soc }
				change_variable = { which = iaos3_eng_receive value = prev.iaos3_eng }
			}
		}
		add_resource = { physics_research = 1 mult = iaos3_phy_receive }
		add_resource = { society_research = 1 mult = iaos3_soc_receive }
		add_resource = { engineering_research = 1 mult = iaos3_eng_receive }
	}
}
country_event = { #1060.帝国工程署：lvl2：每月计算[1010.] [MECR_law:imperial_department_of_engineering_personnel_coordination]
	id = MECR.1060
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			set_variable = { which = idoe2_rented_megaconstructing_slot value = 0 }
			every_member = { #设置计数器
				limit = { NOT = { is_variable_set = idoe2_rent_in_count } }
				set_variable = { which = idoe2_rent_in_count value = 0 }
			}
			every_country = { #移除非成员国的借入借出
				limit = {
					OR = {
						has_modifier = rent_in_a_construction_group
						has_modifier = rent_out_a_construction_group
					}
					NOR = {
						is_same_value = root
						is_in_federation_with = root
					}
				}
				remove_modifier = rent_in_a_construction_group
				remove_modifier = rent_out_a_construction_group
			}
			# 计算
			every_member = {
				if = { #如果有借出，移除借出修正
					limit = { has_modifier = rent_out_a_construction_group }
					remove_modifier = rent_out_a_construction_group
					set_country_flag = flag_rent_out_prior
				}
				else_if = { #如果有借入，统计被借入的槽位个数
					limit = { has_modifier = rent_in_a_construction_group }
					prev = { change_variable = { which = idoe2_rented_megaconstructing_slot value = prev.idoe2_rent_in_count } }
				}
				#重设借入，避免bug
				remove_modifier = rent_in_a_construction_group
				if = {
					limit = { check_variable = { which = idoe2_rent_in_count value > 0 } }
					add_modifier = { modifier = rent_in_a_construction_group multiplier = idoe2_rent_in_count }
				}
				# 计算每个国家的槽位
				set_variable = {
					which = idoe2_free_megaconstructing_slot
					value = value:idoe2_free_megaconstructing_slot
				}
				if = { #找出可以借出的国家：如果有空位，
					limit = {
						check_variable = { which = idoe2_free_megaconstructing_slot value > 0 }
					}
					if = { #，有借入，减少一支借入
						limit = { has_modifier = rent_in_a_construction_group }
						imperial_department_of_engineering_lvl2_return_megaconstructing_slot = yes
						prev = { subtract_variable = { which = idoe2_rented_megaconstructing_slot value = 1 } }
					}
					else_if = { #，无借入，不拒绝，代表可以借出
						limit = {
							NOT = { has_edict = refuse_to_rent_out_construction_groups }
						}
						set_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
					}
				}
			}
			#按借入的数量，给有借出资格的国家执行借出，优先借之前的
			while = {
				count = idoe2_rented_megaconstructing_slot
				if = {
					limit = {
						any_member = {
							has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
							has_country_flag = flag_rent_out_prior
						}
					}
					random_member = {
						limit = {
							has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
							has_country_flag = flag_rent_out_prior
						}
						remove_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
						remove_country_flag = flag_rent_out_prior
						add_modifier = {
							modifier = rent_out_a_construction_group
							days = 31
						}
						change_variable = { which = idoe2_free_megaconstructing_slot value = -1 }
					}
				}
				else = {
					random_member = {
						limit = { has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly }
						remove_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
						add_modifier = {
							modifier = rent_out_a_construction_group
							days = 31
						}
						change_variable = { which = idoe2_free_megaconstructing_slot value = -1 }
						create_message = {
							type = MESSAGE_TYPE_IDOE2_RENT
							localization = "MESSAGE_TYPE_IDOE2_RENT_OUT"
							days = 7
							target = capital_scope
						}
					}
				}
			}
			# 清空多余的借出资格flag
			every_member = {
				limit = { has_country_flag = flag_can_rent_out_megaconstructing_slot_monthly }
				remove_country_flag = flag_can_rent_out_megaconstructing_slot_monthly
			}
			every_member = {
				limit = { has_country_flag = flag_rent_out_prior }
				remove_country_flag = flag_rent_out_prior
				create_message = {
					type = MESSAGE_TYPE_IDOE2_RENT
					localization = "MESSAGE_TYPE_IDOE2_RETURN_BACK"
					days = 7
					target = capital_scope
				}
			}
			every_member = {
				set_variable = { which = idoe2_free_megaconstructing_slot value = value:idoe2_free_megaconstructing_slot }
			}
		}
		#create_message = {
		#	type = MESSAGE_TYPE_IDOE2_RENT
		#	localization = "MECR1060activated"
		#	days = 7
		#	target = capital_scope
		#}
	}
}
country_event = { #1070.帝国教育部：lvl3：每月计算[1010.] [MECR_law:imperial_department_of_engineering_personnel_coordination]
	id = MECR.1070
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			every_member = {
				if = {
					limit = { num_ascension_perk_slots > imoe3_ap_slot_num }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = adaptability }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = diplomacy }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = discovery }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = domination }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = expansion }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = harmony }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = mercantile }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = prosperity }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = subterfuge }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = supremacy }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = synchronicity }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = unyielding }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = versatility }
					# traditions in mods
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_mysticism }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_cybernetics }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_biogenesis }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_chaos }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_faith }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_order }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_malice }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_aspiration }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_affinity }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_experimentalism }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_mutagenesis }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_industry }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_kleptocracy }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_anguish }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_defence }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_assault }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_transformation }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = plentiful_endure }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = bioasc }
					imperial_ministry_of_education_lvl_3_check_tradition_finished = { tradition = bioasc_hive }
					
					set_variable = { which = imoe3_ap_slot_num value = trigger:num_ascension_perk_slots }
				}
			}
			every_member = {
				limit = {
					OR = {
						is_galactic_emperor = yes
						is_imperial_province = yes
					}
				}
				remove_modifier = resolution_emperor_imperial_ministry_of_education_lvl_3
				add_modifier = {
					modifier = resolution_emperor_imperial_ministry_of_education_lvl_3
					multiplier = prev.imoe3_bonus
					days = 31
				}
			}
		}
	}
}

country_event = { #1100.帝国统一：准备吞并(1101.)[resolution_emperor_imperial_unification] [1010.]
	id = MECR.1100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			save_cohesion = yes
			every_member = { #能吞并的设为帝国参议员
				limit = {
					NOT = { has_country_flag = flag_country_recent_become_province }
					is_country_type = default
					is_galactic_emperor = no
					is_subject = yes
					NOT = { is_subject_type = imperial_special_economic_zone }
					# 根据皇帝政体决定哪些国家能被整合
					if = {
						limit = { has_galactic_emperor = yes }
						if = { #非格式塔
							limit = { galactic_emperor = { is_gestalt = no } }
							if = {
								limit = { NOT = { has_global_flag = flag_rogue_maid_mod_activated } }
								is_gestalt = no
							}
							else = {
								OR = {
									is_gestalt = no
									has_civic = civic_machine_servitor
								}
							}
						}
						else_if = { #智械妹抖
							limit = { galactic_emperor = { has_civic = civic_machine_servitor } }
							is_hive_empire = no
						}
						else_if = { #智械
							limit = { galactic_emperor = { has_authority = auth_machine_intelligence } }
							is_machine_empire = yes
						}
						else_if = { #蜂群
							limit = { galactic_emperor = { has_authority = auth_hive_mind } }
							is_hive_empire = yes
						}
					}
				}
				set_name = "[This.GetName] $rename_imperial_senator$"
				set_country_type = imperial_senator
				set_subject_of = {
					subject_type = imperial_senator
					who = galactic_emperor
				}
				if = { #如果是小灰的主人，处理小灰
					limit = {
						exists = event_target:gray_owner
						is_same_value = event_target:gray_owner
					}
					if = {
						limit = {
							OR = {
								has_country_flag = gray_warship_active
								has_country_flag = gray_army_active
							}
						}
						create_gray_governor = yes
					}
				}
				every_owned_leader = {
					limit = { NOR = { leader_class = ruler is_event_leader = yes } }
					set_owner = galactic_emperor
				}
				every_owned_fleet = {
					limit = { NOT = { any_owned_ship = { is_ship_class = shipclass_starbase } } }
					set_owner = galactic_emperor
				}
				#every_owned_army = {
				#	limit = { is_defensive_army = no }
				#	set_owner = galactic_emperor
				#}
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
			every_member = { #不能吞并的设为经济特区
				limit = {
					NOT = { has_country_flag = flag_country_recent_become_province }
					NOT = { is_country_type = imperial_senator }
					is_galactic_emperor = no
					is_subject = yes
					NOT = { is_subject_type = imperial_special_economic_zone }
				}
				set_name = "[This.GetName] $rename_imperial_special_economic_zone$"
				set_subject_of = {
					subject_type = imperial_special_economic_zone
					who = galactic_emperor
				}
				if = { #如果是小灰的主人，处理小灰
					limit = {
						exists = event_target:gray_owner
						is_same_value = event_target:gray_owner
					}
					if = {
						limit = {
							OR = {
								has_country_flag = gray_warship_active
								has_country_flag = gray_army_active
							}
						}
						create_gray_governor = yes
					}
				}
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
			load_cohesion = yes
		}
		if = {
			limit = { NOT = { has_country_flag = flag_mecr1101_ongoing } }
			country_event = {
				id = MECR.1101
				days = 1
			}
		}
	}
}
country_event = { #1101.帝国统一：执行吞并(循环.1103.)[循环.1101.]
	id = MECR.1101
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_country_type = imperial_senator
			OR = {
				count_owned_planet = { count > 0 }
				count_owned_fleet = { count > 0 }
			}
		}
	}
	immediate = {
		federation = { save_cohesion = yes }
		random_country = { #随机选一个参议员，吞并50个星系
			limit = {
				is_country_type = imperial_senator
				OR = {
					count_owned_fleet = { count > 0 }
					count_owned_planet = { count > 0 }
				}
			}
			while = { #移交星基
				count = 50
				random_owned_fleet = {
					set_owner = galactic_emperor
					if = { #如果是升级星基，添加主权信标
						limit = {
							any_owned_ship = { is_ship_class = shipclass_starbase }
							solar_system = { starbase = { has_starbase_size > starbase_outpost } }
						}
						solar_system = {
							starbase = {
								set_starbase_flag = flag_starbase_from_senetor
								set_starbase_building = {
									building = sb_building_sovereign_beacon
									slot = 1
								}
							}
						}
					}
					solar_system = {
						every_system_planet = {
							limit = {
								has_owner = yes
								owner = { is_galactic_emperor = no }
							}
							set_owner = galactic_emperor
						}
					}
				}
			}
			if = { #移交无星基的星球
				limit = { any_owned_planet = { solar_system = { has_owner = no } } }
				every_owned_planet = {
					limit = { solar_system = { has_owner = no } }
					set_owner = galactic_emperor
				}
			}
			if = { #恢复联邦成员
				limit = { NOT = { is_in_federation_with = galactic_emperor } }
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
			if = { #转移资源
				limit = { NOT = { has_country_flag = resource_turned_over } }
				senetor_turn_over = { RESOURCE = energy }
				senetor_turn_over = { RESOURCE = minerals }
				senetor_turn_over = { RESOURCE = food }
				senetor_turn_over = { RESOURCE = alloys }
				senetor_turn_over = { RESOURCE = consumer_goods }
				senetor_turn_over = { RESOURCE = exotic_gases }
				senetor_turn_over = { RESOURCE = rare_crystals }
				senetor_turn_over = { RESOURCE = volatile_motes }
				senetor_turn_over = { RESOURCE = sr_dark_matter }
				senetor_turn_over = { RESOURCE = sr_living_metal }
				senetor_turn_over = { RESOURCE = sr_zro }
				senetor_turn_over = { RESOURCE = nanites }
				set_country_flag = resource_turned_over
			}
		}
		federation = { load_cohesion = yes }
		if = { #下一天循环执行
			limit = {
				any_country = {
					is_country_type = imperial_senator
					OR = {
						count_owned_fleet = { count > 0 }
						count_owned_planet = { count > 0 }
					}
				}
			}
			set_timed_country_flag = {
				flag = flag_mecr1101_ongoing
				days = 1
			}
			country_event = {
				id = MECR.1101
				days = 1
			}
		}
		else = {
			every_federation_ally = {
				limit = { is_country_type = imperial_senator }
				every_owned_army = {
					limit = { is_defensive_army = no }
					set_owner = galactic_emperor
				}
			}
			country_event = {
				id = MECR.1103
				days = 1
			}
		}
		capital_scope = { change_variable = { which = countmecr1101 value = 1 } } #debug观察
	}
}
country_event = { #1102.开始吞并通知，改联邦法律[resolution_emperor_imperial_unification]
	id = MECR.1102
	title = "MECR.1102.title"
	desc = {
		trigger = { is_galactic_emperor = yes }
		text = "MECR.1102.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
			# 根据皇帝政体决定哪些国家能被整合
			if = {
				limit = { has_galactic_emperor = yes }
				if = { #非格式塔
					limit = { galactic_emperor = { is_gestalt = no } }
					if = {
						limit = { NOT = { has_global_flag = flag_rogue_maid_mod_activated } }
						is_gestalt = no
					}
					else = {
						OR = {
							is_gestalt = no
							has_civic = civic_machine_servitor
						}
					}
				}
				else_if = { #智械妹抖
					limit = { galactic_emperor = { has_civic = civic_machine_servitor } }
					is_hive_empire = no
				}
				else_if = { #智械
					limit = { galactic_emperor = { has_authority = auth_machine_intelligence } }
					is_machine_empire = yes
				}
				else_if = { #蜂群
					limit = { galactic_emperor = { has_authority = auth_hive_mind } }
					is_hive_empire = yes
				}
			}
		}
		text = "MECR.1102.desc.b"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
			# 根据皇帝政体决定哪些国家不能被整合
			if = {
				limit = { has_galactic_emperor = yes }
				if = { #非格式塔
					limit = { galactic_emperor = { is_gestalt = no } }
					if = {
						limit = { NOT = { has_global_flag = flag_rogue_maid_mod_activated } }
						is_gestalt = yes
					}
					else = {
						is_gestalt = yes
						NOT = { has_civic = civic_machine_servitor }
					}
				}
				else_if = { #智械妹抖
					limit = { galactic_emperor = { has_civic = civic_machine_servitor } }
					is_hive_empire = yes
				}
				else_if = { #智械
					limit = { galactic_emperor = { has_authority = auth_machine_intelligence } }
					is_machine_empire = no
				}
				else_if = { #蜂群
					limit = { galactic_emperor = { has_authority = auth_hive_mind } }
					is_hive_empire = no
				}
			}
		}
		text = "MECR.1102.desc.c"
	}
	desc = {
		trigger = { is_galactic_community_member = no }
		text = "MECR.1102.desc.d"
	}
	picture = GFX_evt_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.1102.option.a"
		trigger = {
			is_galactic_emperor = yes
		}
		federation = { #设置法律，增加联邦经验
			set_federation_law = centralization_imperium_unified_imperium
			add_federation_experience = 120
		}
	}
	option = {
		name = "MECR.1102.option.b"
		trigger = {
			is_galactic_community_member = yes
			is_galactic_emperor = no
		}
	}
	option = {
		name = "MECR.1102.option.c"
		custom_tooltip = "MECR.1102.option.c.tooltip"
		trigger = {
			is_galactic_community_member = no
		}
	}
}
country_event = { #1103.吞并完成通知，赢得游戏[1101.]
	id = MECR.1103
	title = "MECR.1103.title"
	desc = "MECR.1103.desc"
	picture = GFX_evt_coronation
	is_triggered_only = yes

	option = {
		name = "MECR.1103.option"
		win = yes
		add_imperial_authority = 50
		federation = { add_cohesion = 50 }
	}
}

country_event = { #1190.堕落帝国拒绝成为行省(1191.) # 暂时不采用。把堕落帝国加进星海帝国里冲突太多
	id = MECR.1190
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = federation 
		federation = { has_federation_type = imperium_federation }
		OR = {
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}

	immediate = {
		federation = {
			federation_leader = {
				country_event = {
					id = MECR.1191
				}
			}
		}
	}
}
country_event = { #1191.堕落帝国拒绝成为行省——皇帝通知 # 暂时不采用。把堕落帝国加进星海帝国里冲突太多
	id = MECR.1191
	title = "MECR.1191.title"
	desc = "MECR.1191.desc"
	picture = GFX_evt_fallen_empire
	is_triggered_only = yes

	immediate = {
	}

	option = {
		name = "MECR.1191.option.a"
	}
	option = {
		name = "MECR.1191.option.b"
		hidden_effect = { federation = { save_cohesion = yes } }
		FROM = {
			leave_alliance = { override_requirements = yes }
			remove_from_galactic_community = yes
			root = {
				declare_war = {
					target = PREV
					attacker_war_goal = wg_imperium_force_fallen_empire_to_become_province
				}
			}
		}
		hidden_effect = { federation = { load_cohesion = yes } }
	}
}
country_event = { #1200.如果帝国毁灭，删除参议员，幸存国家重组联邦[on_country_destroyed]
	id = MECR.1200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_galactic_emperor = yes
		exists = federation
		federation = { has_federation_type = imperium_federation }
	}

	immediate = {
		pass_resolution_no_cooldown = resolution_galacticreforms_form_council
		every_country = { #删除参议员
			limit = { is_country_type = imperial_senator }
			destroy_country = yes
		}
		random_federation = { #重组联邦
			limit = { has_federation_type = imperium_federation }
			# 联邦转类型、继承等级
			export_trigger_value_to_variable = {
				trigger = federation_experience
				variable = fed_exp
			}
			set_federation_type = default_federation
			clear_variable = fed_exp #不要继承等级
			if = {
				limit = { check_variable = { which = fed_exp value > 2400 } }
				subtract_variable = { which = fed_exp value = 2400 }
				multiply_variable = { which = fed_exp value = 5 }
				add_federation_experience = 8400
				add_federation_experience = fed_exp
			}
			else_if = {
				limit = { check_variable = { which = fed_exp value > 1440 } }
				subtract_variable = { which = fed_exp value = 1440 }
				multiply_variable = { which = fed_exp value = 5 }
				add_federation_experience = 3600
				add_federation_experience = fed_exp
			}
			else_if = {
				limit = { check_variable = { which = fed_exp value > 720 } }
				subtract_variable = { which = fed_exp value = 720 }
				multiply_variable = { which = fed_exp value = 3.334 }
				add_federation_experience = 1200
				add_federation_experience = fed_exp
			}
			else_if = {
				limit = { check_variable = { which = fed_exp value > 240 } }
				subtract_variable = { which = fed_exp value = 240 }
				multiply_variable = { which = fed_exp value = 2.5 }
				add_federation_experience = fed_exp
			}
			clear_variable = fed_exp
			# 选法案
			if = {
				limit = { federation_level >= 4 }
				set_federation_law = centralization_high
				set_federation_law = fleet_contribution_high #4
				set_federation_law = succession_type_strongest #4
				set_federation_law = succession_power_diplomatic_weight #4
				set_federation_law = vote_weight_diplomatic #3
				set_federation_law = free_migration_yes #3
				set_federation_law = declare_war_majority_vote #2
				set_federation_law = invite_members_majority_vote #2
			}
			else_if = {
				limit = { federation_level = 3 }
				set_federation_law = centralization_medium
				set_federation_law = fleet_contribution_medium
				set_federation_law = succession_type_rotation
				set_federation_law = vote_weight_diplomatic #3
				set_federation_law = free_migration_yes #3
				set_federation_law = declare_war_majority_vote #2
				set_federation_law = invite_members_majority_vote #2
			}
			else_if = {
				limit = { federation_level = 2 }
				set_federation_law = centralization_low
				set_federation_law = fleet_contribution_low
				set_federation_law = succession_type_rotation
				set_federation_law = vote_weight_equal
				set_federation_law = free_migration_no
				set_federation_law = declare_war_majority_vote #2
				set_federation_law = invite_members_majority_vote #2
			}
			else = {
				set_federation_law = centralization_minimal
				set_federation_law = fleet_contribution_none
				set_federation_law = succession_type_rotation
				set_federation_law = vote_weight_equal
				set_federation_law = free_migration_no
				set_federation_law = declare_war_unanimous_vote
				set_federation_law = invite_members_unanimous_vote
			}
			set_federation_law = succession_term_years_20
			set_federation_law = federation_build_fleets_everyone
			set_federation_law = allow_subjects_to_join_yes
			set_federation_law = kick_members_majority_vote
			set_federation_law = treaties_separate_yes
			if = {
				limit = { federation_experience = 0 }
				add_cohesion = 200
			}
		}
	}
}

country_event = { #1300.与帝国参议员的特殊通讯界面[on_custom_diplomacy]# 没法打开通用界面所以不用了
	id = MECR.1300
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = { is_country_type = imperial_senator }
	}

	immediate = {
		country_event = {
			id = MECR.1302
		}
	}
}
country_event = { #1302.(1300.)
	id = MECR.1302
	title = "MECR.1302.title"
	desc = "MECR.1302.desc"

	diplomatic = yes

	picture_event_data = {
		portrait = fromfrom.ruler
		planet_background = fromfrom
		city_level = galactic_custodian
		graphical_culture = fromfrom
		room = galactic_custodian
	}

	is_triggered_only = yes

	option = {
		name = MECR.1302.option
	}
	option = {
		name = artrts_exit
		default_hide_option = yes
	}
}
# 1991.-1995. 通过议案之后延迟一天设置法律 
country_event = {
	id = MECR.1991
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_type = imperium_federation }
				set_federation_law = imperial_bank_supervision
			}
		}
	}
}
country_event = {
	id = MECR.1992
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_type = imperium_federation }
				set_federation_law = isd_political_police
			}
		}
	}
}
country_event = {
	id = MECR.1993
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_type = imperium_federation }
				set_federation_law = imperial_academy_of_sciences_talent_concentration
			}
		}
	}
}
country_event = {
	id = MECR.1994
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_type = imperium_federation }
				set_federation_law = imperial_department_of_engineering_standardized_construction
			}
		}
	}
}
country_event = {
	id = MECR.1995
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		federation = {
			if = {
				limit = { has_federation_type = imperium_federation }
				set_federation_law = imperial_ministry_of_education_science_education_reforming
			}
		}
	}
}

# resolution_custodian_crack_down_on_criminal_syndicate
country_event = { #9900.共同体内的犯罪集团被命令立即结束行为（9902.9903.9904.9905.）
	id = MECR.9900
	title = "MECR.9900.title"
	desc = "MECR.9900.desc"
	picture = GFX_evt_alien_propaganda
	is_triggered_only = yes

	immediate = {
		save_event_target_as = target_criminal_syndicate
	}
	option = { #屈服，移除罪企国策，分部建筑改变，受辱
		name = "MECR.9900.option.a"
		custom_tooltip = "MECR.9900.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			galactic_custodian = {
				country_event = {
					id = MECR.9902
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9903
				}
			}
			change_criminal_syndicate_into_megacorp = yes
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				opinion_level = {
					who = galactic_custodian
					level <= poor
				}
			}
		}
	}
	option = { #不屈服，受决议影响
		name = "MECR.9900.option.b"
		custom_tooltip = "MECR.9900.option.b.desc"
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			every_Country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_community_member = yes
				}
				country_event = {
					id = MECR.9904
				}
			}
		}
		ai_chance = {
			factor = 20
		}
	}
	option = { #退出共同体
		name = "MECR.9900.option.c"
		custom_tooltip = "MECR.9900.option.c.desc"
		remove_from_galactic_community = yes
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			every_Country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_community_member = yes
				}
				country_event = {
					id = MECR.9905
				}
			}
		}
		ai_chance = {
			factor = 1
		}
	}
}
country_event = { #9902.监管人消息：共同体内的犯罪集团屈服
	id = MECR.9902
	title = "MECR.9902.title"
	desc = "MECR.9902.desc"
	picture = GFX_evt_signing
	is_triggered_only = yes

	option = {
		name = "EXCELLENT"
		add_resource = { influence = 50 }
	}
}
country_event = { #9903.行星所有者消息：共同体内的犯罪集团屈服
	id = MECR.9903
	title = "MECR.9902.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9903.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9903.desc.b"
	}
	picture = GFX_evt_news_room
	is_triggered_only = yes

	option = {
		name = "MECR.9903.option.a"
		add_resource = { influence = 50 }
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
		}
	}
}
country_event = { #9904.其他国家消息：共同体内的犯罪集团拒绝屈服
	id = MECR.9904
	title = "MECR.9904.title"
	desc = {
		trigger = { is_galactic_custodian = yes }
		text = "MECR.9904.desc.a"
	}
	desc = {
		trigger = { is_galactic_custodian = no }
		text = "MECR.9904.desc.b"
	}
	picture = GFX_evt_announcement
	is_triggered_only = yes

	option = {
		name = "MECR.9904.option.a"
		trigger = {
			OR = {
				is_galactic_custodian = yes
				AND = {
					is_megacorp = no
					is_gestalt = no
				}
			}
		}
	}
	option = {
		name = "MECR.9904.option.b"
		trigger = {
			is_megacorp = yes
			is_galactic_custodian = no
		}
	}
	option = {
		name = "MECR.9904.option.c"
		trigger = {
			is_gestalt = yes
			is_galactic_custodian = no
		}
	}
}
country_event = { #9905.其他国家消息：共同体内的犯罪集团退出共同体
	id = MECR.9905
	title = "MECR.9905.title"
	desc = "MECR.9905.desc"
	picture = GFX_evt_announcement
	is_triggered_only = yes

	option = {
		name = "MECR.9904.option.a"
		trigger = {
			OR = {
				is_galactic_custodian = yes
				AND = {
					is_megacorp = no
					is_gestalt = no
				}
			}
		}
	}
	option = {
		name = "MECR.9904.option.b"
		trigger = {
			is_megacorp = yes
			is_galactic_custodian = no
		}
	}
	option = {
		name = "MECR.9904.option.c"
		trigger = {
			is_gestalt = yes
			is_galactic_custodian = no
		}
	}
}

country_event = { #9910.共同体外的犯罪集团被命令立即结束行为（9912.9913.9914.）
	id = MECR.9910
	title = "MECR.9910.title"
	desc = "MECR.9910.desc"
	picture = GFX_evt_alien_propaganda
	is_triggered_only = yes

	immediate = {
		save_event_target_as = target_criminal_syndicate_outer
	}
	option = { #屈服
		name = "MECR.9910.option.a"
		custom_tooltip = "MECR.9900.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_to_galactic_community = yes
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = flag_outer_criminal_join_community
				days = 10
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9912
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9913
				}
			}
			change_criminal_syndicate_into_megacorp = yes
		}
		ai_chance = {
			factor = 80
			modifier = {
				factor = 0
				is_in_breach_of_any = yes
			}
		}
	}
	option = { #屈服，但是不会回到共同体
		name = "MECR.9910.option.b"
		custom_tooltip = "MECR.9900.option.b.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = flag_outer_criminal_not_join_community
				days = 10
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9912
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9913
				}
			}
			change_criminal_syndicate_into_megacorp = yes
		}
		ai_chance = {
			factor = 30
		}
	}
	option = { #不屈服
		name = "MECR.9910.option.c"
		custom_tooltip = "MECR.9900.option.c.desc"
		remove_from_galactic_community = yes
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_criminal
		}
		hidden_effect = {
			every_Country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_community_member = yes
				}
				country_event = {
					id = MECR.9914
				}
			}
		}
		ai_chance = {
			factor = 10
		}
	}
}
country_event = { #9912.监管人消息：共同体外的犯罪集团屈服
	id = MECR.9912
	title = "MECR.9912.title"
	desc = "MECR.9912.desc"
	desc = {
		trigger = {
			event_target:target_criminal_syndicate = { has_country_flag = flag_outer_criminal_join_community }
		}
		text = "MECR.9912.desc.add_join"
	}
	desc = {
		trigger = {
			event_target:target_criminal_syndicate = { has_country_flag = flag_outer_criminal_not_join_community }
		}
		text = "MECR.9912.desc.add_not_join"
	}
	picture = GFX_evt_signing
	is_triggered_only = yes

	option = {
		name = "EXCELLENT"
		add_resource = { influence = 100 }
	}
}
country_event = { #9913.行星所有者消息：共同体外的犯罪集团屈服
	id = MECR.9913
	title = "MECR.9913.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9913.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9913.desc.b"
	}
	desc = {
		trigger = {
			event_target:target_criminal_syndicate = { has_country_flag = flag_outer_criminal_join_community }
		}
		text = "MECR.9912.desc.add_join"
	}
	desc = {
		trigger = {
			event_target:target_criminal_syndicate = { has_country_flag = flag_outer_criminal_not_join_community }
		}
		text = "MECR.9912.desc.add_not_join"
	}
	picture = GFX_evt_news_room
	is_triggered_only = yes
	
	option = {
		name = "MECR.9913.option.a"
		add_resource = { influence = 50 }
		add_opinion_modifier = {
			who = galactic_custodian
			modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
		}
	}
}
country_event = { #9914.其他国家消息：共同体外的犯罪集团拒绝屈服
	id = MECR.9914
	title = "MECR.9914.title"
	desc = {
		trigger = { is_galactic_custodian = yes }
		text = "MECR.9914.desc.a"
	}
	desc = {
		trigger = { is_galactic_custodian = no }
		text = "MECR.9914.desc.b"
	}
	picture = GFX_evt_announcement
	is_triggered_only = yes

	option = {
		name = "MECR.9904.option.a"
		trigger = {
			OR = {
				is_galactic_custodian = yes
				AND = {
					is_megacorp = no
					is_gestalt = no
				}
			}
		}
	}
	option = {
		name = "MECR.9904.option.b"
		trigger = {
			is_megacorp = yes
			is_galactic_custodian = no
		}
	}
	option = {
		name = "MECR.9904.option.c"
		trigger = {
			is_gestalt = yes
			is_galactic_custodian = no
		}
	}
}

country_event = { #9920.犯罪集团试图向共同体求和（9908.9909.）
	id = MECR.9920
	title = "MECR.9920.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9920.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9920.desc.b"
	}
	is_triggered_only = yes
	
	diplomatic = yes
	picture_event_data = {
		portrait = galactic_custodian
		room = galactic_custodian.ruler
	}

	immediate = {
		save_event_target_as = target_criminal_syndicate_late
		set_country_flag = flag_custodian9920_ing
	}
	
	option = {
		trigger = {
			is_galactic_community_member = yes
		}
		name = "MECR.9920.option.a"
		custom_tooltip = "MECR.9920.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { show_notification = yes }
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		trigger = {
			is_galactic_community_member = no
		}
		name = "MECR.9920.option.b"
		custom_tooltip = "MECR.9920.option.a.desc"
		add_to_galactic_community = yes
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { show_notification = yes }
			}
			galactic_custodian = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = "MECR.9920.option.c"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 0
		}
	}
}
country_event = { #9921.犯罪集团试图向帝国求和（9908.9909.）
	id = MECR.9921
	title = "MECR.9920.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
		}
		text = "MECR.9921.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
		}
		text = "MECR.9921.desc.b"
	}
	is_triggered_only = yes
	
	diplomatic = yes
	picture_event_data = {
		portrait = galactic_emperor
		room = galactic_emperor.ruler
	}

	immediate = {
		save_event_target_as = target_criminal_syndicate_late
		set_country_flag = flag_custodian9920_ing
	}
	
	option = {
		trigger = {
			is_galactic_community_member = yes
		}
		name = "MECR.9920.option.a"
		custom_tooltip = "MECR.9920.option.a.desc"
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { show_notification = yes }
			}
			galactic_emperor = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		trigger = {
			is_galactic_community_member = no
		}
		name = "MECR.9920.option.b"
		custom_tooltip = "MECR.9920.option.a.desc"
		add_to_galactic_community = yes
		force_remove_civic = civic_criminal_heritage
		add_modifier = {
			modifier = humiliated
			years = 10
		}
		add_modifier = {
			modifier = board_purged
			years = 10
		}
		hidden_effect = {
			kill_leader = { type = ruler }
			every_owned_leader = {
				limit = { leader_class = governor }
				kill_leader = { show_notification = yes }
			}
			galactic_emperor = {
				country_event = {
					id = MECR.9922
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = ROOT }
					is_galactic_custodian = no
					is_galactic_emperor = no
					any_owned_planet = {
						has_branch_office = yes
						branch_office_owner = { is_same_value = ROOT }
					}
				}
				country_event = {
					id = MECR.9923
				}
			}
			change_criminal_syndicate_into_megacorp = yes
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = "MECR.9920.option.c"
		default_hide_option = yes
		hidden_effect = {
			remove_country_flag = flag_custodian9920_ing
		}
		ai_chance = {
			factor = 0
		}
	}
}
country_event = { #9922.监管人/皇帝消息：犯罪集团求和
	id = MECR.9922
	title = "MECR.9922.title"
	desc = {
		trigger = {
			is_galactic_custodian = yes
		}
		text = "MECR.9922.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_emperor = yes
		}
		text = "MECR.9922.desc.b"
	}
	picture = GFX_evt_alien_segregation
	is_triggered_only = yes

	option = {
		name = "MECR.9922.option.a"
	}
}
country_event = { #9923.行星所有者消息：犯罪集团求和
	id = MECR.9923
	title = "MECR.9922.title"
	desc = {
		trigger = {
			is_galactic_community_member = yes
			has_galactic_custodian = yes
		}
		text = "MECR.9923.desc.a"
	}
	desc = {
		trigger = {
			is_galactic_community_member = yes
			has_galactic_emperor = yes
		}
		text = "MECR.9923.desc.b"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
			has_galactic_custodian = yes
		}
		text = "MECR.9923.desc.c"
	}
	desc = {
		trigger = {
			is_galactic_community_member = no
			has_galactic_emperor = yes
		}
		text = "MECR.9923.desc.d"
	}
	picture = GFX_evt_alien_segregation
	is_triggered_only = yes

	option = {
		name = "MECR.9922.option.a"
		add_resource = { influence = 50 }
		if = {
			limit = { has_galactic_custodian = yes }
			add_opinion_modifier = {
				who = galactic_custodian
				modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
			}
		}
		else = {
			add_opinion_modifier = {
				who = galactic_emperor
				modifier = opinion_resolution_custodian_crack_down_on_criminal_syndicate_normal
			}
		}
	}
}
event = { #9907.打击犯罪集团分部[on_monthly_pulse]
	id = MECR.9907
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = flag_crack_down_on_criminal_syndicate
		OR = {
			has_galactic_custodian = yes
			has_galactic_emperor = yes
		}
	}

	immediate = {
		random_galaxy_planet = {
			limit = {
				has_branch_office = yes
				branch_office_owner = {
					is_criminal_syndicate = yes
					is_galactic_community_member = no
				}
				owner = {
					is_galactic_community_member = yes
				}
				NOR = {
					has_modifier = GALPOL_operations
					has_modifier = ISD_operations
				}
			}
			if = {
				limit = { has_galactic_custodian = yes }
				add_modifier = {
					modifier = GALPOL_operations
					months = 6
					clear_on_owner_change = yes
				}
			}
			else = {
				add_modifier = {
					modifier = ISD_operations
					months = 6
					clear_on_owner_change = yes
				}
			}
		}
	}
}

# resolution_custodian_assist_the_developing_countries
country_event = { #9950.援助提供经济情报[on_monthly_pulse_country]
	id = MECR.9950
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_galactic_community_member = yes
		has_galactic_custodian = yes
		is_galactic_custodian = no
		is_active_resolution = resolution_custodian_assist_the_developing_countries
	}

	immediate = {
		if = {
			limit = { 
				relative_power = { who = galactic_custodian category = economy value <= inferior }
			}
			galactic_custodian = {
				add_intel_report = {
					category = economy
					level = 4
					who = ROOT
				}
				add_intel_report = {
					category = government
					level = 4
					who = ROOT
				}
			}
		}
		else = {
			galactic_custodian = {
				add_intel_report = {
					category = economy
					level = 3
					who = ROOT
				}
				add_intel_report = {
					category = government
					level = 3
					who = ROOT
				}
			}
		}
	}
}

country_event = { #9999.debug
	id = MECR.9999
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = { #随机选一个参议员，吞并50个星系
			limit = {
				is_country_type = imperial_senator
				OR = {
					count_owned_fleet = { count > 0 }
					count_owned_planet = { count > 0 }
				}
			}
			while = {
				count = 50
				random_owned_fleet = {
					set_owner = galactic_emperor
					solar_system = {
						every_system_planet = {
							limit = {
								has_owner = yes
								owner = { is_galactic_emperor = no }
							}
							set_owner = galactic_emperor
						}
					}
				}
			}
			if = {
				limit = { any_owned_planet = { solar_system = { has_owner = no } } }
				every_owned_planet = {
					limit = { solar_system = { has_owner = no } }
					set_owner = galactic_emperor
				}
			}
			if = {
				limit = { NOT = { is_in_federation_with = galactic_emperor } }
				join_alliance = { who = galactic_emperor override_requirements = yes }
			}
		}
	}
}