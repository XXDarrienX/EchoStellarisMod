namespace = nomad

# on_entering_system_fleet:
#Check if there's anyone to take contact with in new system, otherwise go check other stuff
fleet_event = {
	id = nomad.3
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = { is_country_type = nomad }
		NOT = { has_fleet_flag = nomad_on_mission }
	}

	immediate = {
		clear_fleet_actions = this
		save_event_target_as = nomad_fleet
		owner = {
			save_event_target_as = nomad_owner
		}
		if = {
			limit = {
				from = {
					exists = space_owner
					space_owner = {
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
						NOR = {
							is_hostile = event_target:nomad_owner
							has_communications = event_target:nomad_owner
						}
					}
				}
			}
			from = {
				space_owner = {
					save_event_target_as = nomad_contact_country
				}
			}
		}
		if = { # If the current space is owned stay put within borders and contact owners after 100 days
			limit = {
				from = {
					exists = space_owner
					space_owner = {
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
						NOR = {
							is_hostile = event_target:nomad_owner
							has_communications = event_target:nomad_owner
						}
					}
				}
			}
			queue_actions = {
				repeat = {
					max_iterations = 1
					find_closest_planet = {
						trigger = {
							id = nomad.3.trigger.1
							is_capital = no
						}
						found_planet = {
							orbit_planet = this
						}
					}
					effect = {
						id = nomad.3.begin_contact
						event_target:nomad_owner = {
							set_variable = {
								which = nomad_waited_days_translation
								value = 0
							}
							#country_event = { id = nomad.991 }
						}
					}
				}
				effect = {
					id = "nomad.3.translation_time_out"
					if = {
						limit = {
							event_target:nomad_contact_country = {
								NOT = { is_hostile = event_target:nomad_owner }
							}
							from = {
								NOT = { has_star_flag = hostile_system }
							}
							exists = space_owner
						}
						fleet_event = { id = nomad.4 days = 1 } #Take action inside system
					}
					else = {
						fleet_event = { id = nomad.2 days = 1 } #Fly somewhere else
					}
				}
			}
		}
		else_if = {
			# If space owner is hostile
			limit = {
				from = {
					exists = space_owner
					space_owner = {
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
						is_hostile = event_target:nomad_owner
					}
				}
			}
			fleet_event = { id = nomad.2 } #Nomads fly towards current destination
			owner = {
				#country_event = { id = nomad.992 }
			}
		}
		else_if = {
			# If space owner should be ignored by Nomads
			limit = {
				from = {
					exists = space_owner
					space_owner = {
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
			}
			fleet_event = { id = nomad.2 } #Nomads fly towards current destination
			owner = {
				#country_event = { id = nomad.993 }
			}
		}
		else = { #If no country owns this system
			fleet_event = { id = nomad.5 } #Nomads hang out in ownerless system
			owner = {
				#country_event = { id = nomad.994 }
			}
		}
	}
}

# Nomads reach mid point and set sails for next destination if not busy
fleet_event = {
	id = nomad.7
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = { is_country_type = nomad }
		has_fleet_flag = nomad_main_fleet
		solar_system = {
			has_star_flag = nomad_mid_point
		}
	}

	immediate = {
		#clear_fleet_actions = this
		owner = { set_country_flag = nomad_mid_point_reached }
		if = {
			limit = {
				NOT = {
					has_fleet_flag = nomad_on_mission
				}
			}
			fleet_event = { id = nomad.2 }
		}
	}
}

# Nomads reach end point and disappear
fleet_event = {
	id = nomad.8
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = { is_country_type = nomad }
		has_fleet_flag = nomad_main_fleet
		solar_system = {
			has_star_flag = nomad_end_point
		}
	}

	immediate = {
		#clear_fleet_actions = this
		destroy_fleet = this
		every_country = {
			limit = {
				has_country_flag = nomads_contacted
			}
			country_event = { id = nomad.9 } #Nomads send their last regards
		}
	}
}