############################
#
# Marauder Events
#
# Written by Henrik Thyrwall
#
############################

namespace = marauder

# Raiding Target
country_event = {
	id = marauder.31
	title = "marauder_diplo_header"
	desc = {
		text = marauder.31.1.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_1 }
		}
	}
	desc = {
		text = marauder.31.2.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_2 }
		}
	}
	desc = {
		text = marauder.31.3.desc
		trigger = {
			event_target:current_marauder_diplomacy = { has_country_flag = marauder_3 }
		}
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:current_marauder_diplomacy
		room = "ethic_spaceship_room"
	}

	is_triggered_only = yes

	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		random_rival_country = {
			save_event_target_as = raid_target_1
		}
		random_rival_country = {
			limit = {
				NOT = { is_same_value = event_target:raid_target_1 }
			}
			save_event_target_as = raid_target_2
		}
		random_rival_country = {
			limit = {
				NOR = {
					is_same_value = event_target:raid_target_1
					is_same_value = event_target:raid_target_2
				}
			}
			save_event_target_as = raid_target_3
		}
		random_rival_country = {
			limit = {
				NOR = {
					is_same_value = event_target:raid_target_1
					is_same_value = event_target:raid_target_2
					is_same_value = event_target:raid_target_3
				}
			}
			save_event_target_as = raid_target_4
		}
		# can target player crisis once they reach level 2
		random_playable_country = {
			limit = {
				NOR = {
					is_same_value = event_target:raid_target_1
					is_same_value = event_target:raid_target_2
					is_same_value = event_target:raid_target_3
					is_same_value = event_target:raid_target_4
					is_same_value = ROOT
				}
				OR = {
					has_crisis_level = crisis_level_2
					has_crisis_level = crisis_level_3
					has_crisis_level = crisis_level_4
					has_crisis_level = crisis_level_5
				}
			}
			save_event_target_as = raid_target_5
		}
		# Player crisis gets some extra options
		if = {
			limit = { has_ascension_perk = ap_become_the_crisis }
			# custodian or galactic emperor
			random_playable_country = {
				limit = {
					NOR = {
						is_same_value = event_target:raid_target_1
						is_same_value = event_target:raid_target_2
						is_same_value = event_target:raid_target_3
						is_same_value = event_target:raid_target_4
						is_same_value = event_target:raid_target_5
						is_same_value = ROOT
					}
					OR = {
						is_galactic_custodian = yes
						is_galactic_emperor = yes
					}
				}
				save_event_target_as = raid_target_6
			}
			# highest ranking member of galactic community
			random_playable_country = {
				limit = {
					NOR = {
						is_same_value = event_target:raid_target_1
						is_same_value = event_target:raid_target_2
						is_same_value = event_target:raid_target_3
						is_same_value = event_target:raid_target_4
						is_same_value = event_target:raid_target_5
						is_same_value = event_target:raid_target_6
						is_same_value = ROOT
					}
					is_galactic_community_member = yes
					galactic_community_rank = 1
				}
				save_event_target_as = raid_target_7
			}
			# second highest ranking member of galactic community
			random_playable_country = {
				limit = {
					NOR = {
						is_same_value = event_target:raid_target_1
						is_same_value = event_target:raid_target_2
						is_same_value = event_target:raid_target_3
						is_same_value = event_target:raid_target_4
						is_same_value = event_target:raid_target_5
						is_same_value = event_target:raid_target_6
						is_same_value = event_target:raid_target_7
						is_same_value = ROOT
					}
					is_galactic_community_member = yes
					galactic_community_rank = 2
				}
				save_event_target_as = raid_target_8
			}
			# random target, for the lulz
			random_playable_country = {
				limit = {
					NOR = {
						is_same_value = event_target:raid_target_1
						is_same_value = event_target:raid_target_2
						is_same_value = event_target:raid_target_3
						is_same_value = event_target:raid_target_4
						is_same_value = event_target:raid_target_5
						is_same_value = event_target:raid_target_6
						is_same_value = event_target:raid_target_7
						is_same_value = event_target:raid_target_8
						is_same_value = ROOT
					}
				}
				save_event_target_as = raid_target_9
			}
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}

	option = {
		name = marauder.31.a
		trigger = {
			exists = event_target:raid_target_1
		}
		hidden_effect = {
			event_target:raid_target_1 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_1 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_1 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.b
		trigger = {
			exists = event_target:raid_target_2
		}
		hidden_effect = {
			event_target:raid_target_2 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_2 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_2 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.c
		trigger = {
			exists = event_target:raid_target_3
		}
		hidden_effect = {
			event_target:raid_target_3 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_3 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_3 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.d
		trigger = {
			exists = event_target:raid_target_4
		}
		hidden_effect = {
			event_target:raid_target_4 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_4 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_4 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.k
		trigger = {
			exists = event_target:raid_target_5
		}
		hidden_effect = {
			event_target:raid_target_5 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_5 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_5 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.g
		trigger = {
			exists = event_target:raid_target_6
		}
		hidden_effect = {
			event_target:raid_target_6 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_6 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_6 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.h
		trigger = {
			exists = event_target:raid_target_7
		}
		hidden_effect = {
			event_target:raid_target_7 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_7 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_7 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.i
		trigger = {
			exists = event_target:raid_target_8
		}
		hidden_effect = {
			event_target:raid_target_8 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_8 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_8 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.j
		trigger = {
			exists = event_target:raid_target_9
		}
		hidden_effect = {
			event_target:raid_target_9 = { save_event_target_as = preliminary_target }
			if = {
				limit = {
					event_target:raid_target_9 = {
						OR = {
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
					}
				}
				country_event = { id = marauder.35 }
			}
			else_if = {
				limit = {
					event_target:raid_target_9 = {
						is_galactic_emperor = yes
					}
				}
				country_event = { id = spacecreatures.30 }
			}
			else = {
				country_event = { id = marauder.32 }
			}
		}
	}
	option = {
		name = marauder.31.e
		hidden_effect = {
			country_event = { id = marauder.21 }
		}
	}
	option = {
		name = marauder.31.f
		default_hide_option = yes
	}
}

# Marauder Raid Announced
country_event = {
	id = marauder.101
	title = "marauder_diplo_header_4"
	desc = { 
		text = marauder.101.1.desc
		trigger = { 
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
	}
	desc = { 
		text = marauder.101.2.desc
		trigger = { 
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
	}
	desc = { 
		text = marauder.101.3.desc
		trigger = { 
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:raiding_marauder
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	trigger = {
		exists = event_target:raiding_marauder
		event_target:raiding_marauder = {
			is_country_type = dormant_marauders
			any_relation = { is_same_value = root }
			NOT = {
				any_owned_fleet = { has_fleet_flag = raiding_fleet }
			}
		}
		NOT = { has_country_flag = recently_raided_or_threatened }
	}

	immediate = {
		# Determine tribute level
		if = {
			limit = { 
				has_monthly_income = { resource = minerals value <= 50 }
			}
			set_country_flag = marauder_tribute_1@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value >= 50 }
				has_monthly_income = { resource = minerals value <= 100 }
			}
			set_country_flag = marauder_tribute_2@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 100 }
				has_monthly_income = { resource = minerals value <= 150 }
			}
			set_country_flag = marauder_tribute_3@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 150 }
				has_monthly_income = { resource = minerals value <= 200 }
			}
			set_country_flag = marauder_tribute_4@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 200 }
				has_monthly_income = { resource = minerals value <= 250 }
			}
			set_country_flag = marauder_tribute_5@event_target:raiding_marauder
		}
		if = {
			limit = {
				has_monthly_income = { resource = minerals value > 250 }
			}
			set_country_flag = marauder_tribute_6@event_target:raiding_marauder
		}

		set_timed_country_flag = {
			flag = recently_raided_or_threatened
			days = 1800 # 5 years
		}
		set_country_flag = raid_target_of@event_target:raiding_marauder
		set_country_flag = under_marauder_attack
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_1 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_2 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		if = {
			limit = {
				event_target:raiding_marauder = { has_country_flag = marauder_3 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				save_event_target_as = marauder_system
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_event_target_as = raid_source
				}
			}
		}
		set_relation_flag = {
			who = event_target:raiding_marauder
			flag = current_target
		}
		save_event_target_as = marauder_target
		event_target:raiding_marauder = {
			set_country_flag = raid_ongoing
			owner_species = { save_event_target_as = marauder_species }
		}
		create_country = {
			name = event_target:raiding_marauder
			type = "marauder_raiders"
			species = event_target:marauder_species
			flag = event_target:raiding_marauder
			effect = {
				save_event_target_as = marauder_raiding_country
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_1 } }
					set_country_flag = marauder_1
				}
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_2 } }
					set_country_flag = marauder_2
				}
				if = {
					limit = { event_target:raiding_marauder = { has_country_flag = marauder_3 } }
					set_country_flag = marauder_3
				}
				set_country_flag = raid_ongoing
			}
		}
		event_target:marauder_raiding_country = {
			every_country = { establish_communications_no_message = event_target:marauder_raiding_country }
			event_target:raiding_marauder = {
				set_country_flag = parent_of@event_target:marauder_raiding_country
				set_faction_hostility = {
					target = event_target:marauder_raiding_country
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
			create_leader = {
				class = admiral
				species = event_target:marauder_species
				name = random
				skill = 3
				leader_age_min = 25
				leader_age_max = 45
				traits = {
					trait = random_trait
					trait = leader_trait_mercenary_warrior
				}
			}
			create_fleet = {
				name = "NAME_Raiding_Fleet"
				effect = {
					set_owner = event_target:raiding_marauder # For ship names
					create_marauder_raiders = yes
					set_location = event_target:raid_source
					set_fleet_stance = aggressive
					set_fleet_bombardment_stance = indiscriminate
					set_aggro_range_measure_from = self
					set_aggro_range = 150
					set_fleet_flag = raiding_fleet
					set_owner = event_target:marauder_raiding_country # Real owner
					assign_leader = last_created_leader
					
					closest_system = {
						limit = {
							any_system_planet = {
								exists = owner
								owner = { is_same_value = root }
								num_pops > 0
							}
						}
						save_event_target_as = raid_system
					}
					event_target:raid_system = {
						random_system_planet = {
							limit = {
								exists = owner
								owner = { is_same_value = root }
								num_pops > 0
							}
							save_event_target_as = raid_planet
						}
					}
					auto_move_to_planet = {
						target = event_target:raid_planet
						clear_auto_move_on_arrival = no
					}
				}
			}
			set_faction_hostility = {
				target = event_target:marauder_target
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
	}
	
	### Marauder 1
	option = { # Offer Energy tribute
		name = marauder.101.a
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_energy_tribute = yes
		}
		tribute_cost_energy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_mineral_tribute = yes
		}
		tribute_cost_minerals = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_food_tribute = yes
		}
		tribute_cost_food = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Alloy tribute
		name = marauder.101.e_mod
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.a.response
		allow = {
			determine_alloy_tribute = yes
		}
		tribute_cost_alloy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Refuse
		name = marauder.101.d
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_1 }
		}
		response_text = marauder.101.1.b.response
		default_hide_option = yes
	}
	### Marauder 2
	option = { # Offer Energy tribute
		name = marauder.101.a
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_energy_tribute = yes
		}
		tribute_cost_energy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_mineral_tribute = yes
		}
		tribute_cost_minerals = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_food_tribute = yes
		}
		tribute_cost_food = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Alloy tribute
		name = marauder.101.e_mod
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.a.response
		allow = {
			determine_alloy_tribute = yes
		}
		tribute_cost_alloy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Refuse
		name = marauder.101.d
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_2 }
		}
		response_text = marauder.101.2.b.response
		default_hide_option = yes
	}

	### Marauder 3
	option = { # Offer Energy tribute
		name = marauder.101.a
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_energy_tribute = yes
		}
		tribute_cost_energy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_mineral_tribute = yes
		}
		tribute_cost_minerals = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_food_tribute = yes
		}
		tribute_cost_food = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Alloy tribute
		name = marauder.101.e_mod
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.a.response
		allow = {
			determine_alloy_tribute = yes
		}
		tribute_cost_alloy = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:raiding_marauder
			remove_country_flag = under_marauder_attack
			remove_country_flag = marauder_tribute_1@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_2@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_3@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_4@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_5@event_target:raiding_marauder
			remove_country_flag = marauder_tribute_6@event_target:raiding_marauder
			remove_relation_flag = {
				who = event_target:raiding_marauder
				flag = current_target
			}
			event_target:raiding_marauder = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Refuse
		name = marauder.101.d
		trigger = {
			event_target:raiding_marauder = { has_country_flag = marauder_3 }
		}
		response_text = marauder.101.3.b.response
		default_hide_option = yes
	}
}

# Marauder Diplomacy while target of raid
country_event = {
	id = marauder.102
	title = "marauder_diplo_header_3"
	desc = { 
		text = marauder.102.1.desc
		trigger = { 
			from = { has_country_flag = marauder_1 }
		}
	}
	desc = { 
		text = marauder.102.2.desc
		trigger = { 
			from = { has_country_flag = marauder_2 }
		}
	}
	desc = { 
		text = marauder.102.3.desc
		trigger = { 
			from = { has_country_flag = marauder_3 }
		}
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = from
		room = "ethic_spaceship_room"
	}
	
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_relation_flag = {
					who = from
					flag = current_target
				}
				from = { is_country_type = dormant_marauders }
			}
			AND = {
				from = { is_country_type = marauder_raiders }
				any_country = {
					is_country_type = dormant_marauders
					has_country_flag = parent_of@from
					root = {
						has_relation_flag = {
							who = prev
							flag = current_target
						}
					}

				}
			}
		}
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}

	immediate = {
		from = {
			owner_species = { save_event_target_as = marauder_species }
		}
		set_country_flag = marauder_diplomacy_engaged
		if = {
			limit = {
				from = { is_country_type = marauder_raiders }
			}
			random_country = {
				limit = {
					is_country_type = dormant_marauders
					has_country_flag = parent_of@from
				}
				save_event_target_as = marauder_country
			}
			from = { save_event_target_as = marauder_raiding_country }
		}
		else = {
			from = { save_event_target_as = marauder_country }
			random_country = {
				limit = {
					is_country_type = marauder_raiders
					from = { has_country_flag = parent_of@prev }
				}
				save_event_target_as = marauder_raiding_country
			}
		}
	}

	after = {
		hidden_effect = {
			remove_country_flag = marauder_diplomacy_engaged
		}
	}
	
	# Marauder 1
	option = { # Offer Energy tribute
		name = marauder.101.a
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = { 
			determine_energy_tribute_raided = yes
		}
		tribute_cost_energy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = { 
			determine_mineral_tribute_raided = yes
		}
		tribute_cost_minerals_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = { 
			determine_food_tribute_raided = yes
		}
		tribute_cost_food_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Alloy tribute
		name = marauder.101.e_mod
		response_text = marauder.102.1.a.response
		trigger = {
			from = { has_country_flag = marauder_1 }
		}
		allow = { 
			determine_alloy_tribute_raided = yes
		}
		tribute_cost_alloy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Ugly
		name = marauder.102.d
		response_text = marauder.102.1.b.response
		is_dialog_only = yes
		trigger = {
			from = { has_country_flag = marauder_1 }
			NOT = { has_country_flag = marauder_ugly }
			NOR = {
				has_valid_civic = "civic_fanatic_purifiers"
				has_valid_civic = "civic_hive_devouring_swarm"
				has_valid_civic = "civic_machine_terminator"
			}
		}
		set_country_flag = marauder_ugly
	}

	# Marauder 2
	option = { # Offer Energy tribute
		name = marauder.101.a
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = { 
			determine_energy_tribute_raided = yes
		}
		tribute_cost_energy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = { 
			determine_mineral_tribute_raided = yes
		}
		tribute_cost_minerals_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = { 
			determine_food_tribute_raided = yes
		}
		tribute_cost_food_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Alloy tribute
		name = marauder.101.e_mod
		response_text = marauder.102.2.a.response
		trigger = {
			from = { has_country_flag = marauder_2 }
		}
		allow = { 
			determine_alloy_tribute_raided = yes
		}
		tribute_cost_alloy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}

	# Marauder 3
	option = { # Offer Energy tribute
		name = marauder.101.a
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = { 
			determine_energy_tribute_raided = yes
		}
		tribute_cost_energy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Mineral tribute
		name = marauder.101.b
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = { 
			determine_mineral_tribute_raided = yes
		}
		tribute_cost_minerals_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Food tribute
		name = marauder.101.c
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = { 
			determine_food_tribute_raided = yes
		}
		tribute_cost_food_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}
	option = { # Offer Alloy tribute
		name = marauder.101.e_mod
		response_text = marauder.102.3.a.response
		trigger = {
			from = { has_country_flag = marauder_3 }
		}
		allow = { 
			determine_alloy_tribute_raided = yes
		}
		tribute_cost_alloy_raided = yes
		hidden_effect = {
			remove_country_flag = raid_target_of@event_target:marauder_country
			remove_country_flag = under_marauder_attack
			#remove_country_flag = marauder_tribute_1@event_target:marauder_country
			#remove_country_flag = marauder_tribute_2@event_target:marauder_country
			#remove_country_flag = marauder_tribute_3@event_target:marauder_country
			#remove_country_flag = marauder_tribute_4@event_target:marauder_country
			#remove_country_flag = marauder_tribute_5@event_target:marauder_country
			#remove_country_flag = marauder_tribute_6@event_target:marauder_country
			remove_relation_flag = {
				who = event_target:marauder_country
				flag = current_target
			}
			event_target:marauder_country = {
				remove_country_flag = raid_ongoing
				set_timed_country_flag = { flag = raid_cooldown days = @raidcooldown }
			}
			event_target:marauder_raiding_country = {
				random_owned_fleet = {
					limit = { has_fleet_flag = raiding_fleet }
					delete_fleet = this
				}
				destroy_country = yes
			}
		}
	}

	option = { # Refuse
		name = marauder.102.e
		default_hide_option = yes
	}
}

# AI hires Raiders
event = {
	id = marauder.150
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		years_passed >= 50
		any_country = {
			OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
			is_ai = yes
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_machine_terminator
			}
			any_relation = {
				OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
				NOT = { is_same_value = prev }
				has_communications = prev
				OR = {
					is_rival = prev
					prev = { is_rival = prev }
					has_crisis_level = crisis_level_2
					has_crisis_level = crisis_level_3
					has_crisis_level = crisis_level_4
					has_crisis_level = crisis_level_5
					AND = {
						prev = { has_ascension_perk = ap_become_the_crisis }
						OR = {
							is_galactic_custodian = yes
							is_galactic_emperor = yes
							galactic_community_rank = 1
							galactic_community_rank = 2
						}
					}
				}
				NOR = {
					has_country_flag = under_marauder_attack
					has_country_flag = target_of_hired_ai_raid
				}
			}
			resource_stockpile_compare = { resource = energy value >= 5000 }
			any_relation = {
				is_country_type = dormant_marauders
				has_communications = prev
				NOR = {
					has_country_flag = raid_ongoing
					has_country_flag = raid_cooldown
				}
			}
		}
	}

	immediate = {
		# define hired_marauders for use in weights
		random_playable_country = {
			limit = {
				is_ai = yes
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_machine_terminator
				}
				any_relation = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					NOT = { is_same_value = prev }
					has_communications = prev
					OR = {
						is_rival = prev
						prev = { is_rival = prev }
						has_crisis_level = crisis_level_2
						has_crisis_level = crisis_level_3
						has_crisis_level = crisis_level_4
						has_crisis_level = crisis_level_5
						AND = {
							prev = { has_ascension_perk = ap_become_the_crisis }
							OR = {
								is_galactic_custodian = yes
								is_galactic_emperor = yes
								galactic_community_rank = 1
								galactic_community_rank = 2
							}
						}
					}
					NOR = {
						has_country_flag = under_marauder_attack
						has_country_flag = target_of_hired_ai_raid
					}
				}
				resource_stockpile_compare = { resource = energy value >= 5000 }
				any_relation = {
					is_country_type = dormant_marauders
					has_communications = prev
					NOR = {
						has_country_flag = raid_ongoing
						has_country_flag = raid_cooldown
					}
				}
			}
			save_event_target_as = hired_marauders
		}
		random_list = {
			3 = {
				modifier = {
					factor = 0
					event_target:hired_marauders = {
						OR = {
							has_ai_personality = honorbound_warriors
							has_ai_personality = xenophobic_isolationists
						}
					}
				}
				modifier = {
					factor = 0.6
					event_target:hired_marauders = {
						has_ai_personality = peaceful_traders
					}
				}
				event_target:hired_marauders = {
					add_resource = { energy = @raidcost }
					random_relation = {
						limit = {
							OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
							NOT = { is_same_value = prev }
							has_communications = prev
							OR = {
								is_rival = prev
								prev = { is_rival = prev }
								has_crisis_level = crisis_level_2
								has_crisis_level = crisis_level_3
								has_crisis_level = crisis_level_4
								has_crisis_level = crisis_level_5
								AND = {
									prev = { has_ascension_perk = ap_become_the_crisis }
									OR = {
										is_galactic_custodian = yes
										is_galactic_emperor = yes
										galactic_community_rank = 1
										galactic_community_rank = 2
									}
								}
							}
							NOR = {
								has_country_flag = under_marauder_attack
								has_country_flag = target_of_hired_ai_raid
							}
						}
						save_event_target_as = marauder_target
						set_timed_country_flag = { flag = target_of_hired_ai_raid days = 7200 }
					}
					random_relation = {
						limit = {
							is_country_type = dormant_marauders
							NOR = {
								has_country_flag = raid_ongoing
								has_country_flag = raid_cooldown
							}
						}
						save_event_target_as = raiding_marauder
					}
				}
				if = {
					limit = {
						event_target:raiding_marauder = { has_country_flag = marauder_1 }
					}
					random_system = {
						limit = { has_star_flag = marauder_capital_1 }
						save_event_target_as = marauder_system
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				if = {
					limit = {
						event_target:raiding_marauder = { has_country_flag = marauder_2 }
					}
					random_system = {
						limit = { has_star_flag = marauder_capital_2 }
						save_event_target_as = marauder_system
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				if = {
					limit = {
						event_target:raiding_marauder = { has_country_flag = marauder_3 }
					}
					random_system = {
						limit = { has_star_flag = marauder_capital_3 }
						save_event_target_as = marauder_system
						random_system_planet = {
							limit = { has_planet_flag = raid_source }
							save_event_target_as = raid_source
						}
					}
				}
				event_target:raiding_marauder = {
					set_country_flag = raid_ongoing
					owner_species = { save_event_target_as = marauder_species }
				}
				create_country = {
					name = event_target:raiding_marauder
					type = "marauder_raiders"
					species = event_target:marauder_species
					flag = event_target:raiding_marauder
					effect = {
						save_event_target_as = marauder_raiding_country
						if = {
							limit = { event_target:raiding_marauder = { has_country_flag = marauder_1 } }
							set_country_flag = marauder_1
						}
						if = {
							limit = { event_target:raiding_marauder = { has_country_flag = marauder_2 } }
							set_country_flag = marauder_2
						}
						if = {
							limit = { event_target:raiding_marauder = { has_country_flag = marauder_3 } }
							set_country_flag = marauder_3
						}
						set_country_flag = raid_ongoing
					}
				}
				event_target:marauder_raiding_country = {
					every_country = { establish_communications_no_message = event_target:marauder_raiding_country }
					event_target:raiding_marauder = {
						set_country_flag = parent_of@event_target:marauder_raiding_country
						set_faction_hostility = {
							target = event_target:marauder_raiding_country
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
					create_leader = {
						class = admiral
						species = event_target:marauder_species
						name = random
						skill = 3
						leader_age_min = 25
						leader_age_max = 45
						traits = {
							trait = random_trait
							trait = leader_trait_mercenary_warrior
						}
					}
					create_fleet = {
						name = "NAME_Raiding_Fleet"
						effect = {
							set_owner = event_target:raiding_marauder # For ship names
							create_marauder_raiders = yes
							set_location = event_target:raid_source
							set_fleet_stance = aggressive
							set_fleet_bombardment_stance = indiscriminate
							set_aggro_range_measure_from = self
							set_aggro_range = 150
							set_fleet_flag = hired_raiding_fleet
							set_fleet_flag = raiding_fleet
							set_owner = event_target:marauder_raiding_country # Real owner
							assign_leader = last_created_leader

							closest_system = {
								limit = {
									any_system_planet = {
										exists = owner
										owner = { is_same_value = event_target:marauder_target }
										num_pops > 0
									}
								}
								save_event_target_as = raid_system
							}
							event_target:raid_system = {
								random_system_planet = {
									limit = {
										exists = owner
										owner = { is_same_value = event_target:marauder_target }
										num_pops > 0
									}
									save_event_target_as = raid_planet
								}
							}
							auto_move_to_planet = {
								target = event_target:raid_planet
								clear_auto_move_on_arrival = no
							}
						}
					}
					set_faction_hostility = {
						target = event_target:marauder_target
						set_hostile = yes
						set_neutral = no
						set_friendly = no
					}
				}
				event_target:marauder_target = {
					set_country_flag = raid_target_of@event_target:raiding_marauder
					set_country_flag = under_marauder_attack
					set_relation_flag = {
						who = event_target:raiding_marauder
						flag = current_hired_target
					}
					if = {
						limit = { has_communications = event_target:raiding_marauder }
						country_event = { id = marauder.120 days = 1 random = 30 }
					}
					else = {
						country_event = { id = marauder.123  days = 1 random = 30 }
					}
				}
			}
			110 = {}
		}
	}
}

### CRISIS BEGINS

country_event = {
	id = marauder.500
	hide_window = yes

	trigger = {
		OR = {
			AND = {
				mid_game_years_passed >= 10
				end_game_years_passed < 0
			}
			has_global_flag = horde_triggered
		}
		is_country_type = dormant_marauders
		NOT = { has_global_flag = marauder_crisis_started }
		OR = {
			AND = {
				has_country_flag = marauder_1
				any_system_within_border = { has_star_flag = marauder_capital_1 }
			}
			AND = {
				has_country_flag = marauder_2
				any_system_within_border = { has_star_flag = marauder_capital_2 }
			}
			AND = {
				has_country_flag = marauder_3
				any_system_within_border = { has_star_flag = marauder_capital_3 }
			}
		}
	}

	mean_time_to_happen = {
		years = 100
		modifier = {
			factor = 0.66
			mid_game_years_passed >= 50
		}
		modifier = {
			factor = 1.5
			count_country = {
				limit = { is_country_type = dormant_marauders }
				count > 1
			}
			count_country = {
				limit = { is_country_type = dormant_marauders }
				count < 3
			}
		}
		modifier = {
			factor = 2.0
			count_country = {
				limit = { is_country_type = dormant_marauders }
				count > 2
			}
		}
	}

	immediate = {
		set_country_type = awakened_marauders
		set_global_flag = marauder_crisis_started
		set_global_flag = marauder_crisis_ongoing
		save_global_event_target_as = raider_khanate
		if = {
			limit = { has_country_flag = marauder_1 }
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { has_country_flag = marauder_2 }
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		if = {
			limit = { has_country_flag = marauder_3 }
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				random_system_planet = {
					limit = { has_planet_flag = raid_source }
					save_global_event_target_as = marauder_rally_point
					set_planet_flag = marauder_rally_point
				}
			}
		}
		change_government = {
			civics = { civic = civic_great_khans_vision }
		}
		set_name = random
		change_country_flag = {
			icon = {
				category = "pirate"
				file = "flag_pirate_11.dds"
			}
			background= {
				category = "backgrounds"
				file = "00_solid.dds"
			}
			colors={
				"red"
				"red"
				"null"
				"null"
			}
		}
		create_ship_design = { design = "NAME_Pirate_Transport" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_Clan_Builder" }
		add_ship_design = last_created_design

		### Ruler Khan
		create_leader = {
			class = ruler
			species = owner_main_species
			name = random
			skill = 10
			leader_age_min = 22
			leader_age_max = 40
			traits = {
				trait = leader_trait_ruler_great_khan
			}
		}
		last_created_leader = {
			set_leader_flag = great_khan
			save_global_event_target_as = great_khan_ruler
		}
		assign_leader = last_created_leader
		set_timed_global_flag = { flag = khan_no_die days = 7200 } # Should only die in battle first 20 years
		country_event = { id = marauder.514 days = 10800 random = 5000 } # Khan dies of old age if still around

		### Admiral Khan
		clone_leader = {
			target = event_target:great_khan_ruler
			class = admiral
			skill = 10
			traits = {
				trait = leader_trait_great_khan
			}
			effect = {
				set_leader_flag = great_khan
				save_global_event_target_as = great_khan
			}
		}

		create_1st_khan_fleet = yes
		create_marauder_fleet = yes
		create_marauder_fleet = yes
		create_marauder_fleet = yes
		create_marauder_fleet = yes
		create_marauder_fleet = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		create_marauder_constructors = yes
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 30000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 40000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 50000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 60000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 70000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 80000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 90000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 100000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
			create_marauder_fleet = yes
			create_marauder_fleet = yes
		}
		country_event = { id = marauder.520 days = 180 } # Start reinforcement cycle
		if = {
			limit = {
				NOT = { has_global_flag = horde_triggered }
			}
			observer_event = { id = observer.13 }
			every_country = {
				limit = { is_ai = no }
				establish_communications_no_message = root
				country_event = { id = marauder.501 }
			}
		}
		else = {
			observer_event = { id = observer.18 }
			every_country = {
				limit = { is_ai = no }
				establish_communications_no_message = root
				country_event = { id = marauder.526 }
			}
		}

		# Mercenaries Defect (Marauder 1)
		if = {
			limit = { has_country_flag = marauder_1 }
			every_country = {
				limit = {
					OR = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = armada_of_the_voidborn
								has_fleet_flag = star_rider_flotilla
								has_fleet_flag = first_storm_wing
							}
						}
						any_owned_leader = {
							has_leader_flag = hired_merc_leader_1
						}
					}
				}
				country_event = { id = marauder.77 days = 20 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_1 }
				set_star_flag = marauder_starbase_set
				create_starbase = {
					size = starbase_citadel
					module = missile_battery
					owner = event_target:raider_khanate
				}
				closest_system = {
					limit = {
						has_star_flag = marauder_system
						NOT = { has_star_flag = marauder_starbase_set }
					}
					max_steps = 5
					set_star_flag = marauder_starbase_set
					create_starbase = {
						size = starbase_starfortress
						module = missile_battery
						owner = event_target:raider_khanate
					}
				}
				closest_system = {
					limit = {
						has_star_flag = marauder_system
						NOT = { has_star_flag = marauder_starbase_set }
					}
					max_steps = 5
					set_star_flag = marauder_starbase_set
					create_starbase = {
						size = starbase_starfortress
						module = missile_battery
						owner = event_target:raider_khanate
					}
				}
			}
		}
		# Mercenaries Defect (Marauder 2)
		if = {
			limit = { has_country_flag = marauder_2 }
			every_country = {
				limit = {
					OR = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = dwamak_bashers
								has_fleet_flag = unhinged_screamer_flotilla
								has_fleet_flag = frenzied_volunteer_squadron
							}
						}
						any_owned_leader = {
							has_leader_flag = hired_merc_leader_1
						}
					}
				}
				country_event = { id = marauder.77 days = 20 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_2 }
				set_star_flag = marauder_starbase_set
				create_starbase = {
					size = starbase_citadel
					module = missile_battery
					owner = event_target:raider_khanate
				}
				closest_system = {
					limit = {
						has_star_flag = marauder_system
						NOT = { has_star_flag = marauder_starbase_set }
					}
					max_steps = 5
					set_star_flag = marauder_starbase_set
					create_starbase = {
						size = starbase_starfortress
						module = missile_battery
						owner = event_target:raider_khanate
					}
				}
				closest_system = {
					limit = {
						has_star_flag = marauder_system
						NOT = { has_star_flag = marauder_starbase_set }
					}
					max_steps = 5
					set_star_flag = marauder_starbase_set
					create_starbase = {
						size = starbase_starfortress
						module = missile_battery
						owner = event_target:raider_khanate
					}
				}
			}
		}
		# Mercenaries Defect (Marauder 3)
		if = {
			limit = { has_country_flag = marauder_3 }
			every_country = {
				limit = {
					OR = {
						any_owned_fleet = {
							OR = {
								has_fleet_flag = her_chosen_champions
								has_fleet_flag = order_of_eternal_night
								has_fleet_flag = twilight_congregation
							}
						}
						any_owned_leader = {
							has_leader_flag = hired_merc_leader_1
						}
					}
				}
				country_event = { id = marauder.77 days = 20 }
			}
			random_system = {
				limit = { has_star_flag = marauder_capital_3 }
				set_star_flag = marauder_starbase_set
				create_starbase = {
					size = starbase_citadel
					module = missile_battery
					owner = event_target:raider_khanate
				}
				closest_system = {
					limit = {
						has_star_flag = marauder_system
						NOT = { has_star_flag = marauder_starbase_set }
					}
					max_steps = 5
					set_star_flag = marauder_starbase_set
					create_starbase = {
						size = starbase_starfortress
						module = missile_battery
						owner = event_target:raider_khanate
					}
				}
				closest_system = {
					limit = {
						has_star_flag = marauder_system
						NOT = { has_star_flag = marauder_starbase_set }
					}
					max_steps = 5
					set_star_flag = marauder_starbase_set
					create_starbase = {
						size = starbase_starfortress
						module = missile_battery
						owner = event_target:raider_khanate
					}
				}
			}
		}

		# Mercenaries Join the Great Khan
		country_event = { id = marauder.78 days = 20 }

		# Should not attack Enclaves
		every_country = {
			limit = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
					is_country_type = enclave
				}
			}
			event_target:raider_khanate = {
				set_faction_hostility = {
					target = prev
					set_hostile = no
					set_neutral = no
					set_friendly = yes
				}
			}
		}
	}
}

# Return of the Great Khan (HIDDEN)
country_event = {
	id = marauder.507
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_2nd_khan_fleet = yes
		create_marauder_fleet = yes
		create_marauder_armies = yes
		create_marauder_armies = yes
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 40000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 50000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 60000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 70000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 80000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 90000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
			create_marauder_fleet = yes
		}
		if = {
			limit = {
				any_country = {
					OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
					OR = {
						fleet_power > 100000
						any_owned_planet = {
							has_planet_flag = fallen_empire_world
						}
					}
				}
			}
			create_marauder_fleet = yes
			create_marauder_fleet = yes
			create_marauder_fleet = yes
		}
		observer_event = { id = observer.15 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.508 }
		}
	}
}

# Marauder Reinforcement Cycle
country_event = {
	id = marauder.520
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_started
		any_planet_within_border = {
			has_planet_flag = marauder_rally_point # Make sure home system still owned
		}
	}

	immediate = {
		create_marauder_constructors = yes
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		# If at fleet cap, check again later
		if = {
			limit = {
				fleet_power > 200000
			}
			country_event = { id = marauder.520 days = 340 }
			break = yes
		}
		create_marauder_fleet = yes
		country_event = { id = marauder.520 days = 340 }
	}
}

# AI Empire Submits to Marauder
country_event = {
	id = marauder.555
	hide_window = yes

	trigger = {
		has_global_flag = marauder_crisis_started
		NOT = { has_global_flag = great_khan_dead }
		exists = event_target:raider_khanate
		OR = { is_country_type = default is_country_type = ascended_empire is_country_type = lost_empire }
		is_subject = no
		is_ai = yes
		NOR = {
			has_valid_civic = "civic_fanatic_purifiers"
			has_valid_civic = "civic_hive_devouring_swarm"
			has_valid_civic = "civic_machine_terminator"
		}
		check_variable = {
			which = "planets_lost_to_marauder"
			value > 2
		}
		OR = {
			relative_power = {
				who = event_target:raider_khanate
				category = fleet
				value = inferior
			}
			relative_power = {
				who = event_target:raider_khanate
				category = fleet
				value = pathetic
			}
		}
	}

	mean_time_to_happen = {
		years = 5
		modifier = {
			factor = 0.1
			num_owned_planets < 3
		}
		modifier = {
			factor = 0.5
			check_variable = {
				which = "planets_lost_to_marauder"
				value > 10
			}
		}
		modifier = {
			factor = 0.5
			has_ai_personality = peaceful_traders
		}
		modifier = {
			factor = 0.1
			check_variable = {
				which = "planets_lost_to_marauder"
				value > 20
			}
		}
		modifier = {
			factor = 0.1
			has_ai_personality = fanatic_befrienders
		}
		modifier = {
			factor = 3
			OR = {
				has_ai_personality = honorbound_warriors
				has_ai_personality = technological_warriors
			}
		}
		modifier = {
			factor = 2
			has_ai_personality = xenophobic_isolationists
		}
	}

	immediate = {
		save_event_target_as = new_satrapy
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				set_subject_of = {
					who = event_target:raider_khanate
					subject_type = satrapy
				}
				hidden_effect = {
					country_event = { id = marauder.553 days = 10 }
					add_modifier = {
						modifier = "satrapy_of_horde"
						days = -1
					}
					event_target:raider_khanate = {
						set_faction_hostility = {
							target = prev
							set_hostile = no
							set_neutral = no
							set_friendly = yes
						}
					}
				}
			}
		}
		set_subject_of = {
			who = event_target:raider_khanate
			subject_type = satrapy
		}
		country_event = { id = marauder.553 days = 10 }
		add_modifier = {
			modifier = "satrapy_of_horde"
			days = -1
		}
		event_target:raider_khanate = {
			set_faction_hostility = {
        		target = event_target:new_satrapy
        		set_hostile = no
        		set_neutral = no
        		set_friendly = yes
        	}
        }
        observer_event = { id = observer.19 }
        every_country = {
			limit = {
				is_ai = no
				has_communications = event_target:new_satrapy
			}
			country_event = { id = marauder.552 }
		}
	}
}

# The New Khanate (HIDDEN)
country_event = {
	id = marauder.602
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		every_subject = {
			country_event = { id = marauder.671 days = 10 }
		}
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = default
			authority = auth_imperial
			civics = { civic = civic_great_khans_legacy }
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_militarist
				ethic = ethic_xenophobe
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = new_khanate
			set_country_flag = new_khanate_flag
			set_name = random
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
		}
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:new_khanate
			}
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = root }
			every_owned_starbase = {
				set_starbase_size = starbase_outpost
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = {
						slot = 1
						module = shipyard
					}
					set_starbase_module = {
						slot = 2
						module = shipyard
					}
					set_starbase_module = {
						slot = 3
						module = shipyard
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
				if = {
					limit = {
						any_owned_starbase = { has_starbase_size = starbase_outpost }
					}
					random_owned_starbase = {
						limit = { has_starbase_size = starbase_outpost }
						set_starbase_size = starbase_starhold
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}

			}
			# Survey Rest of Horde's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = {
					owner = event_target:new_khanate
				}
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = {
					owner = event_target:new_khanate
				}
			}
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
		}
		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:new_khanate
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			remove_modifier = "satrapy_of_horde"
		}
		observer_event = { id = observer.22 }
		every_country = {
			limit = { is_ai = no }
			country_event = { id = marauder.640 }
		}
		destroy_country = yes
	}
}

# Democratic Federation (HIDDEN)
country_event = {
	id = marauder.603
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		owner_species = { save_event_target_as = marauder_species }
		every_owned_fleet = {
			limit = {
				count_owned_ship = {
					count < 1
					limit = { is_ship_size = starbase_marauder }
				}
			}
			delete_fleet = this
		}
		create_country = {
			name_list = random
			species = event_target:marauder_species
			type = default
			authority = auth_democratic
			civics = random
			origin = "origin_khan_successor"
			ethos = {
				ethic = ethic_fanatic_egalitarian
				ethic = ethic_xenophile
			}
			ignore_initial_colony_error = yes
		}
		last_created_country = {
			save_event_target_as = new_khanate
			set_country_flag = democratic_khanate_flag
			set_name = random
		}
		every_owned_fleet = {
			set_owner = event_target:new_khanate
		}
		every_owned_planet = {
			set_owner = event_target:new_khanate
			set_controller = event_target:new_khanate
		}
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = {
				set_owner = event_target:new_khanate
			}
		}
		event_target:new_khanate = {
			add_resource = {
				minerals = 20000
				energy = 20000
				alloys = 20000
				consumer_goods = 20000
				food = 20000
				influence = 1000
			}
			copy_techs_from = { target = root }
			every_owned_starbase = {
				set_starbase_size = starbase_outpost
			}
			if = {
				limit = {
					any_owned_starbase = { has_starbase_size = starbase_outpost }
				}
				random_owned_starbase = {
					limit = { has_starbase_size = starbase_outpost }
					set_starbase_size = starbase_starhold
					set_starbase_module = {
						slot = 1
						module = shipyard
					}
					set_starbase_module = {
						slot = 2
						module = shipyard
					}
					set_starbase_module = {
						slot = 3
						module = shipyard
					}
				}
			}
			# Survey Own Space
			every_planet_within_border = {
				set_surveyed = {
					surveyed = yes
					surveyor = event_target:new_khanate
				}
			}
			# Survey Rest of Marauder's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Survey Rest of Horde's Space
			root = {
				every_planet_within_border = {
					set_surveyed = {
						surveyed = yes
						surveyor = event_target:new_khanate
					}
				}
			}
			# Mining and Research Stations
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_mining_station
					has_mining_station = no
				}
				create_mining_station = {
					owner = event_target:new_khanate
				}
			}
			every_planet_within_border = {
				limit = {
					has_deposit_for = shipclass_research_station
					has_research_station = no
				}
				create_research_station = {
					owner = event_target:new_khanate
				}
			}
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
			create_marauder_successor_fleet = yes
		}

		# Establish Communications
		every_country = {
			limit = { has_communications = root }
			establish_communications_no_message = event_target:new_khanate
		}
		every_country = {
			limit = { has_modifier = satrapy_of_horde }
			country_event = { id = marauder.660}
			remove_modifier = "satrapy_of_horde"
			set_subject_of = {
				who = none
			}
		}
		observer_event = { id = observer.23 }
		every_country = {
			limit = {
				NOT = { is_subject_type = satrapy }
				is_ai = no
			}
			country_event = { id = marauder.661}
		}
		destroy_country = yes
	}
}