############################
#
# Necroids Events
#
# Written by Pierre du Plessis
#
############################

namespace = necroids

# on_pop_purged
# This = Planet scope
# From = Country
# FromFrom = Pop
# Mechromancy - CyberZombies
planet_event = {
	id = necroids.25
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			has_ascension_perk = ap_mechromancy
		}
		exists = fromfrom #crisis.202 can remove the last pop
		fromfrom = {
			NOT = {
				has_purge_type = {
					type = purge_displacement
				}
			}
			is_robotic_species = no
			NAND = {
				species = { is_archetype = PRESAPIENT } # vfix - Script Error, Checking trigger against an unsupported scope! Event: necroids.25 Location:  file: events/necroids_events_1.txt line: 793 Trigger Type: is_archetype 
				has_trait = trait_cybernetic
				has_trait = trait_zombie
			}
		}
	}

	immediate = {
		random_list = {
		#	66 = {	}
			# 33% Chance to create a cyber-zombie per pop.
			33 = {
				create_pop_group = {
					species = fromfrom.species
				}
				last_created_pop = {
					modify_species = {
						species = this
						add_trait = trait_cybernetic
						add_trait = trait_zombie
						add_traits_at_start_of_list = yes
						remove_trait = trait_self_modified
						remove_trait = trait_latent_psionic
						remove_trait = trait_psionic
					}
					set_citizenship_type = {
						country = root.owner
						type = citizenship_full_machine
					}
					if = { # assimilator empire
						limit = {
							root.owner = {
								is_machine_empire = yes
								has_civic = civic_machine_assimilator
								NOT = { has_tradition = tr_cybernetics_assimilator_adopt }
							}
						}
						root.owner = { generate_cyborg_treats = yes } # scripted effect
					}
					else_if = {
						limit = {
							root.owner = {
								is_machine_empire = yes
								has_civic = civic_machine_assimilator
								has_tradition = tr_cybernetics_assimilator_adopt
							}
						}
						root.owner = { generate_cyborg_extra_treats = yes } # scripted effect
					}
				}
			}
		}
	}
}
