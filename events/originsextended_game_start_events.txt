
### ORIGINS EXTENDED GAME START EVENTS

namespace = originsextended_game_start

# this: capital planet
# from: founder species
planet_event = {
	id = originsextended_game_start.1001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				owner = {
					has_origin = originsextended_starless
				}
			}
			originsextended_generate_starless_effects = yes # see scripted_effects
		}
		# else_if = {
		# 	limit = {
		# 		owner = {
		# 			has_origin = originsextended_farming
		# 		}
		# 	}
		# 	originsextended_generate_farming_effects = yes # see scripted_effects
		# }
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_core
				}
			}
			originsextended_generate_core_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_red
				}
			}
			originsextended_generate_red_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_infest
				}
			}
			originsextended_generate_infest_effects = yes # see scripted_effects
		}
		# else_if = {
		# 	limit = {
		# 		owner = {
		# 			OR = {	
		# 				has_origin = originsextended_dual
		# 				has_origin = originsextended_dualhive
		# 				#has_origin = originsextended_dualrob
		# 			}
		# 		}
		# 	}
		# 	originsextended_generate_dual_effects = yes # see scripted_effects
		# }
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_gaia
				}
			}
			originsextended_generate_gaia_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_magnetica
				}
			}
			originsextended_generate_magnetica_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					OR = { 
						has_origin = originsextended_farming
						has_origin = originsextended_dual
						has_origin = originsextended_dualhive
					}
				}
			}
			#originsextended_generate_start_pops = yes # see scripted_effects

			every_owned_pop = {
				set_pop_flag = oe_original_pops
			}
		
			if = {
				limit = {
					owner = {
						OR = {
							has_origin = originsextended_dual
							has_origin = originsextended_dualhive
						}
					}
				}
		
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					set_species_flag = oe_dual_species@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_full
					}
					if = {
						limit = {
							species.owner = {
								has_origin = originsextended_dualhive
							}
						}
						set_living_standard = {
							country = root.owner
							type = living_standard_hive_mind
						}
					}
					else = {
						set_living_standard = {
							country = root.owner
							type = living_standard_normal
						}
					}
				}
		
				while = {
					count = 12
					create_pop = {
						species = last_created_species
						ethos = random
					}
					if = {
						limit = {
							owner = {
								has_origin = originsextended_dualhive
							}
						}
						last_created_pop = {
							clear_ethos = yes
						}
					}
				}
			}
		
			if = {
				limit = {
					owner = {
						has_origin = originsextended_farming
					}
				}
				last_created_species = {
					set_species_flag = oe_dual_species@root.owner
					set_species_flag = syncretic_species@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
					set_slavery_type = {
						country = root.owner
						type = slavery_livestock
					}
				}
				while = {
					count = 5
					create_pop = {
						species = last_created_species
						ethos = random
					}
				}
			}
		
			# Feed the rocks
			if = {
				limit = {
					owner = { last_created_species = { is_lithoid = yes } }
				}
				owner = {
					set_country_flag = lithoid_subspecies
				}
			}
			if = {
				limit = {
					NOT = {
						owner = { last_created_species = { is_lithoid = yes } }
					}
				}
				owner = {
					set_country_flag = non_lithoid_subspecies
				}	
			}
		
			# not as efficient as the other one, yes, but i needed to debug something else
			if = {
				limit = {
					owner = {
						is_lithoid_empire = no
					}
				}
				if = {
					limit = { 
						owner = {
							has_country_flag = lithoid_subspecies
						}
					}
					owner = {
						add_resource = { food = 100	}
						add_resource = { minerals = 100 }
					}
		
				}
				else = {
					owner = {
						add_resource = { food = 200 }
					}
				}
			}
			if = {
				limit = {
					owner = {
						is_lithoid_empire = no
					}
				}
				if = {
					limit = { 
						owner = {
							has_country_flag = non_lithoid_subspecies
						}
					}
					owner = {
						add_resource = { food = 100	}
						add_resource = { minerals = 100 }
					}
		
				}
				else = {
					owner = {
						add_resource = { minerals = 200 }
					}
				}
			}
		
			every_owned_pop = {
				limit = {
					has_pop_flag = oe_original_pops
					NOT = {
						has_pop_flag = oe_unoriginal_pops
					}
				}
				kill_pop = yes
			}
		
			if = {
				limit = { owner = { is_hive_empire = yes } }
				while = {
					limit = { num_pops < 33 }
					create_pop = {
						species = owner_main_species
						ethos = random
					}
					last_created_pop = {
						set_pop_flag = oe_unoriginal_pops
					}
				}
			}
			if = {
				limit = { owner = { is_megacorp = yes } }
				while = {
					limit = { num_pops < 28 }
					create_pop = {
						species = owner_main_species
						ethos = random
					}
					last_created_pop = {
						set_pop_flag = oe_unoriginal_pops
					}
				}
			}
			if = {
				limit = {
					owner = {
						is_regular_empire = yes
					}
				}
				while = {
					limit = { num_pops < 28 }
					create_pop = {
						species = owner_main_species
						ethos = random
					}
					last_created_pop = {
						set_pop_flag = oe_unoriginal_pops
					}
				}
			}

		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_terminal
				}
			}
			originsextended_generate_terminal_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_graveyard
				}
			}
			originsextended_generate_starless_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_gate
				}
			}
			originsextended_generate_gate_effects = yes # see scripted_effects
		}
		else_if = {
			limit = {
				owner = {
					has_origin = originsextended_heart
				}
			}
			originsextended_generate_heart_effects = yes # see scripted_effects
		}
		# else_if = {
		# 	limit = {
		# 		owner = {
		# 			has_origin = originsextended_gods
		# 		}
		# 	}
		# 	owner = {
		# 		country_event = {
		# 			id = originsextended_gods.11
		# 		}
		# 	}
		# }
		else = {}
	}
}

event = {
	id = originsextended_game_start.2002
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Outreach origin
		every_country = {
			limit = { 
				has_origin = originsextended_outreach
			}
			country_event = { id = originsextended_outreach.00 }
		}
		# Research origin
		every_country = {
			limit = { 
				has_origin = originsextended_research
			}
			country_event = { id = originsextended_research.00 }
		}
	}
}

country_event = {
	id = originsextended_game_start.3003
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Red origin
		if = {
			limit = {
				owner = {
					has_origin = originsextended_red
				}
			}
			every_owned_planet = {
				originsextended_generate_red_earth_effects = yes
			}
		}
		# Crowded origin
		else_if = {
			limit = { 
				has_origin = originsextended_crowded
			}
			country_event = { id = originsextended_crowded.00 }
			#originsextended_generate_crowded_effects = yes # see scripted_effects
		}
		else_if = {
			limit = { 
				has_origin = originsextended_relatives
			}
			country_event = { id = originsextended_relatives.00 }
		}
	}
}

# Sol Cleaner 9000
event = {
	id = originsextended_game_start.4004
	hide_window = yes
	is_triggered_only = yes

	# trigger = {
	# 	any_country = {
	# 		OR = {
	# 			has_origin = originsextended_red
	# 			has_origin = originsextended_three
	# 		}
	# 	}
	# }

	immediate = {
		if = {
			limit = {
				any_country = {
					OR = {
						has_origin = originsextended_red
						has_origin = originsextended_three
					}
				}
			}
			every_system = {
				limit = {
					has_star_flag = sol
					exists = owner
					owner = {
						is_ai = yes
					}
					NOT = {
						has_star_flag = originsextended_three_system_sol_system_flag
					}
					# NOR = {
					# 	owner = {
					# 		has_origin = originsextended_red
					# 	}
					# 	AND = {
					# 		has_star_flag = originsextended_three_system_sol_system_flag
					# 		owner = {
					# 			is_ai = yes
					# 		}
					# 	}
					# 	owner = {
					# 		is_ai = no
					# 	}
					# }
					# OR = {
					# 	owner = {
					# 		NOT = {
					# 			has_origin = originsextended_red
					# 		}
					# 	}
					# 	has_star_flag = originsextended_three_system_sol_system_flag
					# }
				}
				remove_star_flag = sol_system
				remove_star_flag = sol
				remove_star_flag = nuked_sol
				remove_star_flag = sol_target
				remove_star_flag = com_sol
				remove_star_flag = primitive_sol
				remove_star_flag = lost_colony_sol
				# every_system_planet = {
				# 	limit = {
				# 		has_planet_flag = planet_earth
				# 		has_planet_flag = nuked_earth
				# 	}
				# 	remove_planet = yes
				# }
				every_system_ambient_object = {
					# limit = {
					# 	is_star = no
					# }
					destroy_ambient_object = THIS
				}
				set_star_class = sc_black_hole
				set_name = "Cambria"
			}

		}
		#else = {}
		# every_system = {
		# 	limit = {
		# 		has_star_flag = sol
		# 		exists = owner
		# 		NOR = {
		# 			owner = {
		# 				has_origin = originsextended_red
		# 			}
		# 			has_star_flag = originsextended_three_system_sol_system_flag
		# 		}
		# 		# OR = {
		# 		# 	owner = {
		# 		# 		NOT = {
		# 		# 			has_origin = originsextended_red
		# 		# 		}
		# 		# 	}
		# 		# 	has_star_flag = originsextended_three_system_sol_system_flag
		# 		# }
		# 	}
		# 	remove_star_flag = sol_system
		# 	remove_star_flag = sol
		# 	remove_star_flag = nuked_sol
		# 	remove_star_flag = sol_target
		# 	remove_star_flag = com_sol
		# 	remove_star_flag = primitive_sol
		# 	remove_star_flag = lost_colony_sol
		# 	# every_system_planet = {
		# 	# 	limit = {
		# 	# 		has_planet_flag = planet_earth
		# 	# 		has_planet_flag = nuked_earth
		# 	# 	}
		# 	# 	remove_planet = yes
		# 	# }
		# 	every_system_ambient_object = {
		# 		# limit = {
		# 		# 	is_star = no
		# 		# }
		# 		destroy_ambient_object = THIS
		# 	}
		# 	set_star_class = sc_black_hole
		# 	set_name = "Cambria"
		# }
	}
}