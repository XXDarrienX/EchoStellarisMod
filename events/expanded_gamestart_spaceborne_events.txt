####################################
# 	Spaceborne Gamestart Events
####################################

namespace = spacestart

# Start-up event
event = {
	id = spacestart.1
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = expanded_spaceborne_installed }
	}
	
	immediate = {
		set_global_flag = expanded_spaceborne_installed
		random_country = {
			limit = {
				is_country_type = default
				is_ai = yes
			}
			random_owned_pop = {
				species = { save_global_event_target_as = fleet2_recent_pop_species }
			}
		}
		every_country = {
			limit = { has_origin = origin_amoeba }
			# Met Amoebas
			set_country_flag = Story2
			every_country = {
				limit = {
					OR = {
						is_country_type = amoeba
						is_country_type = amoeba_borderless
						is_country_type = amoeba_garrison
					}
				}
				establish_communications_no_message = PREV
				set_faction_hostility = {
					set_hostile = no
					set_neutral = yes
					target = PREV
				}
			}
			# spawns npc amoebas
			capital_scope = {
				solar_system = {
					set_star_flag = amoeba_system
					# Amoebas in capital system
					random_system_planet = {
						limit = {
							is_star = no
							is_homeworld = no
							is_asteroid = no
						}
						clear_deposits = yes
						set_deposit = d_society_8
						add_modifier = { modifier = nesting_grounds_planet days = -1 }
						save_event_target_as = grazing_grounds
						create_amoeba_country = yes
						event_target:amoeba_country = {
							create_fleet = {
								name = "NAME_Space_Amoeba"
								effect = {
									set_owner = event_target:amoeba_country
									create_ship = {
										name = "NAME_Ortus"
										design = "NAME_Large_Space_Organism_Orange"
									}
									create_ship = {
										name = "NAME_Oriens"
										design = "NAME_Large_Space_Organism_Orange"
									}
									create_ship = {
										name = "NAME_Cortus"
										design = "NAME_Large_Space_Organism_Orange"
									}
									set_location = PREVPREV
									set_fleet_stance = aggressive
									set_aggro_range_measure_from = self
									set_aggro_range = 100
									set_fleet_flag = tiyanki_hunter
									save_event_target_as = hunting_amoeba
									queue_actions = {
										wait = { # Cooldown until they start moving
											duration = 60
											random = 80
										}
										repeat = {
											find_random_system = {
												trigger = {
													id = amoeba.x2.trigger.5
													closest_system = {
														any_ship_in_system = {
															is_ship_size = space_whale_3
															# hunt calves
														}
													}
												}
												found_system = {
													move_to = this
												}
											}
											find_closest_planet = {
												trigger = {
													id = amoeba.x2.trigger.6
													is_star = yes
												}
												found_planet = {
													effect = { 
														id = amoeba.x2.effect.1
														event_target:hunting_amoeba = { set_aggro_range = 500 }
													}
													orbit_planet = this
													wait = {
														duration = 300
														random = 10
													}
												}
											}
											find_random_system = {
												trigger = {
													id = amoeba.x2.trigger.7
													closest_system = {
														any_system_planet = {
															is_planet = event_target:grazing_grounds
														}
													}
												}
												found_system = {
													move_to = this
												}
											}
											find_closest_planet = {
												trigger = {
													id = amoeba.x2.trigger.8
													is_planet = event_target:grazing_grounds
												}
												found_planet = {
													effect = { 
														id = amoeba.x2.effect.2
														event_target:hunting_amoeba = { set_aggro_range = 40 }
													}
													orbit_planet = this
													wait = {
														duration = 400
														random = 150
													}
												}
											}
										}
									}
								}
							}
						}
					}
					# Amoebas in nearby system
					spawn_system = {
						min_distance >= 30
						max_distance <= 60
						initializer = "hostile_init_10"
					}
					random_system = {
						limit = { has_star_flag = amoeba_1_system }
						save_event_target_as = amoeba_1_system
					}
					random_system = {
						limit = {
							distance = {
								source = event_target:amoeba_1_system
								type = euclidean
								min_distance >= 1
								max_distance <= 25
							}
							NOT = { has_hyperlane_to = event_target:amoeba_1_system }
							NOT = { exists = owner }
						}
						save_event_target_as = hyperlane_system
						add_hyperlane = {
							from = this
							to = event_target:amoeba_1_system
						}
					}
				}
			}
			# Amoeba Pacification
			add_modifier = {
				modifier = pacified_amoebas
				days = -1
			}
			add_modifier = {
				modifier = flagellating_movement
				days = -1
			}
			add_research_option = tech_amoeba_strike_craft_1
			add_research_option = tech_regenerative_hull_tissue
			# replace starting fleet
			every_owned_ship = {
				limit = { is_ship_size = corvette }
				delete_ship = this
			}
			#capital_scope = {
			#	save_event_target_as = amoeba_location
			#}
			create_fleet = {
				name = "Bubbles"
				effect = {
					set_owner = PREV
					create_ship = {
						name = "Bubbles"
						design = "NAME_Large_Space_Organism_Teal"
						prefix = no
						upgradable = no
						effect = {
							save_event_target_as = lost_amoeba_ship
						}
					}
					set_location = {
						target = PREV.capital_scope
					}
					set_fleet_stance = passive
					set_fleet_flag = lost_amoeba_adult_fleet@prev
					save_event_target_as = lost_amoeba_adult_fleet
					add_modifier = { modifier = "amoeba_speed_boost" days = -1 }
					add_modifier = { modifier = "evolved_weapon_boost" days = -1 }
					add_modifier = { modifier = "evolved_firing_rate" days = -1 }
					add_modifier = { modifier = "evolved_evasion" days = -1 }
					fleet_event = { id = spacegov.1 days = 36500 }
				}
				settings = {
					can_upgrade = no
					can_disband = no
					can_change_composition = no
					can_change_leader = no
					uses_naval_capacity = no
				}
			}
		}
	}
}

# Start-up event
event = {
	id = spacestart.2
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = expanded_spaceborne_trait_check }
	}
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = enclave
			}
			set_global_flag = expanded_spaceborne_trait_check
			country_event = { id = spacestart.3 days = 1 random = 3 }
		}
	}
}

country_event = {
	id = spacestart.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_country_flag = trader_enclave_country_1 }
			modify_species = {
				species = this
				add_trait = trait_thrifty
			}
			change_dominant_species = { species = last_created_species change_all = yes }
		}
		else_if = {
			limit = { has_country_flag = trader_enclave_country_2 }
			modify_species = {
				species = this
				add_trait = trait_industrious
			}
			change_dominant_species = { species = last_created_species change_all = yes }
		}
		else_if = {
			limit = { has_country_flag = trader_enclave_country_3 }
			modify_species = {
				species = this
				add_trait = trait_ingenious
			}
			change_dominant_species = { species = last_created_species change_all = yes }
		}
		else_if = {
			limit = { has_country_flag = curator_enclave_country }
			modify_species = {
				species = this
				remove_trait = trait_intelligent
				remove_trait = trait_rapid_breeders
				remove_trait = trait_fungal_colony
				remove_trait = trait_plantoid_budding
				add_trait = trait_erudite
				add_trait = trait_slow_breeders
			}
			change_dominant_species = { species = last_created_species change_all = yes }
		}
		else_if = {
			limit = { has_country_flag = artist_enclave_country }
			modify_species = {
				species = this
				add_trait = trait_traditional
				add_trait = trait_communal
				remove_trait = trait_quarrelsome
				remove_trait = trait_solitary
			}
			change_dominant_species = { species = last_created_species change_all = yes }
		}
	}
}

event = {
	id = spacestart.4
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_system = {
			limit = {
				NOR = {
					any_system = { has_hyperlane_to = prev }
					has_natural_wormhole = yes
				}
			}
			random_system_planet = {
				planet_event = { id = spacestart.5 days = 1 random = 30 }
			}
		}
	}
}

planet_event = {
	id = spacestart.5
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		solar_system = { save_event_target_as = isolated_system }
		random_system = {
			limit = {
				has_natural_wormhole = no
				distance = {
					source = event_target:isolated_system
					min_distance >= 50
					max_distance <= 500
				}
				OR = {
					NOT = { exists = space_owner }
					space_owner = { is_ai = yes }
				}
			}
			event_target:isolated_system = {
				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = event_target:isolated_system
		}
	}
}