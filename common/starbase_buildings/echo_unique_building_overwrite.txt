black_hole_observatory = {
	icon = "GFX_spaceport_module_observatory"
	construction_days = 360

	potential = {
		exists = owner
		owner = { has_technology = tech_sensors_3 }
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_starport_or_ring"
			OR = {
				has_starbase_size >= starbase_starport
				is_orbital_ring = yes
			}
		}
		custom_tooltip = {
			fail_text = "requires_black_hole"
			star = { is_star_class = sc_black_hole }
		}
	}

	resources = {
		category = starbase_buildings
		cost = {
			alloys = 100
		}

		produces = {
			physics_research = 20
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_galactic_community_member = yes
				}
				OR = {
					is_active_resolution = "resolution_galacticstudies_astral_studies_network"
					is_active_resolution = "resolution_galacticstudies_advanced_xenostudies"
					is_active_resolution = "resolution_galacticstudies_ethical_guideline_refactoring"
					is_active_resolution = "resolution_galacticstudies_extradimensional_experimentation"
				}
			}
			physics_research = 15
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_mine_dark_matter }
			}
			sr_dark_matter = 1
		}

		upkeep = {
			energy = 2
		}
	}

	show_in_tech = "tech_sensors_3"

	ai_build_at_chokepoint = no
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 100 #use same weight here - ai weighting is done in starbase_types.txt
	}
}

curator_think_tank = {
	icon = "GFX_starbase_curator_think_tank"
	construction_days = 360

	potential = {
		exists = owner
		owner = {
			is_homicidal = no
			has_country_flag = curator_intro
		}
		is_orbital_ring = no
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_starport"
			has_starbase_size >= starbase_starport
		}
		custom_tooltip = {
			fail_text = "requires_curator"
			solar_system = {
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = {
						has_country_flag = curator_enclave_country
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_curator_agreement"
			solar_system = {
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = {
						has_country_flag = curator_enclave_country
						has_country_flag = think_tank@root.owner
					}
				}
			}
		}
	}

	resources = {
		category = starbase_buildings
		cost = {
			alloys = 100
		}

		produces = {
			physics_research = 10
			society_research = 10
			engineering_research = 10
		}

		produces = {
			trigger = {
				exists = owner
				owner = {
					is_galactic_community_member = yes
				}
				OR = {
					is_active_resolution = "resolution_galacticstudies_advanced_xenostudies"
					is_active_resolution = "resolution_galacticstudies_ethical_guideline_refactoring"
					is_active_resolution = "resolution_galacticstudies_extradimensional_experimentation"
				}
			}
			physics_research = 5
			society_research = 5
			engineering_research = 5
		}

		upkeep = {
			energy = 2
		}
	}

	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 100 #use same weight here - ai weighting is done in starbase_types.txt
	}
}

art_college = {
	icon = "GFX_starbase_artist_college"
	construction_days = 360

	potential = {
		exists = owner
		owner = {
			is_homicidal = no
			has_country_flag = enclave_artist_encountered
		}
		is_orbital_ring = no
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_starport"
			has_starbase_size >= starbase_starport
		}
		custom_tooltip = {
			fail_text = "requires_artisans"
			solar_system = {
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = {
						is_same_value = event_target:artist_enclave_country
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_artist_agreement"
			solar_system = {
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = {
						is_same_value = event_target:artist_enclave_country
						has_country_flag = art_college@root.owner
					}
				}
			}
		}
	}

	resources = {
		category = starbase_buildings
		cost = {
			alloys = 100
		}

		produces = {
			unity = 20
		}

		produces = {
			trigger = {
				exists = owner
				owner = {
					is_galactic_community_member = yes
				}
				OR = {
					is_active_resolution = "resolution_galacticstudies_advanced_xenostudies"
					is_active_resolution = "resolution_galacticstudies_ethical_guideline_refactoring"
					is_active_resolution = "resolution_galacticstudies_extradimensional_experimentation"
				}
			}
			unity = 10
		}

		upkeep = {
			energy = 2
		}
	}

	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 100 #use same weight here - ai weighting is done in starbase_types.txt
	}
}

salvager_workshop = {
	icon = "GFX_starbase_salvager_workshop"
	construction_days = 360

	potential = {
		exists = owner
		owner = {
			is_homicidal = no
			has_country_flag = salvager_enclave_diplomacy_engaged
		}
		is_orbital_ring = no
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_starport"
			has_starbase_size >= starbase_starport
		}
		custom_tooltip = {
			fail_text = "requires_salvager_enclave"
			solar_system = {
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = {
						has_country_flag = salvager_enclave_country
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_salvager_agreement"
			solar_system = {
				has_star_flag = enclave
				any_fleet_in_system = {
					exists = owner
					owner = {
						has_country_flag = salvager_enclave_country
						has_country_flag = salvage_works@root.owner
					}
				}
			}
		}
	}

	resources = {
		category = starbase_buildings
		cost = {
			alloys = 100
		}
		upkeep = {
			energy = 3
		}

		produces = {
			trigger = {
				exists = owner
				owner = {
					is_galactic_community_member = yes
				}
				OR = {
					is_active_resolution = "resolution_galacticstudies_advanced_xenostudies"
					is_active_resolution = "resolution_galacticstudies_ethical_guideline_refactoring"
					is_active_resolution = "resolution_galacticstudies_extradimensional_experimentation"
				}
			}
			alloys = 25
		}
	}

	orbit_modifier = {
		ship_orbit_upkeep_mult = -0.2
		ship_repair_hull_mult = 0.3
		ship_repair_armor_mult = 0.3
	}

	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 150
	}
}

shroud_beacon = {
	icon = "GFX_starbase_shroud_beacon"
	construction_days = 720

	potential = {
		exists = owner
		owner = {
			is_homicidal = no
			has_country_flag = shroudwalker_enclave_diplomacy_engaged
			has_country_flag = shroudwalker_enclave_bought_shroud_beacon
		}
		is_orbital_ring = no
	}

	possible = {
		custom_tooltip = {
			fail_text = "requires_starport"
			has_starbase_size >= starbase_starport
		}
		custom_tooltip = {
			fail_text = "requires_not_shroudwalker_system"
			solar_system = {
				NOR = {
					has_star_flag = shroudwalker_enclave_system
					any_fleet_in_system = {
						exists = owner
						owner = { has_country_flag = shroudwalker_enclave_country }
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_bypass"
			solar_system = {
				if = {
					limit = {
						NOT = { has_star_flag = spawned_shroud_tunnel }
					}
					has_natural_wormhole = no
				}
			}
		}
		custom_tooltip = {
			fail_text = "limit_one_shroud_tunnel"
			OR = {
				owner = {
					NOT = {
						any_system_within_border = {
							OR = {
								has_star_flag = spawned_shroud_tunnel
								starbase = { has_starbase_building = shroud_beacon }
							}
						}
					}
				}
				AND = {
					solar_system = { has_star_flag = spawned_shroud_tunnel }
					NOT = { has_starbase_building = shroud_beacon }
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_shroudwalker_agreement"
			OR = {
				AND = {
					exists = event_target:shroudwalker_enclave_country
					event_target:shroudwalker_enclave_country = {
						has_country_flag = shroud_beacon@root.owner
					}
				}
				owner = { has_country_flag = shroud_beacon }
			}
		}
	}

	resources = {
		category = starbase_buildings
		cost = {
			alloys = 500
			rare_crystals = 25
		}
		upkeep = {
			energy = 3
		}
	}

	ai_build_at_chokepoint = yes
	ai_build_outside_chokepoint = yes
	ai_weight = {
		weight = 50
		#Don't build nextdoor to the Shroudwalkers
		modifier = {
			factor = 0
			solar_system = {
				any_neighbor_system = {
					any_fleet_in_system = {
						exists = owner
						owner = { has_country_flag = shroudwalker_enclave_country }
					}
				}
			}
		}
	}

	on_finished = {
		if = {
			limit = {
				solar_system = { NOT = { has_star_flag = spawned_shroud_tunnel } }
			}
			shroudwalker_enclave_starbase_create_shroud_tunnel = yes
		}
		fleet.owner = {
			country_event = { id = enclave.4200 }
			country_event = { id = origin.5625 }
		}
	}

	on_destroyed = {
		fleet.owner = {
			country_event = { id = enclave.6015 }
		}
	}
}