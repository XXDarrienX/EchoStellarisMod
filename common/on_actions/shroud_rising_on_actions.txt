on_game_start_country = {
	events = {
		#shroud_rising_trigger.1 #player % message
	}
}

on_game_start = {
	events = {
		shroud_rising_trigger.1 #player % message
	}
}
	
# No scope, like on_game_start
on_monthly_pulse = {
	events = {
		#shroud_rising_trigger.4 #for testing only		
		#shroud_rising_eye_of_terror.202	#shroud storm for testing
		#shroud_rising_invasion.200 #incursions for testing				
		#shroud_rising_trigger.0 #player % message for saved games
		#shroud_rising_eye_of_terror.200 #shroud world testing
			
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		shroud_rising_trigger.4
		shroud_rising_trigger.5
		shroud_rising_trigger.6
		shroud_rising_trigger.7
		shroud_rising_trigger.8
		shroud_rising_eye_of_terror.200 #shroud world
			
		
		
	}
}

# No scope, like on_game_start
on_bi_yearly_pulse = {
	events = {
		shroud_rising_eye_of_terror.202	#shroud storm
		shroud_rising_invasion.200 #incursions		
	}
}

# No scope, like on_game_start
on_five_year_pulse = {
	events = {
		
	}
}

# No scope, like on_game_start
on_decade_pulse = {
	events = {
		
	}
}

# No scope, like on_game_start
on_mid_game_pulse = {
	events = {
		shroud_rising_trigger.3 #allows eye of terror to trigger now
	}
}

# No scope, like on_game_start
on_late_game_pulse = {
	events = {
	}
}

# this = country
on_monthly_pulse_country = {
	events = {
		
		shroud_rising_eye_of_terror.398 #If system is owned, alert of local nightmares
		shroud_rising_eye_of_terror.399 #Stage 2 of nightmares
		
		
	}
}

# this = country
on_yearly_pulse_country = {
	events = {
		
		
	}
}

# this = country
on_bi_yearly_pulse_country = {
	events = {
		
	}
}

# this = country
on_five_year_pulse_country = {
	events = {
		
	}
}


# this = country
on_decade_pulse_country = {
	events = {
		
	}
}

# this = country
on_mid_game_pulse_country = {
	events = {
	}
}

# this = country
on_late_game_pulse_country = {
	events = {
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		shroud_rising_invasion.104
	}
}

# Triggers when pressing begin in the intro window
# This = country to press begin
on_press_begin = {
	events = {
		
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		shroud_rising_invasion.2 #horrors turn into shroud world
		shroud_rising_invasion.20100 #cultists invade
	}
}

# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
			# shroud_rising_invasion.4
	}
}

# Triggers country_event for the attacker upon defeat
# This = country, attack leader
# From = country, planet owner
# FromFrom = planet
on_planet_attackers_lose = {
	events = {
	}
}

# Triggers country_event for the defender upon victory
# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		
	}
}

# Triggers country_event for the defender upon defeat
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_lose = {
	events = {
		
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		shroud_rising_invasion.100
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		shroud_rising_invasion.101
	}
	random_events = {
	}
}

# An army has been killed in ground combat
# This = owner
# From = army
# FromFrom = opponent
# FromFromFrom = planet
on_army_killed_in_combat = {
	events = {
		
		shroud_rising_invasion.102
		shroud_rising_invasion.103
	}
}

# An army has ceased to exist for any other reason
# This = country
# From = army
on_army_killed_no_combat = {
	events = {
		
	}
}
# Fires when you first get intel (_low and up) on a new system
# Scope = Country
# From = System
on_system_first_visited = {
	events = {
	}
}

# Triggers event when each country first sends a ship into the system (once per country)
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		
	}
	
}

# A fleet has entered a system | See also: on_fleet_auto_move_arrival
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		shroud_rising_eye_of_terror.99
		shroud_rising_eye_of_terror.100
	}
}