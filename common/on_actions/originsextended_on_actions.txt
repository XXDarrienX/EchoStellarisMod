
### ORIGINS EXTENDED ON_ACTIONS

# Triggers when the game starts
on_game_start = {
	events = {
		originsextended_game_start.2002 # Spawn special/hidden countries for origins
		#originsextended_game_start.3003 # custom blockers and tiles for nuked earth
		originsextended_game_start.4004 # final clean up
	}
}

on_game_start_country = {
	events = {
		originsextended_game_start.3003 # custom blockers and tiles for nuked earth
	}
}

on_press_begin = {
	events = {
		originsextended_gods.11
	}
}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		originsextended_host.1 # Leaders get brain slug'ed
		originsextended_gods.22 # Leaders get randomized bloodlines
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		originsextended_starborn.1
		originsextended_gaia.1001 #ToL Tree add
	}
}

on_colony_destroyed = {
	events = {
		originsextended_gaia.2002 #ToL Tree death
	}
}

# called during empire initialization when starting a new game
# scope: country
#empire_init_add_technologies = {
#	events = {
#	}
#}

# Called during empire initialization when starting a new game if has_secondary_species game rule is true. (???)
# Called before empire_init_create_capital_pops.
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists); at this point the species might have changed (because we added traits), so FROMFROM might not be the secondary species anymore
empire_init_capital_planet = {
	events = {
		# game_start.12 # vanilla starting buildings, districts & pops
		originsextended_game_start.1001 # spawns deposits for origins
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		originsextended_gaia.3003 #ToL Tree death
	}
}

on_planet_transfer = {
	events = {
		originsextended_gaia.2002 #ToL Tree death
		originsextended_gaia.4004 #ToL Tree modifier
	}
}

# THIS = System: system being occupied
# FROM = Country: Conqueror of the system
# FROMFROM = Country: Original owner of the system
on_system_occupied = {
	events = {
		#originsextended_red.201 # iss2 ded
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		originsextended_red.201 # iss2 ded
		originsextended_terminal.301 # titan destroyed
	}
}

# Planet has been terraformed
# This = Planet
# From = Terraforming country
on_terraforming_complete = {
	events = {
		originsextended_edge.301 # off the edge
	}
}

#From = Country scope
#This = Planet scope
on_planet_ownerless = {
	events = {
		originsextended_edge.302 # edge abbandoned
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		originsextended_edge.303 # edge new world
		originsextended_three.103 # three new world
	}
}

# Fires for each planet every 5 years (counting up from colonisation date, includes home planet)
on_colony_5_year_pulse = {
	events = {
		originsextended_three.888 # roll for class change
	}
}

# A fleet has entered a system | See also: on_fleet_auto_move_arrival
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		originsextended_three.102 # found the planet
	}
}

# Called upon entering FTL (on-action name scripted on the Bypass type)
# THIS = Fleet
# FROM = System jumping to
# FROMFROM = System jumped from
on_entering_gateway = {
	events = {
		originsextended_gate.00 # roll for instability
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		originsextended_gate.88 # nuke old gateway
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		originsextended_gate.88 # nuke old gateway
	}
}

# this = country
on_five_year_pulse_country = {
	events = {
		originsextended_gods.33
	}
}