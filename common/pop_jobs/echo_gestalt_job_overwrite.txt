###################
# Gestalt Jobs
###################
spawning_drone = {
	category = complex_drone

	swappable_data = {
		default = {
			condition_string = DRONE_JOB_TRIGGER
			building_icon = building_spawning_pool
		}
		# Permutation Attendance Drone
		swap_type = {
			trigger = {
				spawning_drone_is_bath_attendant_hive_trigger = yes
			}
			name = bath_attendant_hive
			desc = bath_attendant_hive
			icon = bath_attendant_hive
			building_icon = building_toxic_bath_hive
			condition_string = DRONE_JOB_TRIGGER
			weight = 5
		}
		# Offspring Drone
		swap_type = {
			trigger = {
				spawning_drone_is_offspring_drone_trigger = yes
			}
			name = offspring_drone
			desc = offspring_drone
			building_icon = building_offspring_nest
			condition_string = DRONE_JOB_TRIGGER
			weight = 10
		}
		# Genomic Drones
		swap_type = {
			trigger = {
				healthcare_is_genomic_researcher_trigger = yes
			}
			name = genomic_drone
			desc = genomic_drone
			icon = genomic_drone
			building_icon = building_genomic_facility
			condition_string = DRONE_JOB_TRIGGER
			weight = 15
		}
		# Broodsymbiont
		swap_type = {
			trigger = {
				exists = owner
				owner = {
					is_wilderness_empire = yes
				}
			}
			name = broodsymbiont
			desc = broodsymbiont
			building_icon = seed_cradle_2
			condition_string = DRONE_JOB_TRIGGER
			weight = 100
		}
	}

	tags = { pop_assembly }

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = {
		can_think = yes
	}

	resources = {
		category = planet_pop_assemblers
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			food = 5
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = 5
		}
		# Job Swap - Genomic Drone
		produces = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
			}
			society_research = 6
		}
		produces = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
				exists = owner
				owner = {
					has_completed_genetic_situation = yes
				}
			}
			society_research = 3
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			food = 5
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					healthcare_is_genomic_researcher_trigger = yes
				}
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = 5
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					spawning_drone_is_bath_attendant_hive_trigger = yes
				}
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			food = 5
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					spawning_drone_is_bath_attendant_hive_trigger = yes
				}
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = 5
		}
	}

	triggered_planet_pop_group_modifier_for_species = {
		potential = {
			is_hive_species = yes
		}
		bonus_pop_growth = 2
	}

	triggered_planet_modifier = {
		fake_pop_growth_mod = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_origin = origin_necrophage }
			exists = planet.growing_species
			planet.growing_species = {
				NOT = { has_trait = trait_hive_mind }
			}
		}
		modifier = {
			logistic_growth_mult = 0.1
		}
	}

	#Offpring Drones
	triggered_planet_modifier = {
		potential = {
			spawning_drone_is_offspring_drone_trigger = yes
		}
		modifier = {
			planet_jobs_simple_drone_produces_mult = 0.1
		}
	}

	triggered_planet_modifier = {
		potential = {
			spawning_drone_is_bath_attendant_hive_trigger = yes
		}
		bonus_pop_growth_mult = 0.02
		pop_environment_tolerance = -0.0075
		mult = planet.value:toxic_attendant_growth
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 500
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	## Mutagensis
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_plentiful_mutagenesis_1
			}
		}
		modifier = {
			bonus_pop_growth_mult = 0.02
		}
	}

	inline_script = "output/genomic_triggered_modifiers"

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = complex_drone
				AMOUNT = local_pop_amount
			}
		}
	}
}