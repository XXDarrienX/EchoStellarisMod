# this = ship
# root = country that kills ship
##Overwrite to stop normal FEs to drop Debris
can_spawn_debris = {	
	root = { is_country_type = default }
	exists = owner
	owner = { 
		NOR = { 
			has_ascension_perk = ap_enigmatic_engineering 
            is_country_type = fallen_empire
            has_civic = civic_hive_strong_connection
		} 
	}
}

# Check if full sensor range in entire galaxy
# root: country
has_full_sensor_range = {
	always = no
}

# This = planet
# Root = country
can_build_branch_office_on_planet = {
	custom_tooltip = {
		fail_text = requires_recipient_not_fanatic_purifiers
		exists = owner
		owner = {
			OR = {
				is_same_species = root
				NOT = { has_civic = civic_fanatic_purifiers }
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NO_OBSERVATION_OUTPOST
		if = {
			limit = {
				root = { is_criminal_syndicate = yes }
				owner = { is_primitive = yes }
			}
			has_observation_outpost = yes
			observation_outpost_owner = {
				is_same_value = root
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_COMMERCIAL_PACT
		exists = owner
		OR = {
			root = { is_criminal_syndicate = yes }
			owner = { has_commercial_pact = root }
			owner = { is_in_federation_with = root }
			AND = {
				has_observation_outpost = yes
				observation_outpost = {
					has_modifier = preftl_action_trade_pact
				}
			}

			# allow branch offices in subsidiaries and vice versa (and fellow subjects)
			root = {
				is_subject = yes
				OR = {
					is_megacorp = yes
					has_civic = civic_galactic_sovereign_megacorp
				}
				overlord = {
					OR = {
						is_same_value = prevprev.owner
						is_same_value = prevprev.owner.overlord
					}
				}
			}
			owner = {
				is_subject = yes
				overlord = {
					OR = {
						is_same_value = root
						is_same_value = root.overlord
					}
					OR = {
						is_megacorp = yes
						has_civic = civic_galactic_sovereign_megacorp
					}
				}
			}
			AND = {
				root = { has_civic = civic_galactic_sovereign_megacorp }
				owner = { is_galactic_community_member = yes }
			}
			AND = {
				root = { has_modifier = imperial_charter }
				owner = { is_galactic_community_member = yes }
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_MEGACORP_OVERLORD
		exists = owner
		# failure message for having a corporate overlord

		if = {
			limit = {
				OR = {
					# Not valid if you aren't a subject.
					root = {
						is_subject = no
					}
					# Or if your overlord isn't a megacorp.
					root = {
						is_subject = yes
						overlord = {
							NOR = {
								is_megacorp = yes
								has_civic = civic_galactic_sovereign_megacorp
							}
						}
					}
				}
			}
			always = yes
		}
		else = {
			AND = {
				root = {
					is_subject = yes
					overlord = {
						OR = {
							is_megacorp = yes
							has_civic = civic_galactic_sovereign_megacorp
						}
					}
				}
				owner = {
					OR = {
						is_subject = no
						AND = {
							is_subject = yes
							overlord = { NOT = { is_same_value = root.overlord } }
						}
					}
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_HERITAGE_HAS_TRUCE
		exists = owner
		OR = {
			root = { is_criminal_syndicate = no }
			owner = {
				NOR = {
					has_truce = root
					is_at_war_with = root
				}
			}
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_CRIMINAL_COOLDOWN
		exists = owner
		OR = {
			root = { is_criminal_syndicate = no }
			AND = {
				root = { is_criminal_syndicate = yes }
				NOT = { has_planet_flag = criminal_branch_closed_cooldown_planet@root }
			}
		}
	}
	custom_tooltip = {
		fail_text = NO_BRANCH_OFFICE_ON_AI_WORLD
		NOT = { is_planet_class = pc_ai }
	}
	custom_tooltip = {
		fail_text = NO_BRANCH_OFFICE_ON_NANITE_WORLD
		NOT = { is_planet_class = pc_gray_goo }
	}
	custom_tooltip = {
		fail_text = NO_BRANCH_OFFICE_ON_SELF
		owner = {
			NOT = { is_same_value = root }
		}
	}
}

species_can_live_on_planet = {
	hidden_trigger = {
	exists = root #somehow this appeared in the error log. No idea how!
	NAND = {
		root = { is_planet_class = pc_machine }
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			AND = {
				has_trait = trait_cybernetic
				exists = root.owner
				root.owner = {
					is_machine_empire = yes
					OR = {
						has_civic = civic_machine_assimilator # Assimilator empire
						has_ascension_perk = ap_mechromancy
					}
				}
			}
		}
	}
	if = {
		limit = {
			root = { is_planet_class = pc_hive }
		}
		OR = {
			has_trait = trait_hive_mind
			AND = { #Necrophage Hive Mind can have Necrophytes
				exists = root.owner
				root.owner = {
					is_hive_empire = yes
					has_origin = origin_necrophage
					prev = { species_can_be_necrophaged = yes }
				}
			}
			AND = { #Parasitic Embryos Necrophage Pops
				exists = root.owner
				root.owner = {
					is_hive_empire = yes
					has_valid_civic = civic_hive_parasitic
					prev = { has_job_category = purge_parasitic }
				}
			}
		}
	}
	NAND = {
		root = { is_planet_class = pc_shrouded_paradise }
		NOR = {
			has_trait = trait_psionic
			has_trait = trait_holy_machines
			has_trait = trait_pc_shrouded_paradise_preference
			}
		}
    }
	NAND = {
		root = { NOT = { is_planet_class = pc_matryoshka } }
		has_trait = trait_machine_digital
	}	
	if = {
		limit = {
			exists = root.owner
			
			root.owner = {
				has_origin = origin_clone_army
			}
			OR = {
				has_trait = trait_clone_soldier_infertile
				has_trait = trait_clone_soldier_infertile_full_potential
			}
		}
		custom_tooltip = {
			fail_text = CLONE_ARMY_FORCE_DECLINE
			root = {
				check_variable = { which = clone_pops_missing value >= 0 }
			}
		}
	custom_tooltip = {
		fail_text = WILDERNESS_NATURAL_WORLDS_DECLINE
		if = {
			limit = {
				has_trait = trait_wilderness
			}
			root = { is_habitable_for_wilderness = yes }
		}
	}

	custom_tooltip = {
		fail_text = WILDERNESS_DEAD_WORLD
		if = {
			limit = {
				has_trait = trait_wilderness
				exists = root.owner
			}
			root.owner = { is_wilderness_empire = yes }
		}
	}
	}
}

# THIS = Fleet
fleet_uses_templates = {
	is_ship_class = shipclass_military
	#is_designable = yes
	is_alliance_fleet = yes
}

# Root = country attempting to target system for movement
# This = system being targeted
can_enter_system_by_jump = {
	custom_tooltip = {
		fail_text = cannot_jump_to_system

		# Sealed system
		OR = {
			NOT = { has_star_flag = sealed_system }
			NOT = { starbase = { has_starbase_building = echo_cyno_jammer } }
			AND = {
				root = { has_country_flag = entered_sealed_system }
				has_star_flag = sealed_system
			}
		}

		# L-Cluster
		NOT = { has_star_flag = lcluster }

		# Formless system
		NOT = { has_star_flag = formless_system }	
	}
	#NOT = { root = { has_policy_flag = jump_drive_disabled  } }
}

# This = planet
can_crossbreed_species_on_planet = {
	OR = {
		AND = {
			exists = owner
			owner = {
				has_ascension_perk = ap_xeno_compatibility
			}
		}
		this = {
			has_building = building_brothel_house
			has_holding = {
				owner = planet_owner
				holding = building_brothel_house_branch_office
			}
		}
	}
	count_species = {
		limit = {
			is_crossbreeding_possible = yes
		}
		count >= 2
	}
}

# This = Planet
can_resettle_planet = {
	is_controlled_by = owner
	has_ground_combat = no
	has_orbital_bombardment = no
	custom_tooltip = {
		text = "RESETTLE_PLANET_UNDER_COLONIZATION"
		exists = this
		is_under_colonization = no
	}
}

# This = pop_group
can_resettle_pop_group = {
	NOT = { has_trait = trait_machine_digital }
	# Self-modified Pops won't leave
	custom_tooltip = {
		fail_text = "self_modified_refuse"
		NOT = { has_trait = trait_self_modified }
	}
	# Pathogenic Pops Can't Resettle
	custom_tooltip = {
		fail_text = "pathogenic_genes_warning"
		NOT = { has_trait = trait_pathogenic_genes }
	}
	custom_tooltip = {
		fail_text = "origin_egalitarian_refuse"
		NAND = {
			has_ethic = ethic_egalitarian
			is_enslaved = no
			planet = { has_modifier = paragon_origin_reformists }
		}
	}
	custom_tooltip = {
		fail_text = "no_resettling_apps"
		if = {
			limit = {
				has_virtual_species_trait = yes
			}
			exists = owner
			owner = {
				is_fallen_empire = no
				NOT = {
					has_active_tradition = tr_virtuality_adopt
				}

			}
		}
	}
	if = { #Done as an IF/ELSE so the tooltip isn't hideous and unreadable
		limit = { is_shackled_robot = yes }
		always = yes
	}
	else_if = {
		limit = {
			planet = {
				is_doomsday_planet = yes
			}
		}
		always = yes
	}
	else_if = {
		limit = {
			planet = {
				has_modifier = planet_culture_shock
			}
		}
		OR = {
			is_same_species = planet.owner
			planet = {
				NOT = { has_modifier = planet_culture_shock }
			}
		}
	}
	else_if = {
		limit = {
			planet = {
				is_capital = yes
				pop_amount < 200
			}
			NOT = {
				owner = {
					any_owned_planet = {
						is_capital = no
						NOT = {
							is_planet_class = pc_cosmogenesis_world
						}
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "no_abandon_capital_for_unviable_planet"
			always = no
		}
	}
	else_if = {
		limit = {
			planet = {
				is_planet_class = pc_cosmogenesis_world
				owner = {
					has_ascension_perk = ap_cosmogenesis
				}
				pop_amount < 200
			}
		}
		custom_tooltip = {
			fail_text = "no_unfueled_lathe"
			always = no
		}
	}
	else_if = {
		limit = {
			planet = {
				has_deposit = d_genesis_preserve
				sapient_pop_amount < 200
			}
			owner = {
				is_guided_sapience_empire = yes
			}
		}
		custom_tooltip = {
			fail_text = "no_abandon_genesis_preserve"
			always = no
		}
	}
	else_if = {
		limit = {
			owner = {
				has_ascension_perk = ap_cosmogenesis
			}
		}
		always = yes
	}
	else_if = {
		limit = {
			owner = {
				is_gestalt = yes
			}
		}
		always = yes
	}
	else = {
		custom_tooltip = {
			fail_text = RESETTLEMENT_POLICY_FAIL
			owner = {
				has_policy_flag = resettlement_allowed
			}
		}
	}
}

# ROOT = country
# THIS = pop
can_be_sold_on_slave_market = {
	exists = owner
	NOR = {
		has_trait = trait_holy_machines
		has_trait = trait_vb_psi_soul_eater
	}
	OR = {
		is_enslaved = yes
		is_non_sapient_robot = yes
		is_shackled_robot = yes
	}
	OR ={
		ROOT = { is_ai = no }
		has_citizenship_rights = no
		is_on_slave_market = yes	# pops that were already on the market should stay there
		AND = {
			is_unemployed = yes
			planet = {
				num_unemployed > 300
			}
		}
	}
	if = {
		limit = {
			has_global_flag = organic_slave_trade_banned_flag
		}
		is_organic_species = no
	}
	if = {
		limit = {
			has_global_flag = sentient_slave_trade_banned_flag
		}
		is_sapient = no
	}
	NOR = {
		# Since they can't reproduce, they die out too fast for anyone to want to buy them.
		has_trait = trait_clone_soldier_infertile
		has_trait = trait_clone_soldier_infertile_full_potential
		has_virtual_species_trait = yes
	}
}

# THIS = Fleet
can_jump_drive = {
	#always = yes	# Moved cooldown to code
	this = {
		NOT = {
			has_fleet_flag = echo_jump_cooldown
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_ruler_job
can_fill_ruler_job = {
	if = {
		limit = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
			}
		}
		custom_tooltip = {
			text = RULER_JOB_NECROPHAGE_TRIGGER
			has_trait = trait_necrophage
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
		}
	}
	else = {
		custom_tooltip = RULER_JOB_TRIGGER
		hidden_trigger = {
			NOT = { has_ethic = ethic_gestalt_consciousness }
			exists = owner
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			can_think = yes
			# Rule out Disconnected Drones
			has_disconnected_drone_citizenship_type = no
			# Rule out Traits for servitude & lack of free will
			NOT = { has_trait = trait_pearl_born_drone }
			# Rule out Machine Pops, unless they're rendered sapient
			OR = {
				NOT = { has_trait = trait_mechanical }
				AND = {
					owner = { has_technology = tech_synthetic_workers }
					owner = { has_policy_flag = ai_full_rights }
			}
			# EMEX Start
			AND = {
				owner = { has_policy_flag = artificial_aristocracy }
				owner = { has_technology = tech_droid_workers }
			}
			# EMEX End
			}
			# Rule out Organic Trophies
			NOT = {
				has_citizenship_type = {
					type = citizenship_organic_trophy
					country = owner
				}
			}
			# Rule out violations of the 'Right to Work' Resolution (prioritises organic workers)
			if = {
				limit = {
					divinity_right_to_work_job_check_trigger_exempt = no
				}
				divinity_right_to_work_job_check_trigger_ruler = yes
			}
		}
	}
}

#this/root = pop
#checked if job's possible_precalc = can_fill_worker_job
can_fill_worker_job = {
	custom_tooltip = WORKER_JOB_TRIGGER
	hidden_trigger = {
		if = {
			limit = {
				planet = {
					is_planet_class = pc_cosmogenesis_world #Everyone can become a chip slave
				}
			}
			always = yes
		}
		else = {
		NOT = { has_ethic = ethic_gestalt_consciousness }
		exists = owner
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		NAND = {
			has_citizenship_type = { type = citizenship_slavery }
			OR = {
				has_slavery_type = { type = slavery_livestock }
				has_slavery_type = { type = slavery_matrix }
			}
		}
		if = {
				limit = {
					has_disconnected_drone_citizenship_type = yes
				}
				disconnected_drone_can_be_worker = yes
			}
		OR = { 
			AND = { 
				has_trait = trait_mechanical
				NOT = { owner = { has_origin = origin_religious_constructs } }
			}
				
			NOT = { has_trait = trait_mechanical }
			AND = { 
				has_trait = trait_mechanical
				owner = { has_origin = origin_religious_constructs }
				owner = { has_technology = tech_synthetic_workers }
			}
		}
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_worker = yes
			}
		}
	}
}

## If this returns true, the species will be set to decline even if it is not being purged
# This = species
# From = planet
## Note: success text tooltips are shown in alert_pops_declining alert.
should_force_decline_species = {
	OR = {
		# Infertile Clone Army pops should decline if in Country that can't have Vats, or there is a Vat shortage.
		custom_tooltip = {
			success_text = CLONE_ARMY_FORCE_DECLINE
			exists = this
			OR = {
				has_trait = trait_clone_soldier_infertile
				has_trait = trait_clone_soldier_infertile_full_potential
			}
			from = {
				OR = {
					# Check if country is unable to build Vats for this species.
					AND = {
						exists = owner
						owner = {
							OR = {
								NOT = { has_origin = origin_clone_army }					# Can't have Vats.
								has_country_flag = clone_army_fertility_unlocked			# Can't have Vats anymore.
								NOT = { owner_main_species = { is_same_species = root } }	# Our Vats can't build this species.
							}
						}
					}
					# Vats check out, but are there more pops than Vats support?
					check_variable = { which = clone_pops_missing value < 0 }
				}
			}
		}
		from = {
			custom_tooltip = {
				success_text = VOIDSPAWN_FORCE_DECLINE
				exists = this
				has_modifier = voidspawn_colony_mod
			}
		}
		custom_tooltip = {
			success_text = SOUL_CRYSTAL_SHORTAGE
			has_trait = trait_vb_psi_soul_eater
			from = {
				exists = owner
				owner = { has_actual_deficit = { RESOURCE = soul_crystals } }
			}
		}
	}
}

can_build_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_MEGACORP
		OR = {
			is_megacorp = yes
			has_civic = civic_galactic_sovereign_megacorp
			has_valid_civic = civic_mutualistic_behavior
		}
	}
}
should_count_towards_leader_cap = {
	NOR = {
		leader_class = envoy
		is_hidden = yes
		has_leader_flag = hired_admiral_merc_leader
		has_leader_flag = legendary_leader
		has_trait = nsc_freebooter_leader_trait_ruler_great_khan
		has_trait = leader_trait_rift_warped
		AND = {
			has_trait = leader_trait_eager
			has_base_skill < 4
		}
		AND = {
			is_ruler = yes
			OR = {
				has_trait = leader_trait_ruler_machine_intelligence
				has_trait = leader_trait_ruler_hive_mind
			}
		}
	}
}

# Root = current planet
# This = pop
# Purge, Sapience, Migration Controls policy (ignored by Gestalts and Synths), and target habitability are checked in code.
can_pop_group_auto_migrate = {
		hidden_trigger = { # This is always true where this tooltip is called
		OR = {
			is_unemployed = yes
			is_pop_category = civilian
			is_pop_category = maintenance_drone
		}
	}
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_ASSIMILATED
		is_being_assimilated = no
	}
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_ROOTED
		NOT = { has_trait = trait_rooted }
	}
	custom_tooltip = {
		fail_text = AUTO_MIGRATE_VIRTUALITY
		OR = {
			has_virtual_species_trait = no
			AND = {
				has_virtual_species_trait = yes
				exists = owner
				owner = {
					OR = {
						is_individual_machine = no
						is_machine_empire = no
					}
				}
			}
		}
	}
	if = {
		limit = {
			OR = {
				is_shackled_robot = yes
				AND = {
					is_enslaved = yes
					is_holofrixit = no
				}
			}
		}
		custom_tooltip = {
			fail_text = AUTO_MIGRATE_SLAVE_PROCESSING
			OR = {
				planet = {
					OR = {
						has_building = building_slave_processing
						AND = {
							exists = orbital_defence
							orbital_defence = {
								exists = starbase
								starbase = {
									has_starbase_building = ring_slave_processing_facility
								}
							}
						}
					}
				}
				solar_system = {
					count_starbase_buildings = {
						type = transit_hub
						count >= 1
						include_being_constructed = no
					}
				}
			}
		}
	}
}

can_trade_fleet = {
	AND = {
		ROOT = {
			NAND = {
				is_overlord = yes
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
		}
		NOT = { has_fleet_flag = dimensional_fleet }
	}
	has_origin = origin_nsc_freebooter
}

ai_should_restrict_system = {
	OR = {
		AND = {
			root = {
				is_country_type = fallen_empire
			}
			exists = owner
			owner = { is_country_type = awakened_marauders }
		}
		AND = {
			root = { is_country_type = awakened_marauders }
			exists = owner
			owner = { is_country_type = fallen_empire }
		}
		AND = {
			root = { is_country_type = voidworms }
			exists = owner
			owner = {
				OR = {
					is_country_type = dormant_marauders
					is_country_type = awakened_marauders
				}
			}
		}
		AND = {
			root = {
				OR = {
					is_country_type = fallen_empire
					is_country_type = awakened_marauders
					is_country_type = voidworms
				}
			}
			has_star_flag = guardian
			any_fleet_in_system = {
				exists = owner
				owner = {
					is_guardian_country = yes
				}
			}
		}
		AND = {
			root = {
				OR = {
					is_crisis_faction = yes
					is_country_type = awakened_fallen_empire
				}
			}
			has_star_flag = guardian
			any_fleet_in_system = {
				exists = owner
				owner = {
					is_country_type = guardian_fortress
				}
			}
		}
		AND = {
			root = {
				is_country_type = default
			}
			years_passed <= 115
			exists = owner
			owner = {
				OR = {
					is_country_type = dormant_marauders
					is_country_type = awakened_marauders
				}
			}

		}
	}
}