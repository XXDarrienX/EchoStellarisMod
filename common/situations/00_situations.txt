
#All scopes are this/root = situation. You can scope to owner for the country or target for the target.

# test_situation = {
# 	#Note on locs: it expects "test_situation", "test_situation_type", and "test_situation_desc"
# 		#The difference between the first and second keys is that the first is the name while the Situation exists
# 		#It can use [Target.GetName] and so on.
# 		#The _type key is used in cases where the Situation does not exist yet, specifically the start_situation effect's tooltip
# 		#Consequently, stuff like [Target.GetName] will not work there.

#	picture = GFX_evt_alien_nature

# 	category = positive #positive/negative/neutral - this affects the tone of various UI elements

# 	on_start = { log = "Started [From.GetName]" }
# 	on_progress_complete = {	#Situation's progress has reached completion value
# 		#You should always call destroy_situation = this from here or from an event fired by here
# 	}
# 	on_fail = { log = "Failed" }	#Situation's total progress is below 0
# 	on_abort = { log = "Aborted" }	#Situation is cancelled via abort_trigger trigger
# 	abort_trigger = { has_situation_flag = abort_test } 	#Trigger for when a Situation should abort, firing on_abort

#	 start_value = 20 #situation will start at this number. Default is 0
#	 completion_value = 200 #situation will complete at this number. Default is 100

#	These two modifiers apply to the country experiencing the situation
# 	modifier = {
#	 	pop_citizen_happiness = -0.1
#	 }
#	 triggered_modifier = {
#	 	potential = { always = yes }
#	 	modifier = {
#	 		pop_citizen_happiness = -0.1
#	 	}
#	 }

# 	#Target Modifiers apply to the planet that the Situation has as a target.
# 	#They do not currently work on other types of targets!
# 	target_modifier = {
# 		trade_value_add = 2
# 	}
# 	triggered_target_modifier = {
# 		potential = { always = yes }
# 		modifier = {
# 			trade_value_add = 2
# 		}
#	    }

# 	#Note: technically, this is an on_action called test_situation. So don't call your situation "on_monthly_pulse"!
# 	on_monthly = {
# 		events = {
#	    }
# 		random_events = {
# 			100 = 0
#	    }
#	 }

#	severity_levels = {
#	 	low_level = {
#	 		end = 20
#	    }

#	    medium_level = {
#	 	   end = 40
#	    }

#	    high_level = {
#	 	   end = 100
#	    }
#	}

# 	approach = {
# 		name = approach_a
# 		icon = {
# 			icon = GFX_espionage_asset_icon
# 			text = my_key
# 		}
# 		allow = {
# 			owner = { has_country_flag = situations_test_1 }
# 		}
# 		potential = {
# 			owner = { has_country_flag = situations_test_2 }
# 		}
# 		modifier = {
# 			country_base_minerals_produces_add = 20
# 		}
#		on_select = {}
# 		triggered_modifier = {
# 			potential = {
# 				target = { has_planet_flag = situations_test_3 }
# 			}
# 			modifier = { country_base_influence_produces_add = 1 }
# 		}
# 		target_modifier = {
# 			job_dimensional_portal_researcher_add = 1
# 		}
# 		triggered_target_modifier = {
# 			potential = {
# 				target = { has_planet_flag = situations_test_1 }
# 			}
# 			modifier = { planet_crime_add = 50 }
# 		}
# 		resources = {
# 			category = situations
# 			cost = { influence = 25 }
# 			upkeep = {
# 				trigger = {
# 					owner = { has_country_flag = situations_test_4 }
# 				}
# 				influence = 1
# 			}
# 		}
# 		ai_weight = {
# 			base = 5
# 			modifier = {
# 				factor = 2
# 				always = yes
# 			}
# 		}
# 	}

# 	approach = {
# 		name = approach_b #all approaches must have at least a name
# 	}

# 	monthly_progress = {
# 		base = 50
# 		modifier = {
# 			add = 2
# 			desc = federation_acceptance_reduce_fleet
# 			always = yes
# 		}
# 	}
# }
