ship_components = {
	parent = ships
	
	generate_mult_modifiers = {
		cost
        produces
        upkeep
	}
	
	generate_add_modifiers = {
		cost
        produces
        upkeep
	}
}

stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}

	parent = country
}

planet_structures = {
	parent = planets
	hidden = yes
	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
	modifier_category = planet
}

colonies = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	modifier_category = ship

	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}
	
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}

	parent = ships
}

station_gatherers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_researchers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_observers = {
	parent = stations
	
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_observer_missions = {
	parent = station_observers
	
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

starbases = {
	parent = country
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		upkeep
		cost
	}
	generate_add_modifiers = {
		upkeep
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}

		triggered_cost_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = starbase_outpost
				is_ship_size = orbital_ring_tier_1 #TODOJM: Remove?
			}
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_starport
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starport
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starport
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starport
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_starhold
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starhold
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starhold
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starhold
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_starfortress
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starfortress
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_starfortress
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_starfortress
		}
	}
	
	triggered_cost_modifier = {
		key = starbase_citadel
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_citadel
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_citadel
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = starbase_citadel
		}
	}
}

starbase_buildings = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = starbase
}

starbase_modules = {
	parent = starbase_constructions
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = starbase
}

planet_executives = {
	parent = planet_politicians
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_managers = {
	parent = planet_bureaucrats
	modifier_category = pop_job
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	# Inherited Modifiers
	triggered_produces_modifier = {
		key = planet_bureaucrats
		modifier_types = {
			add
		}
		trigger = {
			always = yes
		}
		use_parent_icon = yes
	}
}

planet_culture_workers = {
	parent = planet_bureaucrats
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_evaluators = {
	parent = planet_bureaucrats
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_synapse_drones = {
	parent = planet_bureaucrats
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_nobles = {
	parent = planet_politicians
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_necro_apprentices = {
	parent = planet_pop_assemblers
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_merchants = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_soldiers = {
	parent = planet_jobs_worker
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_necromancers = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_bureaucrats = {
	icon = "job_bureaucrat"
	parent = planet_jobs_specialist
	modifier_category = pop_job
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_enforcers = {
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_telepaths = {
	parent = planet_enforcers
	modifier_category = pop_job
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	# Inherited Modifiers
	triggered_produces_modifier = {
		key = planet_enforcers
		modifier_types = {
			add
			mult
		}
		trigger = {
			always = yes
		}
		use_parent_icon = yes
	}
}

planet_doctors = {
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_refiners = {
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_translucers = {
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_chemists = {
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}

planet_artisans = {
	icon = "job_artisan"
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_job
}