# this = planet
ail_add_planet_appropriate_mining_district = {
	optimize_memory
	if = {
		limit = { ail_planet_uses_district_mining_uncapped = yes }
		add_district = district_mining_uncapped
	}
	else = {
		add_district = district_mining
	}
}

# this = planet
ail_add_planet_appropriate_farming_district = {
	optimize_memory
	if = {
		limit = { ail_planet_uses_district_farming_uncapped = yes }
		add_district = district_farming_uncapped
	}
	else = {
		add_district = district_farming
	}
}

# this = planet
ail_remove_planet_appropriate_farming_district = {
	optimize_memory
	if = {
		limit = { ail_planet_uses_district_farming_uncapped = yes }
		remove_district = district_farming_uncapped
	}
	else = {
		remove_district = district_farming
	}
}

# this = planet
# NUM_RETAIN = the maximum amount of farming districts to retain (should be >= 0)
ail_swap_farming_to_mining_districts = {
	optimize_memory
	if = {
		limit = { ail_planet_uses_district_farming_uncapped = no }
		export_trigger_value_to_variable = {
			trigger = num_districts
			parameters = {
				type = district_farming
			}
			variable = num_district_farming
		}
	}
	else = {
		export_trigger_value_to_variable = {
			trigger = num_districts
			parameters = {
				type = district_farming_uncapped
			}
			variable = num_district_farming
		}
	}
	while = {
		limit = {
			check_variable = {
				which = num_district_farming
				value > $NUM_RETAIN$
			}
		}
		ail_remove_planet_appropriate_farming_district = yes
		ail_add_planet_appropriate_mining_district = yes
		subtract_variable = {
			which = num_district_farming
			value = 1
		}
	}
	clear_variable = num_district_farming
}