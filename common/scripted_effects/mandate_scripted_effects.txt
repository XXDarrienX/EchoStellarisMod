# base scope is country
# must define old_faction_leader before using this effect
assign_new_faction_leader = {
	event_target:old_faction_leader = { set_leader_flag = previous_faction_leader }
	if = {
		limit = {
			has_civic = civic_technocracy
			any_owned_leader = {
				leader_class = scientist 
				NOT = { leader_class = ruler }
				leader_of_faction = no
				is_event_leader = no # no swarm queens leading factions, as funny as that would be
				NOT = { has_leader_flag = previous_faction_leader }
			}
		}
		random_owned_leader = {
			limit = {
				leader_class = scientist 
				NOT = { leader_class = ruler }
				leader_of_faction = no
				is_event_leader = no
				NOT = { has_leader_flag = previous_faction_leader }
			}
			assign_this_leader = yes
		}
	}
	else_if = {
		limit = {
			NOT = { has_civic = civic_technocracy }
			any_owned_leader = {
				leader_of_faction = no
				NOT = { leader_class = ruler }
				is_event_leader = no 
				NOT = { has_leader_flag = previous_faction_leader }
			}
		}
		random_owned_leader = {
			limit = {
				leader_of_faction = no
				NOT = { leader_class = ruler }
				is_event_leader = no
				NOT = { has_leader_flag = previous_faction_leader }
			}
			assign_this_leader = yes
		}
	}
	else_if = {
		limit = { has_civic = civic_technocracy }
		create_leader = {
			class = scientist
			species = owner_main_species
			skill = 2
		}
		last_created_leader = {
			add_trait = leader_trait_eager
			assign_this_leader = yes
		}
	}
	else = {
		create_leader = {
			class = governor
			species = owner_main_species
			skill = 2
		}
		last_created_leader = {
			add_trait = leader_trait_eager
			assign_this_leader = yes
		}
	}
}

# base scope is leader being assigned. Used in assign_new_faction_leader, above
assign_this_leader = {
	save_event_target_as = new_faction_leader
	event_target:old_faction_leader = { get_leader_pop_faction = yes }
	event_target:leader_pop_faction = { assign_leader = event_target:new_faction_leader }
}

# base scope is leader whose faction is being checked
get_leader_pop_faction = {
	if = {
		limit = {
			leader_of_faction = totalitarian
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = totalitarian }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = progressive
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = progressive }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = supremacist
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = supremacist }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = isolationist
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = isolationist }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = xenoist
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = xenoist }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = imperialist
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = imperialist }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = prosperity
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = prosperity }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = traditionalist
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = traditionalist }
				save_event_target_as = leader_pop_faction
			}
		}
	}
	else_if = {
		limit = {
			leader_of_faction = technologist
		}
		owner = {
			random_pop_faction = {
				limit = { is_pop_faction_type = technologist }
				save_event_target_as = leader_pop_faction
			}
		}
	}
}

# on country scope
failed_mandate_effect = {
	hidden_effect = {
		failed_mandate_pop_shift_effect = yes
		if = {
			limit = { num_pops >= 100 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 200 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 300 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 400 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 500 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 700 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 800 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 900 }
			failed_mandate_pop_shift_effect = yes
		}
		if = {
			limit = { num_pops >= 1000 }
			failed_mandate_pop_shift_effect = yes
		}
	}
}
failed_mandate_pop_shift_effect = {
	random_owned_pop = {
		random_list = {
			1 = { pop_change_ethic = ethic_egalitarian }
			1 = { pop_change_ethic = ethic_authoritarian }
			1 = { pop_change_ethic = ethic_pacifist }
			1 = { pop_change_ethic = ethic_militarist }
			1 = { pop_change_ethic = ethic_materialist }
			1 = { pop_change_ethic = ethic_spiritualist }
			1 = { pop_change_ethic = ethic_xenophile }
			1 = { pop_change_ethic = ethic_xenophobe }
		}
	}
}