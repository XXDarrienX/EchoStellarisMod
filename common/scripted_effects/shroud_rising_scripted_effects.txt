spawn_monolith_anomaly_1 = {
	random_system_within_border = {		
		limit = {
			NOR = { 
				has_star_flag = precursor_world 
				has_star_flag = shroud_invasion_target_1	
				has_star_flag = monolith_system
				is_same_value = root.owner.capital_scope.solar_system
			}
			
			any_system_planet = {				
				AND = { 	
						#is_colony = yes
						is_capital = no
						is_artificial = no
						NOT = { is_planet_class = pc_city }
				}
				OR = {
					habitable_planet = yes
					uninhabitable_regular_planet = yes	
				}
			}
		}
		set_star_flag = monolith_system
		random_system_planet = {
			limit = {				
				AND = { 	
						#is_colony = yes
						is_capital = no
						is_artificial = no
						NOT = { is_planet_class = pc_city }
				}
				OR = {
					habitable_planet = yes
					uninhabitable_regular_planet = yes	
				}				
			}
			set_planet_flag = has_shroud_obelisk
			save_event_target_as = monolith_planet_1
			set_planet_flag = monolith_world_1
			enable_special_project = {
				name = "monolith_ARCHEOLOGY_1"				
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_monolith_search
}

spawn_monolith_anomaly_2 = {
	random_system_within_border = {
		
		limit = {
			NOR = { 
				has_star_flag = precursor_world 
				has_star_flag = shroud_invasion_target_1	
				has_star_flag = monolith_system				
			}
			any_system_planet = {
				uninhabitable_regular_planet = yes				
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
		}
		set_star_flag = monolith_system
		random_system_planet = {
			limit = {
				uninhabitable_regular_planet = yes
				NOR = { has_planet_flag = precursor_world has_planet_flag = monolith_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = monolith_planet_2
			set_planet_flag = monolith_world
			enable_special_project = {
				name = "monolith_ARCHEOLOGY_2"				
				location = this
				owner = root
			}
		}
	}
	set_country_flag = ongoing_monolith_search
}


spawn_monolith_dig_site = {
	random_system_within_border = {
		limit = {
			NOR = { 
				has_star_flag = precursor_world 
				has_star_flag = shroud_invasion_target_1	
				has_star_flag = monolith_system	
				is_same_value = root.owner.capital_scope.solar_system
			}
			any_system_planet = {
				uninhabitable_regular_planet = yes				
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}				
			}
		}
		random_system_planet = {
			limit = {
				uninhabitable_regular_planet = yes
				NOR = { has_planet_flag = precursor_world has_planet_flag = monolith_world }
				has_owner = no
				has_anomaly = no
				is_surveyed = {
					who = root
					status = yes
				}
			}
			save_event_target_as = monolith_site_planet_3
			set_planet_flag = monolith_site_world
			create_archaeological_site = shroud_monolith_digsite
		}
	}
	set_country_flag = final_monolith_found
}